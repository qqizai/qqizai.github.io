<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>qizai</title>
  
  <subtitle>一个在IT行业摸爬打滚的程序猿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-30T08:48:28.178Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>qizai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>django踩坑记录(4)</title>
    <link href="http://yoursite.com/2019/11/13/django-err4/"/>
    <id>http://yoursite.com/2019/11/13/django-err4/</id>
    <published>2019-11-13T15:35:28.000Z</published>
    <updated>2019-11-30T08:48:28.178Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看"><a href="#0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看" class="headerlink" title="0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看"></a>0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看</h5><p>描述的情景如下图：<br><img src="https://note.youdao.com/yws/api/personal/file/54ED4E0E226340CEA9CFE4108A8547A0?method=download&amp;shareKey=8a38291ac6316a8d039a0d0975e34c19" alt="不同的form表单对应不同的标签"></p><p><img src="https://note.youdao.com/yws/api/personal/file/CCB8C3669E494ED18D31F06D81368E65?method=download&amp;shareKey=8d8a97dda2c2c008300b001ffe8e9d51" alt="form、及对应的标签"></p><p>代码实现思路：两个不同的登录方式是：账号密码登录和使用短信验证码登录。</p><a id="more"></a><p>1.如果是使用短信验证码登录的话，给它多传递一个字段用于区别这个form表单到底是哪个，如，<code>ynamic_login = True</code></p><p>2.设置这个字段用于标记，当前这个登录方式是短信验证码登录，然后将这个字段传递到前端的html页面里面，去判断，如果存在这个字段并且为<code>True</code>那么前端的html代码就展示短信验证码登录的相关代码即可。</p><p>3.下面看一下前端的相关代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;fl form-box&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;tab&quot;&gt;</span><br><span class="line">                    &lt;h2 class=&quot;&#123;% if dynamic_login %&#125;&#123;% else %&#125;active&#123;% endif %&#125;&quot;&gt;账号登录&lt;/h2&gt;</span><br><span class="line">                    &lt;h2 class=&quot;&#123;% if dynamic_login %&#125;active&#123;% else %&#125;&#123;% endif %&#125;&quot;&gt;动态登录&lt;/h2&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;form class=&quot;tab-form &#123;% if dynamic_login %&#125;hide&#123;% else %&#125;&#123;% endif %&#125;&quot; action=&quot;&#123;% url &apos;login&apos; %&#125;&quot; method=&quot;post&quot; autocomplete=&quot;off&quot; id=&quot;form1&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;form-group marb20 &#123;% if login_form.errors.username %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;username&quot; id=&quot;account_l&quot; value=&quot;&#123;&#123; login_form.username.value &#125;&#125;&quot; type=&quot;text&quot; placeholder=&quot;手机号/邮箱&quot; /&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;form-group marb8 &#123;% if login_form.errors.password %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;password&quot; id=&quot;password_l&quot; value=&quot;&#123;&#123; login_form.password.value &#125;&#125;&quot; type=&quot;password&quot; placeholder=&quot;请输入您的密码&quot; /&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;error btns login-form-tips&quot; id=&quot;jsLoginTips&quot;&gt;&#123;% if login_form.errors %&#125;&#123;% for key,error in login_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;% else %&#125;&#123;&#123; msg &#125;&#125;&#123;% endif %&#125;&lt;/div&gt;</span><br><span class="line">                     &lt;div class=&quot;auto-box marb38&quot;&gt;</span><br><span class="line">&lt;a class=&quot;fr&quot; href=&quot;forgetpwd.html&quot;&gt;忘记密码？&lt;/a&gt;</span><br><span class="line">                     &lt;/div&gt;</span><br><span class="line">                     &lt;input class=&quot;btn btn-green&quot; id=&quot;jsLoginBtn&quot; type=&quot;submit&quot; value=&quot;立即登录 &gt; &quot; /&gt;</span><br><span class="line">                    &#123;% csrf_token %&#125;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">                &lt;form class=&quot;tab-form &#123;% if dynamic_login %&#125;&#123;% else %&#125;hide&#123;% endif %&#125;&quot; action=&quot;&#123;% url &apos;d_login&apos; %&#125;&quot; id=&quot;mobile_register_form&quot; autocomplete=&quot;off&quot; method=&quot;post&quot; id=&quot;form2&quot;&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;form-group marb20&quot;&gt;</span><br><span class="line">                        &lt;input id=&quot;jsRegMobile&quot; value=&quot;&#123;&#123; login_form.mobile.value|default_if_none:&apos;&apos; &#125;&#125;&quot; name=&quot;mobile&quot; type=&quot;text&quot; placeholder=&quot;请输入您的手机号码&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;form-group marb20 blur&quot; id=&quot;jsRefreshCode&quot;&gt;</span><br><span class="line">                        &#123;&#123; login_form.captcha &#125;&#125;</span><br><span class="line">                        &#123;&#123; d_form.captcha &#125;&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;clearfix&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group marb8 verify-code&quot;&gt;</span><br><span class="line">                            &lt;input id=&quot;jsPhoneRegCaptcha&quot; value=&quot;&#123;&#123; login_form.code.value &#125;&#125;&quot; name=&quot;code&quot; type=&quot;text&quot; placeholder=&quot;输入手机验证码&quot;&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;input class=&quot;verify-code-btn sendcode&quot; id=&quot;jsSendCode&quot; value=&quot;发送验证码&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;error btns&quot; id=&quot;jsMobileTips&quot; style=&quot;&quot;&gt;&#123;% if login_form.errors %&#125;&#123;% for key,error in login_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;% else %&#125;&#123;&#123; msg &#125;&#125;&#123;% endif %&#125;&lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;auto-box marb8&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;input class=&quot;btn btn-green&quot; id=&quot;jsMobileRegBtn&quot; type=&quot;button&quot; value=&quot;立即登录&quot;&gt;</span><br><span class="line">                    &#123;% csrf_token %&#125;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">                &lt;p class=&quot;form-p&quot;&gt;没有慕学在线网帐号？&lt;a href=&quot;register.html&quot;&gt;[立即注册]&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>4.看一下后端代码：<br>views.py：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line">from django.shortcuts import render</span><br><span class="line">from django.views.generic.base import View</span><br><span class="line">from django.contrib.auth import authenticate, login, logout</span><br><span class="line">from django.http import HttpResponseRedirect, JsonResponse  # 提供url重定向; 提供返回json类型的数据</span><br><span class="line">from django.urls import reverse</span><br><span class="line"></span><br><span class="line">from users.forms import LoginForm, DynamicLoginForm, DynamicLoginPostForm</span><br><span class="line">from utils.random_str import generate_random</span><br><span class="line">from utils.YunPian import send_single_sms</span><br><span class="line">from MxOnline.settings import yp_api_key, REDIS_HOST, REDIS_PORT</span><br><span class="line">from users.models import UserProfile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DynamicLogin(View):</span><br><span class="line">    &quot;&quot;&quot;11-02 动态短信登录提交方式&quot;&quot;&quot;</span><br><span class="line">    def post(self, request, *args, **kwargs):</span><br><span class="line">        login_form = DynamicLoginPostForm(request.POST)</span><br><span class="line">        dynamic_login = True  # todo 这个标记用于，标记如果是动态登录的话，输出验证码，重新跳转的页面，给自动跳到原来的页面当中</span><br><span class="line">        if login_form.is_valid():</span><br><span class="line">            # 没有注册账号，依然可以登录(其实就是帮忙给注册一个)</span><br><span class="line">            mobile = login_form.cleaned_data[&quot;mobile&quot;]</span><br><span class="line">            existed_users = UserProfile.objects.filter(mobile=mobile)</span><br><span class="line">            if existed_users:</span><br><span class="line">                user = existed_users[0]</span><br><span class="line">            else:</span><br><span class="line">                # 不存在即创建一个用户</span><br><span class="line">                user = UserProfile(username=mobile)</span><br><span class="line">                password = generate_random(10, 2)</span><br><span class="line">                user.set_password(password)  # TODO 这里设置密码是要注意：如果使用user.password=password的话，那么这里是一个明文，一般不建议这样做；要使用密文可以使用user.set_password(password)</span><br><span class="line">                user.mobile = mobile</span><br><span class="line">                user.save()  # 保存创建的用户</span><br><span class="line"></span><br><span class="line">            login(request, user)</span><br><span class="line">            return HttpResponseRedirect(reverse(&quot;index&quot;))  # 登录之后跳转到首页</span><br><span class="line">        else:</span><br><span class="line">            d_form = DynamicLoginForm(request.POST)  # 这个是用于自动刷新验证码</span><br><span class="line">            return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form,</span><br><span class="line">                                                  &quot;dynamic_login&quot;: dynamic_login,</span><br><span class="line">                                                  &quot;d_form&quot;: d_form&#125;)  # 这个会自动校验，并且将错误的信息返回</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LoginView(View):</span><br><span class="line">    &quot;&quot;&quot;2019-10-29 1.必须继承这个View 2.下面的get和post分别表示不同的请求，在这里是表示重载这两种请求的方法&quot;&quot;&quot;</span><br><span class="line">    def get(self, request, *args, **kwargs):  # 这个request参数是Django自动注入的，不需要自己赋值</span><br><span class="line">        if request.user.is_authenticated:  # 10-30 如果用户是登录状态，点击login请求会自动重定向到首页</span><br><span class="line">            return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line">        login_form = DynamicLoginForm()</span><br><span class="line">        return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form&#125;)</span><br><span class="line"></span><br><span class="line">    def post(self, request, *args, **kwargs):</span><br><span class="line">        # username = request.POST.get(&quot;username&quot;)</span><br><span class="line">        # password = request.POST.get(&quot;password&quot;)</span><br><span class="line">        #</span><br><span class="line">        # # 方法1、通过用户名和密码查询用户是否存在</span><br><span class="line">        # user = authenticate(username=username, password=password)</span><br><span class="line"></span><br><span class="line">        # # 方法2、通过自定义的userprofile去查询，存在的问题有：数据库存的密码是密文，校验的时候需要再次加密才能进行校验</span><br><span class="line">        # from users.models import UserProfile</span><br><span class="line">        # user = UserProfile.objects.get(username=username, password=password)</span><br><span class="line"></span><br><span class="line">        login_form = LoginForm(request.POST)</span><br><span class="line"></span><br><span class="line">        if login_form.is_valid():</span><br><span class="line">            username = login_form.cleaned_data[&quot;username&quot;]  # todo 重点是这种用法，是这样从form里面提取对应的值</span><br><span class="line">            password = login_form.cleaned_data[&quot;password&quot;]</span><br><span class="line"></span><br><span class="line">            user = authenticate(username=username, password=password)</span><br><span class="line">            if user is not None:</span><br><span class="line">                login(request, user)</span><br><span class="line">                return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line">            else:</span><br><span class="line">                return render(request, &quot;login.html&quot;, &#123;&quot;msg&quot;: &quot;用户名或者密码错误&quot;, &quot;login_form&quot;: login_form&#125;)</span><br><span class="line">        else:</span><br><span class="line">            return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form&#125;)  # 这个会自动校验，并且将错误的信息返回</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LogoutView(View):</span><br><span class="line">    &quot;&quot;&quot;10-30 退出接口开发&quot;&quot;&quot;</span><br><span class="line">    def get(self, request, *args, **kwargs):</span><br><span class="line">        logout(request)</span><br><span class="line">        return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class SendSmsView(View):</span><br><span class="line">    &quot;&quot;&quot;2019-10-31 发送验证码&quot;&quot;&quot;</span><br><span class="line">    def post(self, request, *args, **kwargs):</span><br><span class="line">        send_sms_form = DynamicLoginForm(request.POST)</span><br><span class="line">        re_dict = &#123;&#125;</span><br><span class="line">        if send_sms_form.is_valid():</span><br><span class="line">            mobile = send_sms_form.cleaned_data[&quot;mobile&quot;]</span><br><span class="line">            # 随机生成验证码</span><br><span class="line">            code = generate_random(4, 0)</span><br><span class="line">            r = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, db=0, charset=&quot;utf-8&quot;, decode_responses=True)</span><br><span class="line">            r.set(str(mobile), code)</span><br><span class="line">            r.expire(str(mobile), 60*5)  # 设置5分钟失效</span><br><span class="line">            re_json = send_single_sms(api_key=yp_api_key, code=code, mobile=mobile)</span><br><span class="line">            if re_json[&quot;code&quot;] == 0:</span><br><span class="line">                re_dict[&quot;status&quot;] = &quot;success&quot;</span><br><span class="line">            else:</span><br><span class="line">                re_dict[&quot;msg&quot;] = re_json[&quot;msg&quot;]</span><br><span class="line">        else:</span><br><span class="line">            for key, value in send_sms_form.errors.items():</span><br><span class="line">                re_dict[key] = value[0]  # 注意这个value是list类型</span><br><span class="line"></span><br><span class="line">        return JsonResponse(re_dict)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class RegisterView(View):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure><p>forms.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/10/29 22:55</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : forms.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line">import redis</span><br><span class="line"></span><br><span class="line">from django import forms</span><br><span class="line">from captcha.fields import CaptchaField</span><br><span class="line"></span><br><span class="line">from MxOnline.settings import REDIS_PORT, REDIS_HOST</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LoginForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;2019-10-29 继承Django默认的form&quot;&quot;&quot;</span><br><span class="line">    username = forms.CharField(required=True, min_length=3)</span><br><span class="line">    password = forms.CharField(required=True, min_length=6)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DynamicLoginForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;10-30 图片验证码form，存图片验证码&quot;&quot;&quot;</span><br><span class="line">    mobile = forms.CharField(required=True, min_length=11, max_length=11)</span><br><span class="line">    captcha = CaptchaField()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DynamicLoginPostForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;11-02 短信登录方式，登录提交的时候&quot;&quot;&quot;</span><br><span class="line">    mobile = forms.CharField(required=True, min_length=11, max_length=11)</span><br><span class="line">    code = forms.CharField(required=True, min_length=4, max_length=4)</span><br><span class="line"></span><br><span class="line">    def clean_code(self):</span><br><span class="line">        &quot;&quot;&quot;11-03 add 这个能够可以指定验证的字段，并且抛出的异常就是这个指定的字段作为key&quot;&quot;&quot;</span><br><span class="line">        mobile = self.data.get(&quot;mobile&quot;)  # todo 这里校验指定字段的话，推荐使用self.data.get() ，因为使用这个程序是先调用def clean_code这个方法再到def clean方法的，所以self.cleaned_data[]可能会出现取不到的问题</span><br><span class="line">        code = self.data.get(&quot;code&quot;)</span><br><span class="line"></span><br><span class="line">        r = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, db=0, charset=&quot;utf-8&quot;, decode_responses=True)</span><br><span class="line">        redis_code = r.get(str(mobile))</span><br><span class="line">        if code != redis_code:</span><br><span class="line">            raise forms.ValidationError(&quot;验证码不正确&quot;)  # 主动抛出异常，但是抛出的异常的key字段是这里这个方法的clean_code对应的字段，即key就是code</span><br><span class="line">        return self.cleaned_data</span><br><span class="line"></span><br><span class="line">    # def clean(self):</span><br><span class="line">    #     &quot;&quot;&quot;这个是进行验证这个form的数据&quot;&quot;&quot;</span><br><span class="line">    #     mobile = self.cleaned_data[&quot;mobile&quot;]</span><br><span class="line">    #     code = self.cleaned_data[&quot;code&quot;]</span><br><span class="line">    #</span><br><span class="line">    #     r = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, db=0, charset=&quot;utf-8&quot;, decode_responses=True)</span><br><span class="line">    #     redis_code = r.get(str(mobile))</span><br><span class="line">    #     if code != redis_code:</span><br><span class="line">    #         raise forms.ValidationError(&quot;验证码不正确&quot;)  # 主动抛出异常，但是抛出的异常的key字段是__all__不能自定义字段，所以这个clean不推荐使用，推荐使用clean_code</span><br><span class="line">    #     return self.cleaned_data</span><br></pre></td></tr></table></figure><h5 id="0x0d、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格"><a href="#0x0d、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格" class="headerlink" title="0x0d、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格"></a>0x0d、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格</h5><p>错误代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;</span><br><span class="line">&lt;h2&gt;所在地区&lt;/h2&gt;</span><br><span class="line">&lt;div class=&quot;more&quot;&gt;更多&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;cont&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;?ct=&#123;&#123; category &#125;&#125;&quot;&gt;&lt;span class=&quot;&#123;% ifequal city_id &apos;&apos; %&#125;active2&#123;% endifequal %&#125;&quot;&gt;全部&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">        &#123;% for city in all_citys %&#125;</span><br><span class="line">             &lt;a href=&quot;?city=&#123;&#123; city.id &#125;&#125;&amp;ct=&#123;&#123; category &#125;&#125;&quot;&gt;&lt;span class=&quot;&#123;% ifequal city_id city.id|stringformat: &apos;i&apos; %&#125;active2&#123;% endifequal %&#125;&quot;&gt;&#123;&#123; city.name &#125;&#125;&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure></p><p>再放大一点给宁萌康康：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">再定位准确一点就是下面这里：</span><br><span class="line">&#123;% ifequal city_id city.id|stringformat: &apos;i&apos; %&#125;</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">出错的原因是stringformat: &apos;i&apos;，这里中间有个空格隔开了，而导致的不能识别</span><br><span class="line"></span><br><span class="line">鄙人将其改为下面这个即可正确解析网页：</span><br><span class="line">&#123;% ifequal city_id city.id|stringformat:&apos;i&apos; %&#125;</span><br></pre></td></tr></table></figure><p>这个bug找的我好辛苦，是在下太菜了，跪了跪了 ○|￣|_</p><p>延伸：django中文文档，个人感觉已经很好的了，本小点的知识点链接，<a href="https://docs.djangoproject.com/zh-hans/2.2/ref/templates/builtins/" target="_blank" rel="noopener">请点击我进行了解</a></p><h5 id="0x0e、对查询结果进行排序，直接使用object-order-by-“object字段名”"><a href="#0x0e、对查询结果进行排序，直接使用object-order-by-“object字段名”" class="headerlink" title="0x0e、对查询结果进行排序，直接使用object.order_by(“object字段名”)"></a>0x0e、对查询结果进行排序，直接使用object.order_by(“object字段名”)</h5><p>降序是：object.order_by(“-object字段名”)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sort = request.GET.get(&quot;sort&quot;, &quot;&quot;)</span><br><span class="line">if sort == &quot;students&quot;:</span><br><span class="line">    all_orgs = all_orgs.order_by(&quot;-students&quot;)  # 降序students</span><br><span class="line">elif sort == &quot;courses&quot;:</span><br><span class="line">    all_orgs = all_orgs.filter(&quot;-course_nums&quot;)  # 对course_nums降序</span><br></pre></td></tr></table></figure><h5 id="0x10、forloop：在html-for循环中能够记住当前的index是第几个"><a href="#0x10、forloop：在html-for循环中能够记住当前的index是第几个" class="headerlink" title="0x10、forloop：在html for循环中能够记住当前的index是第几个"></a>0x10、forloop：在html for循环中能够记住当前的index是第几个</h5><p>详情使用如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;right companyrank layout&quot;&gt;</span><br><span class="line">&lt;div class=&quot;head&quot;&gt;授课机构排名&lt;/div&gt;</span><br><span class="line">        &#123;% for hot_org in hot_orgs %&#125;</span><br><span class="line">            &lt;dl class=&quot;des&quot;&gt;</span><br><span class="line">                &lt;dt class=&quot;num fl&quot;&gt;&#123;&#123; forloop.counter &#125;&#125;&lt;/dt&gt;</span><br><span class="line">                &lt;dd&gt;</span><br><span class="line">                    &lt;a href=&quot;/company/2/&quot;&gt;&lt;h1&gt;&#123;&#123; hot_org.name &#125;&#125;&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">                    &lt;p&gt;&#123;&#123; hot_org.address &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><h5 id="0x11、通过url的include机制，设计url匹配模式"><a href="#0x11、通过url的include机制，设计url匹配模式" class="headerlink" title="0x11、通过url的include机制，设计url匹配模式"></a>0x11、通过url的include机制，设计url匹配模式</h5><ul><li><p>[ ] 当时旧版url模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">urls.py部分：</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^org_list/&apos;, OrgView.as_view(), name=&quot;org_list&quot;),  # OrgView为对应app的views里面的某个view；name是等于给这个url起个标签类似的</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">html使用：</span><br><span class="line">&lt;a class=&quot;more&quot; href=&quot;&#123;% url &apos;org_list&apos; %&#125;&quot;&gt;查看更多机构 &gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>[x] 使用include机制的模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^org/&apos;, include((&apos;organizations.urls&apos;, &quot;organizations&quot;), namespace=&quot;org&quot;)),  # 如果不熟悉，请查看源码，urlconf_module, app_name = (&quot;organizations.urls&quot;, &quot;organizations&quot;)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">html使用：</span><br><span class="line">&lt;a class=&quot;more&quot; href=&quot;&#123;% url &apos;org:list&apos; %&#125;&quot;&gt;查看更多机构 &gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&quot;&gt;&lt;a href=&quot;#0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&quot; class=&quot;headerlink&quot; title=&quot;0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&quot;&gt;&lt;/a&gt;0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&lt;/h5&gt;&lt;p&gt;描述的情景如下图：&lt;br&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/54ED4E0E226340CEA9CFE4108A8547A0?method=download&amp;amp;shareKey=8a38291ac6316a8d039a0d0975e34c19&quot; alt=&quot;不同的form表单对应不同的标签&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/CCB8C3669E494ED18D31F06D81368E65?method=download&amp;amp;shareKey=8d8a97dda2c2c008300b001ffe8e9d51&quot; alt=&quot;form、及对应的标签&quot;&gt;&lt;/p&gt;&lt;p&gt;代码实现思路：两个不同的登录方式是：账号密码登录和使用短信验证码登录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
      <category term="Django踩坑记录" scheme="http://yoursite.com/tags/Django%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>django踩坑记录(3)</title>
    <link href="http://yoursite.com/2019/11/06/django-err3/"/>
    <id>http://yoursite.com/2019/11/06/django-err3/</id>
    <published>2019-11-06T05:00:32.000Z</published>
    <updated>2019-11-30T08:40:11.872Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的"><a href="#0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的" class="headerlink" title="0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)"></a>0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)</h5><p>可以通过在任何一个app里面的adminx里面增加下面这些代码即可：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class GlobalSettings(object):</span><br><span class="line">    &quot;&quot;&quot;设置后台管理系统的名字及页底的copyright&quot;&quot;&quot;</span><br><span class="line">    site_title = &quot;慕学后台管理系统&quot;</span><br><span class="line">    site_footer = &quot;慕学在线网&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class BaseSettings(object):</span><br><span class="line">    &quot;&quot;&quot;设置Django换肤功能&quot;&quot;&quot;</span><br><span class="line">    enable_themes = True</span><br><span class="line">    use_bootswatch = True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xadmin.site.register(xadmin.views.CommAdminView, GlobalSettings)</span><br><span class="line">xadmin.site.register(xadmin.views.BaseAdminView, BaseSettings)  # 这两个千万别打错、别继承错，不然就是设置无效</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/api/personal/file/998D0CB0ABA244FA87AC80E2229CD2E9?method=download&amp;shareKey=c75adbe3bc22a47df9d8aec064d89cc3" alt="设置自定义的页面属性,后台管理显示的字段，copyright，换肤功能"></p><h5 id="0x0b、Django前端路由的注意事项"><a href="#0x0b、Django前端路由的注意事项" class="headerlink" title="0x0b、Django前端路由的注意事项"></a>0x0b、Django前端路由的注意事项</h5><ol><li>路由加“/”和不加的区别：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 情况1</span><br><span class="line">path(&apos;login/&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 情况2</span><br><span class="line">path(&apos;login&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</span><br></pre></td></tr></table></figure></li></ol><div class="table-container"><table><thead><tr><th>字段</th><th>结果</th></tr></thead><tbody><tr><td>情况1</td><td>前端访问<code>http://127.0.0.1:8000/login/</code>或者<code>http://127.0.0.1:8000/login</code>这个地址都是可以找的到的</td></tr><tr><td>情况2</td><td>只能访问<code>http://127.0.0.1:8000/login</code>;不能访问<code>http://127.0.0.1:8000/login/</code></td></tr></tbody></table></div><ol><li>顺带说一下，Django提供了一个很方便的使用方法，可以减少后期的维护工作量，方便开发者随意变更url地址(即便如此，也希望各位尽量少变更，避免出现异常/未全部同步更改的情况)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 情况3</span><br><span class="line">path(&apos;login/&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</span><br><span class="line"></span><br><span class="line"># 情况4</span><br><span class="line">path(&apos;login/&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;))</span><br></pre></td></tr></table></figure><p>情况3和情况4其实就是在于<code>name=&quot;login&quot;</code>，你可以理解为，在这里为这个url的地址额外添加一个名字，这个名字就是叫”login”,然后你每次叫这个名字的时候，其实都是叫他前面填的这个”login/“。</p><p>然后在前端页面里面，这样来使用这个url的名字，就可以做到不用写死url了，方便后期的维护<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a style=&quot;color:white&quot; class=&quot;fr loginbtn&quot; href=&quot;&#123;% url &apos;login&apos; %&#125;&quot;&gt;登录&lt;/a&gt;</span><br></pre></td></tr></table></figure><br>例如：你想修改登录的url为<code>http://127.0.0.1:8000/login23/</code>,那么你只需要修改代码为<code>path(&#39;login23/&#39;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</code>即可达到你的目的</p><h5 id="0x0c、自定义form表单校验数据-继承Django的form来书写"><a href="#0x0c、自定义form表单校验数据-继承Django的form来书写" class="headerlink" title="0x0c、自定义form表单校验数据(继承Django的form来书写)"></a>0x0c、自定义form表单校验数据(继承Django的form来书写)</h5><p>如用户的登录操作，可以定义得以一个form来校验<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from django import forms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LoginForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;继承Django默认的form&quot;&quot;&quot;</span><br><span class="line">    username = forms.CharField(required=True, min_length=3)</span><br><span class="line">    password = forms.CharField(required=True, min_length=6)</span><br></pre></td></tr></table></figure></p><p>使用方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from users.forms import LoginForm</span><br><span class="line"></span><br><span class="line">login_form = LoginForm(request.POST)</span><br><span class="line">        if login_form.is_valid():</span><br><span class="line">            username = login_form.cleaned_data[&quot;username&quot;]  # 重点是这种用法，是这样从form里面提取对应字段的值</span><br><span class="line">            password = login_form.cleaned_data[&quot;password&quot;]</span><br><span class="line"></span><br><span class="line">            user = authenticate(username=username, password=password)</span><br><span class="line">            if user is not None:</span><br><span class="line">                login(request, user)</span><br><span class="line">                return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line">            else:</span><br><span class="line">                return render(request, &quot;login.html&quot;, &#123;&quot;msg&quot;: &quot;用户名或者密码错误&quot;, &quot;login_form&quot;: login_form&#125;) </span><br><span class="line">        else:</span><br><span class="line">            return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form&#125;)  # 这个会自动校验，并且将错误的信息返回</span><br></pre></td></tr></table></figure><p>如果校验失败，那么返回的<code>login_form</code>字段里面带有下面这种用法的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if login_form.errors %&#125;</span><br><span class="line">    &#123;% for key,error in login_form.errors.items %&#125;</span><br><span class="line">        &#123;&#123; error &#125;&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    &#123;&#123; msg &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>就是可以直接提取/使用错误信息，直接返回到前端展示。</p><p>与此同时，还能够将前端的输入框做校验，选中提示是哪个字段出现异常，详情请看下边的完整的form表单的代码示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;form class=&quot;tab-form&quot; action=&quot;&#123;% url &apos;login&apos; %&#125;&quot; method=&quot;post&quot; autocomplete=&quot;off&quot; id=&quot;form1&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;form-group marb20 &#123;% if login_form.errors.username %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">        &lt;input name=&quot;username&quot; id=&quot;account_l&quot; value=&quot;&#123;&#123; login_form.username.value &#125;&#125;&quot; type=&quot;text&quot; placeholder=&quot;手机号/邮箱&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;form-group marb8 &#123;% if login_form.errors.password %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">        &lt;input name=&quot;password&quot; id=&quot;password_l&quot; value=&quot;&#123;&#123; login_form.password.value &#125;&#125;&quot; type=&quot;password&quot; placeholder=&quot;请输入您的密码&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;error btns login-form-tips&quot; id=&quot;jsLoginTips&quot;&gt;&#123;% if login_form.errors %&#125;&#123;% for key,error in login_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;% else %&#125;&#123;&#123; msg &#125;&#125;&#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;auto-box marb38&quot;&gt;&lt;a class=&quot;fr&quot; href=&quot;forgetpwd.html&quot;&gt;忘记密码？&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;input class=&quot;btn btn-green&quot; id=&quot;jsLoginBtn&quot; type=&quot;submit&quot; value=&quot;立即登录 &gt; &quot; /&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的&quot;&gt;&lt;a href=&quot;#0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的&quot; class=&quot;headerlink&quot; title=&quot;0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)&quot;&gt;&lt;/a&gt;0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)&lt;/h5&gt;&lt;p&gt;可以通过在任何一个app里面的adminx里面增加下面这些代码即可：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
      <category term="Django踩坑记录" scheme="http://yoursite.com/tags/Django%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>django踩坑记录(2)</title>
    <link href="http://yoursite.com/2019/11/03/django-err2/"/>
    <id>http://yoursite.com/2019/11/03/django-err2/</id>
    <published>2019-11-03T11:18:07.000Z</published>
    <updated>2019-11-30T08:37:41.795Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x05、由于相对-绝对路径写错导致"><a href="#0x05、由于相对-绝对路径写错导致" class="headerlink" title="0x05、由于相对/绝对路径写错导致"></a>0x05、由于相对/绝对路径写错导致</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>异常描述</td><td>RuntimeError: Model class apps.courses.models.Course doesn’t declare an explicit app_label and isn’t in an application in INSTALLED_APPS.</td></tr><tr><td>解决方法</td><td>修改其他app的models引用其他app的model的写法，即这个错误由于导入model的时候，写错相对/绝对路径而引起的，==最坑的是，pycharm不给你报错，而显示是正常导入的模块==</td></tr></tbody></table></div><a id="more"></a><h6 id="报错代码："><a href="#报错代码：" class="headerlink" title="报错代码："></a>报错代码：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RuntimeError: Model class apps.courses.models.Course doesn&apos;t declare an explicit app_label and isn&apos;t in an application in INSTALLED_APPS.</span><br></pre></td></tr></table></figure><p>解决方法如下：<br><img src="https://note.youdao.com/yws/api/personal/file/B9D9CD3CDF7042D8B60222A43603806B?method=download&amp;shareKey=92a3ceb39b2fbff437fed4ed58022728" alt="引用模块的路径错误"></p><p>正确解决方法：<br><img src="https://note.youdao.com/yws/api/personal/file/368D525F123B4F3585975D1810245CE2?method=download&amp;shareKey=3a20bc912893085a572447517770efcd" alt="正确的引用模块"></p><p>为什么是这样引用呢？<br>大概是因为，你在项目的settings.py中已经install了这个users的app，所以django知道这个users的app在哪里，所以引用的时候就不再需要带上前缀apps.也能正确使用(可能说的不准，仅供参考，欢迎各位指正)</p><h5 id="0x06、用于外键未正确设置导致的错误"><a href="#0x06、用于外键未正确设置导致的错误" class="headerlink" title="0x06、用于外键未正确设置导致的错误"></a>0x06、用于外键未正确设置导致的错误</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>MxOnline\apps\operations\models.py</td></tr><tr><td>异常描述</td><td></td></tr></tbody></table></div><p>TypeError: <strong>init</strong>() missing 1 required positional argument: ‘on_delete’<br>解决方法 | 将涉及到外键的地方做相对应的修改,必须加上on_delete这个参数，这个参数表名，如果主键的数据删除了，那么外键的数据应该怎么办，这时候可以考虑是否级联删除或者设置为空字段等等，需要具体情况具体分析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 增加on_delete=models.CASCADE即可</span><br><span class="line">user = models.ForeignKey(UserProfile, verbose_name=&quot;用户&quot;, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure><h5 id="0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文-admin-xadmin开发的"><a href="#0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文-admin-xadmin开发的" class="headerlink" title="0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文(admin/xadmin开发的)"></a>0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文(admin/xadmin开发的)</h5><p>例如：编写了models之后，是需要再admin/adminx里面添加注册APP的信息，如果不添加，就在后台管理系统看不到的</p><ol><li><p>不注册course app<br><img src="https://note.youdao.com/yws/api/personal/file/05AD1A8216244BB68BAE78CB36BAEE95?method=download&amp;shareKey=ea5345b079d9067813149310f68c6d92" alt="不注册course app"></p></li><li><p>代码adminx里面未注册course<br><img src="https://note.youdao.com/yws/api/personal/file/2AE64705F21E444F904B93A1D8C9EE16?method=download&amp;shareKey=b15b86ac6dcdfd38edca2eb0a6e1b625" alt="adminx里面未注册course"></p></li><li><p>将adminx代码里面的注释去掉之后，即可注册course app<br><img src="https://note.youdao.com/yws/api/personal/file/655C52936CA1496E91B59D93149960DA?method=download&amp;shareKey=f537b32f19935da9bf64980a726d4e68" alt="将adminx里面的注释去掉之后，即可注册course app"></p></li><li><p>修改注册的COURSE这个app显示的名字</p></li></ol><p><img src="https://note.youdao.com/yws/api/personal/file/35575C32391A46529BFDC93074014995?method=download&amp;shareKey=a1baaebc1090bf06d05d9f65bd69cfa7" alt="增加verbose_name即可修改默认显示的app名字"></p><p>重启django、Ctrl+F5刷新即可看到效果：<br><img src="https://note.youdao.com/yws/api/personal/file/873A78DAE21D44508D40CAF309EACCD0?method=download&amp;shareKey=7398f49c1a37a3d1b690cbec6dcb7ffe" alt="更改之后结果图"></p><h5 id="0x08、如何修改添加某个city之后，提示的描述符不为“xxx-object”的情况"><a href="#0x08、如何修改添加某个city之后，提示的描述符不为“xxx-object”的情况" class="headerlink" title="0x08、如何修改添加某个city之后，提示的描述符不为“xxx object”的情况"></a>0x08、如何修改添加某个city之后，提示的描述符不为“xxx object”的情况</h5><p><img src="https://note.youdao.com/yws/api/personal/file/50AF19B25C6D45F6A874B925BFA3F736?method=getImage&amp;version=7412&amp;cstk=6iRGWRtP" alt="object提示符"></p><ol><li><p>代码实现，在对应的model里面，重新定义返回的<code>def __str__(self)：return self.name</code>这个方法，指定返回是name字段<br><img src="https://note.youdao.com/yws/api/personal/file/D32D832CB37A4D8086D80FFA6CD9C583?method=getImage&amp;version=7465&amp;cstk=IayEijDf" alt="代码实现"></p></li><li><p>修改之后结果：<br><img src="https://note.youdao.com/yws/api/personal/file/3CD3938F93F440FB9764506C701E1F8E?method=getImage&amp;version=7489&amp;cstk=IayEijDf" alt="显示指定的字段——city name"></p></li></ol><h5 id="0x09、如何指定显示、搜索、过滤、编辑指定的字段-列"><a href="#0x09、如何指定显示、搜索、过滤、编辑指定的字段-列" class="headerlink" title="0x09、如何指定显示、搜索、过滤、编辑指定的字段/列"></a>0x09、如何指定显示、搜索、过滤、编辑指定的字段/列</h5><ol><li>如何显示、搜索、过滤、编辑指定的列：<br><img src="https://note.youdao.com/yws/api/personal/file/3D7743CA55584EBC887916E3203550D6?method=getImage&amp;version=7464&amp;cstk=6iRGWRtP" alt="如何显示、搜索、过滤、编辑指定的列"></li></ol><ol><li>可以通过增加下面代实现(在adminx/admin中添加)：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class CityAdmin(object):</span><br><span class="line">    list_display = [&quot;id&quot;, &quot;name&quot;, &quot;desc&quot;, &quot;add_time&quot;]  # 指定显示某些列/字段</span><br><span class="line">    search_fields = [&quot;name&quot;, &quot;desc&quot;, &quot;add_time&quot;]  # 指定搜索的字段/列</span><br><span class="line">    list_filter = [&quot;name&quot;, &quot;desc&quot;, &quot;add_time&quot;]  # 指定可以选择过滤的字段/列</span><br><span class="line">    list_editable = [&quot;name&quot;, &quot;desc&quot;]  # 指定可以在列表那里就能修改的字段(方便修改，不用点进去也能编辑那种)</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/api/personal/file/636F341BBF574A2185A49A84ABD9970A?method=getImage&amp;version=7478&amp;cstk=6iRGWRtP" alt="增加代码list_display"></p><p>修改代码之后，结果如下：<br><img src="https://note.youdao.com/yws/api/personal/file/19C5F7A7449B401A819090C29E5A31C7?method=getImage&amp;version=7487&amp;cstk=6iRGWRtP" alt="结果指定列"></p><h6 id="再来一个玩法："><a href="#再来一个玩法：" class="headerlink" title="再来一个玩法："></a>再来一个玩法：</h6><p>如果需要也==过滤model里面的外键==的话，是通过这样的方式来使用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class CourseAdmin(object):</span><br><span class="line">    list_display = [&quot;name&quot;, &quot;desc&quot;, &quot;detail&quot;, &quot;degree&quot;, &quot;learn_times&quot;, &quot;students&quot;]</span><br><span class="line">    search_fields = [&quot;name&quot;, &quot;desc&quot;, &quot;detail&quot;, &quot;degree&quot;, &quot;students&quot;]</span><br><span class="line">    list_filter = [&quot;name&quot;, &quot;teacher__name&quot;, &quot;desc&quot;, &quot;detail&quot;, &quot;learn_times&quot;, &quot;degree&quot;, &quot;students&quot;]  # 外键可以通过&quot;course__name&quot;这种添加双下划线，然后指定某个字段来设置过滤</span><br><span class="line">    list_editable = [&quot;degree&quot;, &quot;desc&quot;]</span><br></pre></td></tr></table></figure><p>其中teacher字段就是外键，Django里面设置外键有点像是引用整个model字段，然后使用这个model指定name字段来作过滤/搜索.</p><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x05、由于相对-绝对路径写错导致&quot;&gt;&lt;a href=&quot;#0x05、由于相对-绝对路径写错导致&quot; class=&quot;headerlink&quot; title=&quot;0x05、由于相对/绝对路径写错导致&quot;&gt;&lt;/a&gt;0x05、由于相对/绝对路径写错导致&lt;/h5&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;详细描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;apps.users.models.BaseModel(类)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;异常描述&lt;/td&gt;
&lt;td&gt;RuntimeError: Model class apps.courses.models.Course doesn’t declare an explicit app_label and isn’t in an application in INSTALLED_APPS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;解决方法&lt;/td&gt;
&lt;td&gt;修改其他app的models引用其他app的model的写法，即这个错误由于导入model的时候，写错相对/绝对路径而引起的，==最坑的是，pycharm不给你报错，而显示是正常导入的模块==&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>django踩坑记录(1)</title>
    <link href="http://yoursite.com/2019/10/24/django-err1/"/>
    <id>http://yoursite.com/2019/10/24/django-err1/</id>
    <published>2019-10-24T01:30:45.000Z</published>
    <updated>2019-11-30T08:37:30.584Z</updated>
    
    <content type="html"><![CDATA[<h6 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h6><p>祝各位程序猿<strong>1024程序员节快乐</strong><br><strong><em>No +班，No bug，No 996.</em></strong></p><p>Desc: 简单记录一下，使用Django开发的采坑记录，如果以后再遇到这种情况的时候，可以快速知道如何解决</p><a id="more"></a><h5 id="0x01、设计表结构的几个重要点"><a href="#0x01、设计表结构的几个重要点" class="headerlink" title="0x01、设计表结构的几个重要点"></a>0x01、设计表结构的几个重要点</h5><ul><li>[x] 首先找出有哪些实体</li><li>[x] 然后找出这些实体有哪些字段</li><li>[x] 每个字段的类型、是否必填、长度是多少、是否存在默认值(有些字段是需要拿最小的单位去存储，避免从低精度转换到高精度的时候，出现丢失精度的情况)</li></ul><h6 id="实体1-lt-关系-gt-实体2"><a href="#实体1-lt-关系-gt-实体2" class="headerlink" title="实体1  &lt;关系&gt;  实体2"></a>实体1  &lt;关系&gt;  实体2</h6><p>例如：在django开发在线教育网站里边，存在的实体如下：<br>课程  章节  视频   课程资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">实体1  &lt;关系&gt;  实体2</span><br><span class="line">课程    章节   视频    课程资源</span><br><span class="line">  │       │      │        │</span><br><span class="line">  │       │      │        |</span><br><span class="line">  │       │      └──1  :  N</span><br><span class="line">  │       └──1 : N</span><br><span class="line">  └── 1 : N</span><br></pre></td></tr></table></figure></p><h5 id="0x02、自定义扩展django的用户表格auth-user表格，增加自定义字段"><a href="#0x02、自定义扩展django的用户表格auth-user表格，增加自定义字段" class="headerlink" title="0x02、自定义扩展django的用户表格auth_user表格，增加自定义字段"></a>0x02、自定义扩展django的用户表格auth_user表格，增加自定义字段</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>想要的功能描述</td><td>django自带的auth_user表格的基本字段不能满足开发需要的时候，如何才能在基础的auth_user表格上面扩展增加字段呢</td></tr><tr><td>解决方法</td><td>在users.models里面增加一个类，这个类的的内容如下：这个类一定要继承<code>from django.contrib.auth.models import AbstractUser</code>,即==AbstractUser==</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">from django.db import models</span><br><span class="line">from django.contrib.auth.models import AbstractUser  # 自定义扩展的类，即增加多与原来的字段，一定要继承这个类</span><br><span class="line"></span><br><span class="line">GENDER_CHOICES = (</span><br><span class="line">    (&quot;male&quot;, &quot;男&quot;),</span><br><span class="line">    (&quot;female&quot;, &quot;女&quot;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class UserProfile(AbstractUser):</span><br><span class="line">    &quot;&quot;&quot;用户表.2019-10-18重载django默认的auth_user，自定义扩展字段，一定要继承AbstractUser这个类&quot;&quot;&quot;</span><br><span class="line">    nick_name = models.CharField(max_length=50, verbose_name=&quot;昵称&quot;, default=&quot;&quot;)</span><br><span class="line">    birthday = models.DateField(verbose_name=&quot;出生日期&quot;, null=True, blank=True)</span><br><span class="line">    gender = models.CharField(max_length=6, verbose_name=&quot;性别&quot;, choices=GENDER_CHOICES)</span><br><span class="line">    address = models.CharField(max_length=100, verbose_name=&quot;地址&quot;, default=&quot;&quot;)</span><br><span class="line">    mobile = models.CharField(max_length=11, verbose_name=&quot;手机号码&quot;, unique=True)  # 注意手机号是唯一的</span><br><span class="line">    image = models.ImageField(upload_to=&quot;head_image/%Y/%m&quot;, default=&quot;default.jpg&quot;)</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        verbose_name = &quot;用户信息&quot;</span><br><span class="line">        verbose_name_plural = verbose_name  # 这个为了避免前端展示的时候出现“课程信息s”这个字眼</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        if self.nick_name:</span><br><span class="line">            return self.nick_name</span><br><span class="line">        else:</span><br><span class="line">            return self.username</span><br></pre></td></tr></table></figure><h5 id="0x03、数据表字段“添加时间”一直出现异常"><a href="#0x03、数据表字段“添加时间”一直出现异常" class="headerlink" title="0x03、数据表字段“添加时间”一直出现异常"></a>0x03、数据表字段“添加时间”一直出现异常</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>异常描述</td><td>后续添加的记录当中，所有的添加时间这个字段的时间都是一个时间，添加的时间都是项目启动的时候，编译的时间</td></tr><tr><td>解决方法</td><td>字段里面的==datetime.now()==改为==datetime.now==</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class BaseModel(models.Model):</span><br><span class="line">    &quot;&quot;&quot;这是公共的类&quot;&quot;&quot;</span><br><span class="line">    add_time = models.DateField(default=datetime.now, verbose_name=&quot;添加时间&quot;)  </span><br><span class="line">    # 一定要注意这里填写的是datetime.now而不是datetime.now()，</span><br><span class="line">    # 如果是datetime.now()那么这个字段的时间就是编译时间，不是我们想要的添加时间</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        abstract = True  # 添加这个是避免生成一个单独的表格</span><br></pre></td></tr></table></figure><h5 id="0x04、如何避免添加一个基类，导致生成一个新的、单独的表格"><a href="#0x04、如何避免添加一个基类，导致生成一个新的、单独的表格" class="headerlink" title="0x04、如何避免添加一个基类，导致生成一个新的、单独的表格"></a>0x04、如何避免添加一个基类，导致生成一个新的、单独的表格</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>异常描述</td><td>编写的这个BaseModel类只是作为一个公共的类来继承、扩展的，与此同时，他自动生成了一个新的表格，但这不是我想要的</td></tr><tr><td>解决方法</td><td>在这个类的最后添加一个Meta，如: <code>class Meta: abstract = True</code>来达到避免生成一个新的、单独的表格</td></tr></tbody></table></div><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h6&gt;&lt;p&gt;祝各位程序猿&lt;strong&gt;1024程序员节快乐&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;No +班，No bug，No 996.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Desc: 简单记录一下，使用Django开发的采坑记录，如果以后再遇到这种情况的时候，可以快速知道如何解决&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>必知必会:selenuim/pyppeteer模拟登陆防检测,能够屏蔽一小部分简单的检测</title>
    <link href="http://yoursite.com/2019/09/05/crack-selecnuim-or-pyppeteer/"/>
    <id>http://yoursite.com/2019/09/05/crack-selecnuim-or-pyppeteer/</id>
    <published>2019-09-04T16:56:05.000Z</published>
    <updated>2019-11-30T08:03:33.063Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p>对于使用模拟登陆等操作来爬虫的手段，已经很容易被检测了，网上很多教程是说在网站所有js代码执行之前来执行下面几个js代码来到达效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">js1 = &apos;&apos;&apos;() =&gt;&#123;Object.defineProperties(navigator,&#123; webdriver:&#123; get: () =&gt; false&#125;&#125;)&#125;&apos;&apos;&apos;</span><br><span class="line">js2 = &apos;&apos;&apos;() =&gt; &#123;alert(window.navigator.webdriver)&#125;&apos;&apos;&apos;</span><br><span class="line">js3 = &apos;&apos;&apos;() =&gt; &#123;window.navigator.chrome = &#123;runtime: &#123;&#125;, &#125;; &#125;&apos;&apos;&apos;</span><br><span class="line">js4 = &apos;&apos;&apos;() =&gt;&#123;Object.defineProperty(navigator, &apos;languages&apos;, &#123;get: () =&gt; [&apos;en-US&apos;, &apos;en&apos;]&#125;);&#125;&apos;&apos;&apos;</span><br><span class="line">js5 = &apos;&apos;&apos;() =&gt;&#123;Object.defineProperty(navigator, &apos;plugins&apos;, &#123;get: () =&gt; [1, 2, 3, 4, 5,6],&#125;);&#125;&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><a id="more"></a><p>确实修改成功了。这种写法就万无一失了吗？并不是这样的，如果此时你在模拟浏览器中通过点击链接、输入网址进入另一个页面，或者开启新的窗口，你会发现，<code>window.navigator.webdriver</code>这个对象又变成true了，所以这样并非根治。</p><h5 id="最近看到两篇文章，说可以解除使用selenuim-pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。"><a href="#最近看到两篇文章，说可以解除使用selenuim-pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。" class="headerlink" title="最近看到两篇文章，说可以解除使用selenuim/pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。"></a>最近看到两篇文章，说可以解除使用selenuim/pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。</h5><h5 id="一、selenuim设置仿被检测"><a href="#一、selenuim设置仿被检测" class="headerlink" title="一、selenuim设置仿被检测"></a>一、selenuim设置仿被检测</h5><p>原理大概如下：在启动Chromedriver之前，为Chrome开启实验性功能参数 ==excludeSwitches==，它的==值为 [‘enable-automation’]==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from selenium.webdriver import Chrome, ChromeOptions</span><br><span class="line"></span><br><span class="line">option = ChromeOptions()</span><br><span class="line">option.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;])</span><br><span class="line">driver = Chrome(options=option)</span><br></pre></td></tr></table></figure><p>然后设置这个参数之后，Chrome浏览器会提示你，叫你“停用开发者模式运行的扩展程序”，这时候你不要点击“停用”，你只需要忽略它或者点击那个叉叉，把它关掉即可。</p><p>上面这个方法是能够有效根治这个被检测的问题。</p><h5 id="二、pyppeteer爬虫界新秀，设置仿被检测"><a href="#二、pyppeteer爬虫界新秀，设置仿被检测" class="headerlink" title="二、pyppeteer爬虫界新秀，设置仿被检测"></a>二、pyppeteer爬虫界新秀，设置仿被检测</h5><p>由于Selenium启动的Chrome中，有几十个特征可以被识别，所以在爬虫界已经没有以前那么受欢迎了。模拟浏览器的新秀Puppeteer异军突起，逐渐受到了爬虫界的关注。Puppeteer需要使用JavaScript来控制，如果你是用Python，那么就需要使用Pyppeteer.</p><p>如果你使用模拟浏览器爬淘宝，你会发现，无论怎么修改参数，Selenium总是可以立刻被识别。但是如果你使用了本文的方法，用Pyppeteer抓取淘宝，你就会发现另外一个广阔的天地。</p><p>写这篇文章的时候（2019-08-15），Pyppeteer的最新版本为0.0.25</p><h6 id="设置教程："><a href="#设置教程：" class="headerlink" title="设置教程："></a>设置教程：</h6><p>此时，你可以在PyCharm中，按住Command键（Windows、Linux用户按住Ctrl键），鼠标左键点击 frompyppeteerimportlaunch中的 launch，自动跳转到Pyppeteer源代码中的 launcher.py文件</p><p>把代码往上翻，在第61行左右，找到如下的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AUTOMATION_ARGS = [</span><br><span class="line">    &apos;--enable-automation&apos;,</span><br><span class="line">    &apos;--password-store=basic&apos;,</span><br><span class="line">    &apos;--use-mock-keychain&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>将其改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AUTOMATION_ARGS = [</span><br><span class="line">    # &apos;--enable-automation&apos;,  # 注释掉可以设置window.nagivator.webdriver为undefined</span><br><span class="line">    &apos;--password-store=basic&apos;,</span><br><span class="line">    &apos;--use-mock-keychain&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>当你修改的时候，pycharm工具会提示你是否修改源码，选择<code>OK</code>即可,如果你想以后改回来也可以改回来，不过看官方的开源介绍，下一个版本0.0.26是支持通过传递参数来设置这些值的，所以让我们一起期待下一个版本呗！</p><h6 id="先别走呗，这里有可能有你需要的同类型的文章："><a href="#先别走呗，这里有可能有你需要的同类型的文章：" class="headerlink" title="先别走呗，这里有可能有你需要的同类型的文章："></a>先别走呗，这里有可能有你需要的同类型的文章：</h6><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/83472776" target="_blank" rel="noopener">python最好用的第三方库资源下载网址</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/81516304" target="_blank" rel="noopener">详细讲解aiohttp异步请求及使用，高效率</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;p&gt;对于使用模拟登陆等操作来爬虫的手段，已经很容易被检测了，网上很多教程是说在网站所有js代码执行之前来执行下面几个js代码来到达效果：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;js1 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt;&amp;#123;Object.defineProperties(navigator,&amp;#123; webdriver:&amp;#123; get: () =&amp;gt; false&amp;#125;&amp;#125;)&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js2 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt; &amp;#123;alert(window.navigator.webdriver)&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js3 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt; &amp;#123;window.navigator.chrome = &amp;#123;runtime: &amp;#123;&amp;#125;, &amp;#125;; &amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js4 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt;&amp;#123;Object.defineProperty(navigator, &amp;apos;languages&amp;apos;, &amp;#123;get: () =&amp;gt; [&amp;apos;en-US&amp;apos;, &amp;apos;en&amp;apos;]&amp;#125;);&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js5 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt;&amp;#123;Object.defineProperty(navigator, &amp;apos;plugins&amp;apos;, &amp;#123;get: () =&amp;gt; [1, 2, 3, 4, 5,6],&amp;#125;);&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CSS字体反爬实战，10分钟就能学会</title>
    <link href="http://yoursite.com/2019/09/03/crack-css/"/>
    <id>http://yoursite.com/2019/09/03/crack-css/</id>
    <published>2019-09-02T19:39:37.000Z</published>
    <updated>2019-11-30T08:09:06.867Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><h6 id="本次来解锁新姿势——CSS字体反爬。"><a href="#本次来解锁新姿势——CSS字体反爬。" class="headerlink" title="本次来解锁新姿势——CSS字体反爬。"></a>本次来解锁新姿势——CSS字体反爬。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在解决这个字体反爬的路上，当我以为解决这个反爬手段的时候，</span><br><span class="line">最后验证总的答案的时候，被打脸了！！！</span><br><span class="line">又被默默设埋伏了，踩了一个坑，巨大的，为何悲伤辣么大 &lt;(－︿－)&gt;</span><br><span class="line">不将html源码页面下载下来还真发现不了在哪写错了，不多说，赶紧来看一下呗~~</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="0x01、分析目标网站"><a href="#0x01、分析目标网站" class="headerlink" title="0x01、分析目标网站"></a>0x01、分析目标网站</h5><ol><li><p>还是同样的手段，打开F12进行选中数字，查看它的标签内容是什么<br><img src="https://img-blog.csdnimg.cn/20190824142418441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>很明显，看了三个标签，只有第一个是对上的，其他两个是对不上的，难道是所有页面都是第一个对上，后面数字都打乱？并不是的，经过多次请求发现，每次都是随机打乱的，打乱的看起来好像没有规则。</p></li><li><p>那我也随便找找，看看有什么突破口不，首先去找id属性去全局搜索，看一下有什么相关内容<br><img src="https://img-blog.csdnimg.cn/20190824142453989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>出现关联的数据如下：<br><img src="https://img-blog.csdnimg.cn/20190824142527463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824142717895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>出现的这两个东西，突然不知道是啥，那我就去谷歌一下呗，发现这两个是css知识里面的东西，又涨知识了</p></li></ol><blockquote><p>Tips：这些属性在文末有提到，可以翻到后面一起对照看</p></blockquote><ol><li>竟然没有什么突破口，那我继续搜索多几个看看<br><img src="https://img-blog.csdnimg.cn/20190824142816149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824142829854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><ul><li>[x] 看，这个content:”202”不就是我们想要的吗，太爽了，终于找到一点点突破口了，谷歌百度一下这个:before你会发现它是CSS里面的属性</li></ul><ol><li><p>再继续找找其他的数字看看，比如看到这个数字128：<br><img src="https://img-blog.csdnimg.cn/20190824142920870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>搜索这个属性看看，又发现了两个属性：position、left。position顾名思义就是位置的属性，用relative表示，翻译过来就是相对位置的意思<br><img src="https://img-blog.csdnimg.cn/20190824142949733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>跟前端展示的综合起来，大概的意思就是：相对的位置，然后left表示偏移的方向及偏移多少，然后最终才是我们肉眼在前端看到的正确位置的数字，那开始造起来呗，<strong>just do IT</strong>！</p></li></ol><h5 id="0x02、核心代码"><a href="#0x02、核心代码" class="headerlink" title="0x02、核心代码"></a>0x02、核心代码</h5><h6 id="1-、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型"><a href="#1-、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型" class="headerlink" title="(1)、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型"></a>(1)、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_offset(div_list, response_str):</span><br><span class="line">    &quot;&quot;&quot;提取那种是偏移量的情况&quot;&quot;&quot;</span><br><span class="line">    if len(div_list) == 4:</span><br><span class="line">        real_div = div_list[1:]</span><br><span class="line">        num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]</span><br><span class="line">    else:</span><br><span class="line">        real_div = div_list</span><br><span class="line">        if len(real_div) == 3:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]  # 用来存储正确位置的数值，最后将它们用字符串连接起来，再转化为int</span><br><span class="line">        elif len(real_div) == 2:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;]</span><br><span class="line">        elif len(real_div) == 1:</span><br><span class="line">            num = [&quot;0&quot;]</span><br><span class="line">            print(&quot;---特殊情况长度为:&#123;&#125;，直接就是原来标签内容real_div:&#123;&#125;&quot;.format(len(div_list), real_div))</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;----严重致命错误，real_div长度匹配不上，请检查.len(real_div):&#123;&#125;&quot;.format(len(real_div)))</span><br><span class="line">            num = []</span><br><span class="line">    pattern_left = r&quot;(?&lt;=.%s &#123; left:)(.*?)(?=em)&quot;  # 提取位移值</span><br><span class="line"></span><br><span class="line">    for index, div in enumerate(real_div):</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        content = div.xpath(&quot;./text()&quot;).extract_first(&quot;&quot;)  # 提取数字</span><br><span class="line">        is_left = re.search(pattern_left%class_name, response_str, re.S)  # 偏移情况</span><br><span class="line"></span><br><span class="line">        if not is_left:  # 顺序完全一致的情况下，可以添加</span><br><span class="line">            num[index] = content</span><br><span class="line">            continue</span><br><span class="line">        else:  # 数值出现异位情况</span><br><span class="line">            left_num = int(is_left.group()) if is_left else None</span><br><span class="line">            if not left_num:</span><br><span class="line">                print(&quot;在匹配到位置的re对象不为空的情况下，为啥还是取不到位移值？请检查是否出现错误.class_name:&#123;&#125; num:&#123;&#125; re对象left_num:&#123;&#125;&quot;.format(class_name, num,left_num))</span><br><span class="line">                raise ValueError(&quot;获取偏移量的时候，出现异常,理论上这里是不会触发的，因为前面已经判断是已经有值了，所有这里是不会出现这种情况的&quot;)</span><br><span class="line">            num[index + left_num] = content</span><br><span class="line">    result = &quot;&quot;.join(num)</span><br><span class="line">    print(&quot;当前标签匹配最终结果如下 num:&#123;&#125; real_div:&#123;&#125; div_list:&#123;&#125;&quot;.format(num, real_div, div_list))</span><br><span class="line">    return int(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_numbers(div_html, response_str):</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">    :param div_html: 传进来的xpath对象，div[@class=&apos;col-md-1&apos;]</span><br><span class="line">    :param response_str: html源码，也就是response.text</span><br><span class="line">    :return:int，返回当前div标签的真正数值</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    div_list = div_html.xpath(&quot;./div&quot;)  # 获取div[@class=&apos;col-md-1&apos;]下的所有div标签</span><br><span class="line"></span><br><span class="line">    if len(div_list) &lt; 3:  # todo: 长度小于3的(1和2)，若为2，那么提取第二个标签的值</span><br><span class="line">        div = div_list[-1]  # 取最后一个. 长度为1和2都是适用的</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        pattern = &quot;(?&lt;=.%s:before &#123; content:\&quot;)(.*?)(?=\&quot;)&quot; % class_name  # .sklgp0fhDg:before &#123; content:&quot;116&quot; &#125;  这种情况就是</span><br><span class="line">        num = re.search(pattern, response_str, re.S)</span><br><span class="line">        num = num.group() if num else None</span><br><span class="line">        if not num:  # 当取不到值的时候，这里默认此时两位数的情况跟三位数的情况是一直的，就是出现位移的情况</span><br><span class="line">            num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">        return int(num)</span><br><span class="line">    elif len(div_list) == 3 or len(div_list) == 4:   # todo: 长度为3的,这里是直接通过计算便宜量，复原数字;长度为4的就是直接就是有个div不展示</span><br><span class="line">        num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">        return num</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br><span class="line">        raise ValueError(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br></pre></td></tr></table></figure><p>到此，我==以为==我是用正确的姿势==解决==这种问题了，可惜==并不是！！并不是！！！==<br>这中间我通过一边下载html源码一边慢慢核对前端展示的数值跟代码返回的是否一样的时候，当我发现有些两位数的数值出现匹配错误的情况，匹配出来是3位数，这到底为什么呢</p><h6 id="2-、下面将继续来看一下到底是为什么这样？"><a href="#2-、下面将继续来看一下到底是为什么这样？" class="headerlink" title="(2)、下面将继续来看一下到底是为什么这样？"></a>(2)、下面将继续来看一下到底是为什么这样？</h6><p>将这种特殊两位数的，匹配出三位数的情况，进行分析，搜索id属性<br><img src="https://img-blog.csdnimg.cn/20190824143408800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol><li>这次又发现了一个属性，==<strong>opacity属性</strong>==，这个翻译过来是“不透明度”的意思，<a href="https://www.runoob.com/cssref/css3-pr-opacity.html" target="_blank" rel="noopener">点击我进行了解</a></li></ol><p>查看介绍，大概明白了，html源码可以通过设置元素的透明度，来达到前端肉眼是否看到的效果，如果设置为0则表示完全透明，为1则表示完全不透明</p><ol><li>下面我通过修改html源码的opacity属性进行剖析，发现设置opacity属性为0和1是得到不同的结果<br><img src="https://img-blog.csdnimg.cn/20190824143432189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824143508360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>那为什么是重叠的呢？其实刚刚搜索出来的结果还有一个属性，叫==margin-right==，这个属性在CSS里面用来设置边距的，那么我们将原来的属性注释掉或者修改为0看看得到什么结果：<br><img src="https://img-blog.csdnimg.cn/20190824144003541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h6 id="3-、小结"><a href="#3-、小结" class="headerlink" title="(3)、小结"></a>(3)、小结</h6><ul><li>[x] <strong>来小结一下前面几个属性</strong><br>如果不是很明白那些属性，那么去谷歌或者百度一下，看看这些都是代表什么含义</li></ul></li></ol><div class="table-container"><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>width:2em</td><td>是字体宽度大小。    它是描述相对于应用在当前元素的字体尺寸，所以它也是相对长度单位。一般浏览器字体大小默认为16px，则2em == 32px；<a href="https://www.runoob.com/cssref/css-units.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>float:left</td><td>把图像向左浮动，<a href="https://www.runoob.com/cssref/pr-class-float.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>:before { content “202” }</td><td>:before 选择器向选定的元素前插入内容,使用content 属性来指定要插入的内容，<a href="https://www.runoob.com/cssref/sel-before.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>left:-2em</td><td>把当前元素向右移-2em单位，即等于向左移2em单位，<a href="https://www.runoob.com/cssref/pr-pos-left.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>opacity</td><td>透明度属性，取值范围为0-1,。为0表示完全透明，为1表示完全不透明，<a href="https://www.runoob.com/cssref/css3-pr-opacity.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>margin</td><td>外边距，<a href="https://www.runoob.com/css/css-margin.html" target="_blank" rel="noopener">详解</a></td></tr></tbody></table></div><p>总结一下这种CSS反爬手段解决顺序：</p><ol><li>首先判断元素是否透明：当我们遇到存在opacity属性为0的就是可以忽略它，不是0的就继续判断后面的</li><li>判断其大致规律性，如下(根据==不同网站==来设置，本文教程的大致规律性不一定符合所有CSS反爬手段的网站，需要==适当调整一下==)：<pre><code> div标签长度为3的可能：乱序的，或者顺序的，或者第一个标签是透明的，真正展示的应该是两位数字的； div标签长度为4的可能：有一个标签是不展示的，剩下三个标签是乱序的或者是顺序的（这个使用属于长度为3的情况去判断） div标签长度为2的可能：目前发现的，只有包含:before的div标签是可用的，另外一个标签的内容是可以忽略的</code></pre></li></ol><p>由于本文教程是，最后才发现opacity属性的，所以我代码里面并不是第一步判断opacity属性，但是我在总结的时候，个人推荐，先判断opacity属性，如果为透明的话，都可以直接跳过那个元素了</p><h6 id="4-、最终代码"><a href="#4-、最终代码" class="headerlink" title="(4)、最终代码"></a>(4)、最终代码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/8/20 13:34</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : crawl_decode_css.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">    # .jOjM12plqO &#123;position: relative&#125;  # 存在这种情况就是表示，是相对的位置，如果没有这个属性则表示不用调整位置</span><br><span class="line">    # .jOjM12plqO &#123;float: left&#125;  # 或者说，存在这种情况也可以是不用发生位移的，就是原位</span><br><span class="line">    # .jOjM12plqO &#123;left: 1em&#125;  # 存在这种情况就是，需要发生位移的，也可以使用这个来判断是否需要位移</span><br><span class="line">    # .jOjM12plqO &#123;width: 1em&#125; # 这个是没有参考价值的</span><br><span class="line">    # .huD10lVv &#123; opacity:0 &#125;  # 这个神坑的属性，是叫透明度，取值范围为0-1，为0表示完全透明，为1表示完全不透明，可为小数</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">from scrapy import Selector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_offset(div_list, response_str):</span><br><span class="line">    &quot;&quot;&quot;这里是单独的提取出来的，专门是提取那种是偏移量的情况&quot;&quot;&quot;</span><br><span class="line">    if len(div_list) == 4:</span><br><span class="line">        real_div = div_list[1:]</span><br><span class="line">        num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]</span><br><span class="line">    else:</span><br><span class="line">        real_div = div_list</span><br><span class="line">        if len(real_div) == 3:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]  # 用来存储正确位置的数值，最后将它们用字符串连接起来，再转化为int</span><br><span class="line">        elif len(real_div) == 2:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;]</span><br><span class="line">        elif len(real_div) == 1:</span><br><span class="line">            num = [&quot;0&quot;]</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;----严重致命错误，real_div长度匹配不上，请检查.len(real_div):&#123;&#125;&quot;.format(len(real_div)))</span><br><span class="line">            num = []</span><br><span class="line">    pattern_opacity = r&quot;.%s &#123; opacity:0 &#125;&quot;  # 出现opacity:0的表示完全透明，这时候不用理会这个字</span><br><span class="line">    pattern_left = r&quot;(?&lt;=.%s &#123; left:)(.*?)(?=em)&quot;  # 提取位移值</span><br><span class="line"></span><br><span class="line">    for index, div in enumerate(real_div):</span><br><span class="line">        # print(&quot;当前标签的num:&#123;&#125; index:&#123;&#125; div:&#123;&#125; real_div:&#123;&#125; div_list:&#123;&#125;&quot;.format(num, index, div, real_div, div_list))</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        content = div.xpath(&quot;./text()&quot;).extract_first(&quot;&quot;)  # 提取数字</span><br><span class="line">        is_opacity = re.search(pattern_opacity % class_name, response_str, re.S)  # 是否为透明状态</span><br><span class="line">        is_left = re.search(pattern_left%class_name, response_str, re.S)  # 偏移情况</span><br><span class="line"></span><br><span class="line">        # 后来新增透明度判断</span><br><span class="line">        if is_opacity:</span><br><span class="line">            print(&quot;匹配到为完全透明的情况，请检查是否真的是完全透明，当前的class_name:&#123;&#125; num:&#123;&#125; num[&#123;&#125;]=&apos;-&apos;&quot;.format(class_name, num, index))</span><br><span class="line">            num[index] = &quot;-&quot;</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        if not is_left:  # 顺序完全一致的情况下，可以添加</span><br><span class="line">            print(&quot;匹配不到偏移量，请检查是否真的是出现不偏移的情况，当前的class_name:&#123;&#125; num:&#123;&#125; num[&#123;&#125;]=&#123;&#125;&quot;.format(class_name, num, index, content))</span><br><span class="line">            num[index] = content</span><br><span class="line">            continue</span><br><span class="line">        else:  # 数值出现异位情况</span><br><span class="line">            left_num = int(is_left.group()) if is_left else None</span><br><span class="line">            if not left_num:</span><br><span class="line">                print(&quot;在匹配到位置的re对象不为空的情况下，为啥还是取不到位移值？请检查是否出现错误.class_name:&#123;&#125; num:&#123;&#125; re对象left_num:&#123;&#125;&quot;.format(class_name, num,left_num))</span><br><span class="line">                raise ValueError(&quot;获取偏移量的时候，出现异常,理论上这里是不会触发的，因为前面已经判断是已经有值了，所有这里是不会出现这种情况的&quot;)</span><br><span class="line">            num[index + left_num] = content</span><br><span class="line">    last_num = [i for i in num if i!=&quot;-&quot;]</span><br><span class="line">    result = &quot;&quot;.join(last_num)</span><br><span class="line">    print(&quot;当前标签匹配最终结果如下 num:&#123;&#125; real_div:&#123;&#125; div_list:&#123;&#125;&quot;.format(num, real_div, div_list))</span><br><span class="line">    return int(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_numbers(div_html, response_str):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    :param div_html: 传进来的xpath对象，div[@class=&apos;col-md-1&apos;]</span><br><span class="line">    :param response_str: html源码，也就是response.text</span><br><span class="line">    :return:int，返回当前div标签的真正数值</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    div_list = div_html.xpath(&quot;./div&quot;)  # 获取div[@class=&apos;col-md-1&apos;]下的所有div标签</span><br><span class="line"></span><br><span class="line">    if len(div_list) &lt; 3:  # todo: 长度小于3的(1和2)，若为2，那么提取第二个标签的值</span><br><span class="line">        div = div_list[-1]  # 取最后一个. 长度为1和2都是适用的</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        pattern = &quot;(?&lt;=.%s:before &#123; content:\&quot;)(.*?)(?=\&quot;)&quot; % class_name  # .sklgp0fhDg:before &#123; content:&quot;116&quot; &#125;  这种情况就是</span><br><span class="line">        num = re.search(pattern, response_str, re.S)</span><br><span class="line">        num = num.group() if num else None</span><br><span class="line">        if not num:  # 当取不到值的时候，这里默认此时两位数的情况跟三位数的情况是一直的，就是出现位移的情况</span><br><span class="line">            num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">            print(&quot;[flag=2] num:&#123;&#125; 当前div长度小于3，但是处理的却是按照3/4的处理，返回的结果情况前面&quot;.format(num))</span><br><span class="line">        return int(num)</span><br><span class="line">    elif len(div_list) == 3 or len(div_list) == 4:   # todo: 长度为3的,这里是直接通过计算便宜量，复原数字;长度为4的就是直接就是有个div不展示</span><br><span class="line">        num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">        print(&quot;len(div_list) == 3 or len(div_list) == 4的返回值num:&#123;&#125;&quot;.format(num))</span><br><span class="line">        return num</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br><span class="line">        raise ValueError(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_html():</span><br><span class="line">    url = &quot;xxxx&quot;</span><br><span class="line">    resp = requests.get(url)</span><br><span class="line">    selec = Selector(resp)</span><br><span class="line">    div_html = selec.xpath(&apos;//div[@class=&quot;col-md-1&quot;]&apos;)</span><br><span class="line">    for one in div_html:</span><br><span class="line">        real_num = parse_numbers(div_html=one, response_str=resp.text)</span><br><span class="line">        print(&quot;解析之后真正的num为:&#123;&#125;&quot;.format(real_num))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    get_html()</span><br></pre></td></tr></table></figure><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;h6 id=&quot;本次来解锁新姿势——CSS字体反爬。&quot;&gt;&lt;a href=&quot;#本次来解锁新姿势——CSS字体反爬。&quot; class=&quot;headerlink&quot; title=&quot;本次来解锁新姿势——CSS字体反爬。&quot;&gt;&lt;/a&gt;本次来解锁新姿势——CSS字体反爬。&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在解决这个字体反爬的路上，当我以为解决这个反爬手段的时候，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;最后验证总的答案的时候，被打脸了！！！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;又被默默设埋伏了，踩了一个坑，巨大的，为何悲伤辣么大 &amp;lt;(－︿－)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;不将html源码页面下载下来还真发现不了在哪写错了，不多说，赶紧来看一下呗~~&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="字体反爬" scheme="http://yoursite.com/tags/%E5%AD%97%E4%BD%93%E5%8F%8D%E7%88%AC/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>爬虫：js逆向目前遇到的知识点集合</title>
    <link href="http://yoursite.com/2019/08/27/js-know/"/>
    <id>http://yoursite.com/2019/08/27/js-know/</id>
    <published>2019-08-27T07:31:38.000Z</published>
    <updated>2019-11-30T08:09:18.347Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目前js逆向遇到的函数、解法或者其他注意事项集合"><a href="#目前js逆向遇到的函数、解法或者其他注意事项集合" class="headerlink" title="目前js逆向遇到的函数、解法或者其他注意事项集合"></a>目前js逆向遇到的函数、解法或者其他注意事项集合</h4><h5 id="0x01、Object-需要调用的函数名-参数-用法详解"><a href="#0x01、Object-需要调用的函数名-参数-用法详解" class="headerlink" title="0x01、Object(需要调用的函数名)(参数)用法详解"></a>0x01、Object(需要调用的函数名)(参数)用法详解</h5><p>后面的参数将传递到需要调用的函数名中，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// s.c对应e1    s.d对应e2   s.e对应sig</span><br><span class="line">// 这里注意一下：object(sig)(f)表示将f传递到sig里面去</span><br><span class="line">var f = Object(e1)(Object(e2)(JSON.stringify(l.payload))), p = Object(sig)(f);</span><br></pre></td></tr></table></figure></p><a id="more"></a><h5 id="0x02、js前加感叹号是什么意思？比如-function"><a href="#0x02、js前加感叹号是什么意思？比如-function" class="headerlink" title="0x02、js前加感叹号是什么意思？比如 !function(){}();"></a>0x02、js前加感叹号是什么意思？比如 !function(){}();</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">原文来源：https://blog.csdn.net/H_O_W_E/article/details/51388500</span><br><span class="line"></span><br><span class="line">内容如下：</span><br><span class="line"></span><br><span class="line">--------------------------我是可爱的分割线---------------------------------------------------</span><br><span class="line"></span><br><span class="line">此文出自 http://q.cnblogs.com/q/52920/</span><br><span class="line"></span><br><span class="line">感谢原创作者和转载者，感谢提问人和解答人。</span><br><span class="line"></span><br><span class="line">!function()&#123;&#125;();   !有什么用？</span><br><span class="line"></span><br><span class="line">从语法上来开，Javascript中分号表示语句结束，在开头加上，可能是为了压缩的时候和别的方法分割一下，表示一个新的语句开始。所以，如果在一个单独的JS文件中，开头的分号是没有任何意义的，可以删掉。</span><br><span class="line"></span><br><span class="line">叹号是逻辑运算符，是“非”的意思，常见这种写法 if(!true)&#123;&#125;；而将运算符加载函数定义的前面，则是将函数看做一个整体，然后再调用这个函数，并对返回的结构进行逻辑运算。</span><br><span class="line"></span><br><span class="line">说白了，此处就是构建了一个立即执行函数，建议楼主知道意思就可以，自己写的时候，可以使用更清晰的格式：</span><br><span class="line"></span><br><span class="line">(function()&#123;&#125;)();</span><br><span class="line"></span><br><span class="line">楼上已经给出很详细的解说了。</span><br><span class="line"></span><br><span class="line">这里补充一点：在函数声明【 function ()&#123;&#125; 】后面加【 () 】，意思是执行这个函数声明。有的叫法是“匿名自动执行函数”，更准确的表示应该为“立即执行函数”。</span><br><span class="line"></span><br><span class="line">但立即执行函数，要作为表达式的一部分才行，不然js解释器会报语法错误。一般，成为表达式的最容易理解方式是：在左右两端加一个圆括号，像这样【 (function ()&#123;&#125;) 】。所以，立即执行函数最常见的写法是【 (function ()&#123;&#125;)() 】，这是一个语句，在前面和后面都可以加【 ; 】。</span><br><span class="line"></span><br><span class="line">其实立即执行函数还有N种写法，比如【 (function ()&#123;&#125;) 】也行，在函数声明前加一元运算符也行：【 !function ()&#123;&#125;() 】、【 ~function ()&#123;&#125;() 】。甚至，对一元运算符进行组合也可以：【 !!!!function ()&#123;&#125;() 】、【 ~~~function ()&#123;&#125;() 】、【 !~!function ()&#123;&#125;() 】。</span><br></pre></td></tr></table></figure><h5 id="0x03、-function-win-window-这个js是什么意思？"><a href="#0x03、-function-win-window-这个js是什么意思？" class="headerlink" title="0x03、(function (win){}(window))这个js是什么意思？"></a>0x03、(function (win){}(window))这个js是什么意思？</h5><p>1、意思是，把window对象传入这个匿名函数中（即将window传给win），并且同时执行这个函数，==在页面载入之前就执行==；</p><p>2、小括号有返回值，也就是小括号内的函数或者表达式的返回值，所以说小括号内的function返回值等于小括号的返回值;</p><h5 id="0x04、window对象的某些用法转换为Nodejs的用法"><a href="#0x04、window对象的某些用法转换为Nodejs的用法" class="headerlink" title="0x04、window对象的某些用法转换为Nodejs的用法"></a>0x04、window对象的某些用法转换为Nodejs的用法</h5><p>1、对于一些window对象的用法，将js代码扣出来，在nodejs里是不能直接使用的，需要做相应的转换，例如下面这个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 源js代码</span><br><span class="line">window[&quot;String&quot;][&quot;fromCharCode&quot;](scHZjLUh1[&quot;charCodeAt&quot;](i)</span><br><span class="line"></span><br><span class="line"># 扣出来在本地webstorm+nodejs执行的代码</span><br><span class="line">String.fromCharCode((scHZjLUh1[&quot;charCodeAt&quot;](i))</span><br></pre></td></tr></table></figure><p>通过上面代码之间的转换，可以看出，window的某些用法可以在nodejs里面也能找到对应的写法</p><h5 id="0x05、Nodejs实现Base64编解码"><a href="#0x05、Nodejs实现Base64编解码" class="headerlink" title="0x05、Nodejs实现Base64编解码"></a>0x05、Nodejs实现Base64编解码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 用法一：</span><br><span class="line">Base64[&quot;decode&quot;](scHZjLUh1)  # 源js代码 </span><br><span class="line">Buffer.from(scHZjLUh1, &apos;base64&apos;).toString()  # 转换成nodejs代码</span><br><span class="line"></span><br><span class="line"># 用法二：</span><br><span class="line">window.atob([base64加密后的字符串])  # atob是解密base64字符串，成为普通字符串</span><br><span class="line">window.btoa([base64加密前的字符串])  # btoa是加密字符串，成为base64编码的字符串</span><br><span class="line"></span><br><span class="line">01、例子：</span><br><span class="line">源js代码也可能是使用window对象来构造的base64加解密，比如下面：</span><br><span class="line">window.atob(&quot;amF2YXNjcmlwdA==&quot;)  # 解码的结果是javascript</span><br><span class="line">转换为nodejs写法就是：</span><br><span class="line">Buffer.from(&quot;amF2YXNjcmlwdA==&quot;, &apos;base64&apos;).toString()  # nodejs的base64解码方式</span><br><span class="line"></span><br><span class="line">02、继续延伸：</span><br><span class="line">nodejs中base64加解密如下：</span><br><span class="line"></span><br><span class="line"># base64解密</span><br><span class="line">console.log(Buffer.from(&quot;SGVsbG8gV29ybGQ=&quot;, &apos;base64&apos;).toString(&apos;utf-8&apos;))</span><br><span class="line">Hello World</span><br><span class="line"></span><br><span class="line"># base64加密</span><br><span class="line">console.log(Buffer.from(&quot;Hello World&quot;).toString(&apos;base64&apos;));</span><br><span class="line">SGVsbG8gV29ybGQ=</span><br></pre></td></tr></table></figure><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h6 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h6><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;目前js逆向遇到的函数、解法或者其他注意事项集合&quot;&gt;&lt;a href=&quot;#目前js逆向遇到的函数、解法或者其他注意事项集合&quot; class=&quot;headerlink&quot; title=&quot;目前js逆向遇到的函数、解法或者其他注意事项集合&quot;&gt;&lt;/a&gt;目前js逆向遇到的函数、解法或者其他注意事项集合&lt;/h4&gt;&lt;h5 id=&quot;0x01、Object-需要调用的函数名-参数-用法详解&quot;&gt;&lt;a href=&quot;#0x01、Object-需要调用的函数名-参数-用法详解&quot; class=&quot;headerlink&quot; title=&quot;0x01、Object(需要调用的函数名)(参数)用法详解&quot;&gt;&lt;/a&gt;0x01、Object(需要调用的函数名)(参数)用法详解&lt;/h5&gt;&lt;p&gt;后面的参数将传递到需要调用的函数名中，如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// s.c对应e1    s.d对应e2   s.e对应sig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 这里注意一下：object(sig)(f)表示将f传递到sig里面去&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var f = Object(e1)(Object(e2)(JSON.stringify(l.payload))), p = Object(sig)(f);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="JS逆向" scheme="http://yoursite.com/tags/JS%E9%80%86%E5%90%91/"/>
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>woff字体反爬实战，10分钟就能学会(ttf字体同理)</title>
    <link href="http://yoursite.com/2019/08/26/crack-woff/"/>
    <id>http://yoursite.com/2019/08/26/crack-woff/</id>
    <published>2019-08-26T14:27:40.000Z</published>
    <updated>2019-11-30T08:08:16.557Z</updated>
    
    <content type="html"><![CDATA[<p>声明：本帖子仅是用于学习用途，请勿与用于恶意破坏别人网站，本人不承担法律责任。</p><p>来继续学爬虫呀！</p><h6 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h6><h6 id="简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？"><a href="#简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？" class="headerlink" title="简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？"></a>简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？</h6><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">经过分析，当前这种字体反爬机制是：通过获取指定链接的woff字体文件，然后根据html源码的数字</span><br><span class="line">去woff字体文件里面查找真正的数字，讲到底就是一个映射关系/查找字典。如html源码是123，去woff文件里面</span><br><span class="line">查找出来的是：623。好了，看到这里，你一定想说：废话讲那么多干嘛？赶紧上教程啊！！</span><br></pre></td></tr></table></figure><h5 id="那先来看一下大致流程呗："><a href="#那先来看一下大致流程呗：" class="headerlink" title="那先来看一下大致流程呗："></a>那先来看一下大致流程呗：</h5><p><img src="https://img-blog.csdnimg.cn/20190826220504409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt></p><p>分析目标网站页面（在这里我不打算贴出网站地址，请大家自己找网站练习），这里看到html源码和页面展示的数字是不一致的，如下图：<br><img src="https://img-blog.csdnimg.cn/20190826220607308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tips：</span><br><span class="line">一开始不知道是怎么下手，只能谷歌搜索字体反爬，一搜果然很多说法，有说woff文件的、有说CSS的、还有说svg曲线啥的，</span><br><span class="line">然后我就去查看Network里面的All，就发现关键字眼woff，就开始猜测可能是属于这种类型的反爬手段，接着开始干活。</span><br></pre></td></tr></table></figure><h5 id="混淆前字体："><a href="#混淆前字体：" class="headerlink" title="混淆前字体："></a>混淆前字体：</h5><p><img src="https://img-blog.csdnimg.cn/20190826220646239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="混淆后的字体："><a href="#混淆后的字体：" class="headerlink" title="混淆后的字体："></a>混淆后的字体：</h5><p><img src="https://img-blog.csdnimg.cn/20190826220711496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="找了一会，发现-woff2文件和woff文件前后不一样，然后开始着手解决"><a href="#找了一会，发现-woff2文件和woff文件前后不一样，然后开始着手解决" class="headerlink" title="找了一会，发现.woff2文件和woff文件前后不一样，然后开始着手解决"></a>找了一会，发现.woff2文件和woff文件前后不一样，然后开始着手解决</h6><p><a href="https://pan.baidu.com/s/1YT1MF1cMfULl4yrJHXPoyg" target="_blank" rel="noopener">如需下载woff文件，请点击这里</a>， 提取码: ghnx</p><h6 id="但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的"><a href="#但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的" class="headerlink" title="但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的"></a>但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的</h6><p><img src="https://img-blog.csdnimg.cn/20190826220739753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但是这好像看不出什么，然后我们接着需要从另外一方面下手，重点来了》==将woff文件转换为xml文件==<br>如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> fontTools.ttLib <span class="keyword">import</span> TTFont</span><br><span class="line"></span><br><span class="line">base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://xxxxxx.xxx.woff"</span></span><br><span class="line">    </span><br><span class="line">woff_dir = os.path.join(base_dir, <span class="string">"statics/woffs/"</span>)</span><br><span class="line">file_name = url.split(<span class="string">"/"</span>)[<span class="number">-1</span>]</span><br><span class="line">xml_name = file_name.replace(file_name.split(<span class="string">"."</span>)[<span class="number">-1</span>], <span class="string">"xml"</span>)</span><br><span class="line">save_woff = os.path.join(woff_dir, file_name)</span><br><span class="line">save_xml = os.path.join(woff_dir, xml_name)</span><br><span class="line"></span><br><span class="line">resp = requests.get(url=<span class="string">"xxx"</span>)</span><br><span class="line"><span class="keyword">with</span> open(save_woff, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(resp.content)</span><br><span class="line">    f.close()</span><br><span class="line">font = TTFont(save_woff)</span><br><span class="line">font.saveXML(save_xml)  <span class="comment"># 转换为xml文件</span></span><br></pre></td></tr></table></figure></p><p>然后打开xml文件看，先来查看一下缩略的内容，红色圈圈的那两个是本次重点破解的分析的内容：<br><img src="https://img-blog.csdnimg.cn/20190822133456757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="主要涉及内容破解版块"></p><p>然后先查看cmap，发现线索，里面注释的地方有标注了。然后我们大胆猜测：NINE对应的name=cid00018，code=0x39，这翻译过来就是9对应的name=cid00018，其id标记为0x39：<br><img src="https://img-blog.csdnimg.cn/20190826220839525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>接着来看一下code=0x39，其对应的name=cid00018，然后我们拿这个cid00018去搜索，发现在<glyphorder>部分里面看到：<br><code>&lt;GlyphID id=&quot;3&quot; name=&quot;cid00018&quot;/&gt;</code>，这表明什么呢？结合前后两个映射关系，然后连起来再大胆猜测一下，可能是9对应3？<br><img src="https://img-blog.csdnimg.cn/20190826221219906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>为了验证这个猜想，继续再找一下其他例子，我使用已经转换为如下格式，方便你们对比，你们也可以从三张截图来对比，哪三张截图呢？分别是：①是前面包含“code=0x39，name=cid00018”的截图；②是包含“id=3，name=cid00018”的截图；③是文章的第二张截图。<br>你们可以①②截图来一个个列出映射关系，建议先列出①的映射关系，再列出②的映射关系，然后再将①、②的映射关系组合起来，得出一个新的映射关系，这个新的映射关系就是我们所需的，下面来给你们看一下我提取的①、②的映射关系：</glyphorder></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">①的映射关系，在这里我定义为before_code_id</span><br><span class="line">②的映射关系，在这里我定义为affter_code_id,结果如下：</span><br><span class="line">before_code_id =  &#123;</span><br><span class="line">    &quot;0&quot;: &quot;cid00019&quot;,</span><br><span class="line">    &quot;1&quot;: &quot;cid00020&quot;,</span><br><span class="line">    &quot;2&quot;: &quot;cid00017&quot;,</span><br><span class="line">    &quot;3&quot;: &quot;cid00021&quot;,</span><br><span class="line">    &quot;4&quot;: &quot;cid00022&quot;,</span><br><span class="line">    &quot;5&quot;: &quot;cid00024&quot;,</span><br><span class="line">    &quot;6&quot;: &quot;cid00026&quot;,</span><br><span class="line">    &quot;7&quot;: &quot;cid00025&quot;,</span><br><span class="line">    &quot;8&quot;: &quot;cid00023&quot;,</span><br><span class="line">    &quot;9&quot;: &quot;cid00018&quot;</span><br><span class="line">&#125;</span><br><span class="line">affter_code_id = &#123;</span><br><span class="line">    &quot;cid00017&quot;: 2,</span><br><span class="line">    &quot;cid00018&quot;: 3,</span><br><span class="line">    &quot;cid00019&quot;: 4,</span><br><span class="line">    &quot;cid00020&quot;: 5,</span><br><span class="line">    &quot;cid00021&quot;: 6,</span><br><span class="line">    &quot;cid00022&quot;: 7,</span><br><span class="line">    &quot;cid00023&quot;: 8,</span><br><span class="line">    &quot;cid00024&quot;: 9,</span><br><span class="line">    &quot;cid00025&quot;: 10,</span><br><span class="line">    &quot;cid00026&quot;: 11</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">然后从html源码到before_code_id, affter_code_id应用起来就是如下：</span><br><span class="line">前端数字—中间人code—最终的数字，即：</span><br><span class="line">&quot;0&quot;——&quot;cid00019&quot;——4</span><br><span class="line">&quot;1&quot;——&quot;cid00020&quot;——5</span><br><span class="line">&quot;2&quot;——&quot;cid00017&quot;——2</span><br><span class="line">&quot;3&quot;——&quot;cid00021&quot;——6</span><br><span class="line">&quot;4&quot;——&quot;cid00022&quot;——7</span><br><span class="line">&quot;5&quot;——&quot;cid00024&quot;——9</span><br><span class="line">&quot;6&quot;——&quot;cid00026&quot;——11</span><br><span class="line">&quot;7&quot;——&quot;cid00025&quot;——10</span><br><span class="line">&quot;8&quot;——&quot;cid00023&quot;——8</span><br><span class="line">&quot;9&quot;——&quot;cid00018——3</span><br><span class="line"></span><br><span class="line">我们再简化一步，直接从html源码数字到最终的数字映射为如下(即直接省去中间的cidxxxxx这串)：</span><br><span class="line">&quot;0&quot;——4</span><br><span class="line">&quot;1&quot;——5</span><br><span class="line">&quot;2&quot;——2</span><br><span class="line">&quot;3&quot;——6</span><br><span class="line">&quot;4&quot;——7</span><br><span class="line">&quot;5&quot;——9</span><br><span class="line">&quot;6&quot;——11</span><br><span class="line">&quot;7&quot;——10</span><br><span class="line">&quot;8&quot;——8</span><br><span class="line">&quot;9&quot;——3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">但是你们发现这映射后的数字很奇怪吗，比如&quot;6&quot;、&quot;7&quot;映射之后分别为11和10，</span><br><span class="line">但是在我们的正常逻辑之中不对呀，要不我们再列一下html源码跟前端的肉眼看到的数字的映射关系呗：</span><br><span class="line">&quot;0&quot;——2</span><br><span class="line">&quot;1&quot;——3</span><br><span class="line">&quot;2&quot;——0</span><br><span class="line">&quot;3&quot;——4</span><br><span class="line">&quot;4&quot;——5</span><br><span class="line">&quot;5&quot;——7</span><br><span class="line">&quot;6&quot;——9</span><br><span class="line">&quot;7&quot;——8</span><br><span class="line">&quot;8&quot;——6</span><br><span class="line">&quot;9&quot;——1</span><br><span class="line">哇，这列出来之后不是很相似吗，跟前面的结果，要不我再放在一起给你们好对比一下呗：</span><br><span class="line">xml提取的映射     html源码跟网页展示的，提取的映射</span><br><span class="line">&quot;0&quot;——4&quot;0&quot;——2</span><br><span class="line">&quot;1&quot;——5&quot;1&quot;——3</span><br><span class="line">&quot;2&quot;——2&quot;2&quot;——0</span><br><span class="line">&quot;3&quot;——6&quot;3&quot;——4</span><br><span class="line">&quot;4&quot;——7&quot;4&quot;——5</span><br><span class="line">&quot;5&quot;——9&quot;5&quot;——7</span><br><span class="line">&quot;6&quot;——11&quot;6&quot;——9</span><br><span class="line">&quot;7&quot;——10&quot;7&quot;——8</span><br><span class="line">&quot;8&quot;——8&quot;8&quot;——6</span><br><span class="line">&quot;9&quot;——3&quot;9&quot;——1</span><br></pre></td></tr></table></figure><p>到此，我们发现从xml提取的映射跟html源码跟网页展示的提取的映射数值都是相差2，所以我们大胆猜测：网页上看到的数值是可以从xml提取的映射关系里面每个数字减去2所得的，即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;0&quot;——4-2=2</span><br><span class="line">&quot;1&quot;——5--2=3</span><br><span class="line">&quot;2&quot;——2-2=0</span><br><span class="line">&quot;3&quot;——6-2=4</span><br><span class="line">&quot;4&quot;——7-2=5</span><br><span class="line">&quot;5&quot;——9-2=7</span><br><span class="line">&quot;6&quot;——11-2=9</span><br><span class="line">&quot;7&quot;——10-2=8</span><br><span class="line">&quot;8&quot;——8-2=6</span><br><span class="line">&quot;9&quot;——3-2=1</span><br></pre></td></tr></table></figure><p>所以这就是破解了嘛，到此，这个教程总可以理解吧，写得辣么辛苦、改的辣么辛苦，赶快评论点赞收藏一套走起来</p><p>好了，别嗨了，实操才是王道，下面来看一下核心代码，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/8/19 13:08</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : crawl_woff.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line"></span><br><span class="line"># 先安装：pip3 install fontTools</span><br><span class="line">import os</span><br><span class="line">import requests</span><br><span class="line">from fake_useragent import UserAgent</span><br><span class="line">from fontTools.ttLib import TTFont  # 对字体文件进行格式转换</span><br><span class="line"></span><br><span class="line">base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">ua = UserAgent()</span><br><span class="line">header = &#123;</span><br><span class="line">    &quot;user-agent&quot;: ua.chrome,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_woff(url=&quot;&quot;):</span><br><span class="line">    &quot;&quot;&quot;这里是下载字体并且解析对应的值&quot;&quot;&quot;</span><br><span class="line">    global cookie</span><br><span class="line">    global header</span><br><span class="line">    </span><br><span class="line">    woff_dir = os.path.join(base_dir, &quot;statics/woffs/&quot;)</span><br><span class="line">    file_name = url.split(&quot;/&quot;)[-1]</span><br><span class="line">    xml_name = file_name.replace(file_name.split(&quot;.&quot;)[-1], &quot;xml&quot;)</span><br><span class="line">    save_woff = os.path.join(woff_dir, file_name)</span><br><span class="line">    save_xml = os.path.join(woff_dir, xml_name)</span><br><span class="line"></span><br><span class="line">    if os.path.exists(save_woff):  # 存在本地的话直接提取本地的文件去解析即可省去下载，避免浪费资源</span><br><span class="line">        font = TTFont(save_woff)</span><br><span class="line">    else:</span><br><span class="line">        resp = requests.get(url=url, cookies=cookie, headers=header)</span><br><span class="line">        with open(save_woff, &quot;wb&quot;) as f:</span><br><span class="line">            f.write(resp.content)</span><br><span class="line">            f.close()</span><br><span class="line">        font = TTFont(save_woff)</span><br><span class="line">        font.saveXML(save_xml)  # 转换为xml文件</span><br><span class="line"></span><br><span class="line">    cmap = font.getBestCmap()  # 这个是xml源码里面的【数值-中间人code】映射，数值还不一定是html源码里面的数值，而是每位数经过加上一定的数值之后的</span><br><span class="line">    tmp = &#123;  # 这个是对应的才是我们需要的值,或者你也可以在每次获取的时候，将这个值对应减去48即可，就可以省去这这个映射</span><br><span class="line">        48: 0,  # html源码里面的0对应xml源码里面的48</span><br><span class="line">        49: 1,  # html源码里面的1对应xml源码里面的49</span><br><span class="line">        50: 2,  # html源码里面的2对应xml源码里面的50</span><br><span class="line">        51: 3,  # html源码里面的3对应xml源码里面的51</span><br><span class="line">        52: 4,  # html源码里面的4对应xml源码里面的52</span><br><span class="line">        53: 5,  # html源码里面的5对应xml源码里面的53</span><br><span class="line">        54: 6,  # html源码里面的6对应xml源码里面的54</span><br><span class="line">        55: 7,  # html源码里面的7对应xml源码里面的55</span><br><span class="line">        56: 8,  # html源码里面的8对应xml源码里面的56</span><br><span class="line">        57: 9,  # html源码里面的9对应xml源码里面的57</span><br><span class="line">    &#125;    # 注意：个人猜测以上这个tmp字典，xml源码的数字跟html源码数字的映射关系可能会定期改变的</span><br><span class="line"></span><br><span class="line">    before_code_id = &#123;&#125;  # 转换之后before_code_id为：1:cid00019  key就是html源码数字，value就是用来查询的中间人code</span><br><span class="line">    for k, v in cmap.items():</span><br><span class="line">        if k not in set(range(48, 58)):</span><br><span class="line">            continue</span><br><span class="line">        before_code_id[tmp.get(k)] = v  # 这一步其实是将49:cid00019的映射格式转换为好理解的1:cid00019映射关系</span><br><span class="line"></span><br><span class="line">    code_id_list = font.getGlyphOrder()[2:]  # 这个返回的值有11个，但是我这里只是取了第三个到最后一个，是用来取计算前端看到的真正的数值</span><br><span class="line">    affter_code_id = &#123;k:v for k,v in zip(code_id_list, range(2, 12))&#125;  # 将每一个按照顺序映射为cid00562:2这种</span><br><span class="line"></span><br><span class="line">    return before_code_id, affter_code_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    &quot;&quot;&quot;使用如下&quot;&quot;&quot;</span><br><span class="line">    before_code_id, affter_code_id = parse_woff(url=&quot;xxxx&quot;)</span><br><span class="line">    </span><br><span class="line">    # html源码数字：假设为0</span><br><span class="line">    html_number = 0</span><br><span class="line">    tmp_code = before_code_id.get(html_number)  # 先匹配中间人code</span><br><span class="line">    real_number = affter_code_id.get(tmp_code) - 2  # 再提取中间人code对应的真正的数字，记得要减去2，因为本来是每位数字已经多了2</span><br><span class="line">    print(&quot;当前html源码数字html_number:&#123;&#125; 真正的数字为real_number:&#123;&#125;&quot;.format(html_number, real_number))</span><br></pre></td></tr></table></figure></p><p>当前的woff字体反爬已经破解了，如果有不妥的地方请指出，大家一起学习。</p><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;声明：本帖子仅是用于学习用途，请勿与用于恶意破坏别人网站，本人不承担法律责任。&lt;/p&gt;&lt;p&gt;来继续学爬虫呀！&lt;/p&gt;&lt;h6 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h6&gt;&lt;h6 id=&quot;简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&quot;&gt;&lt;a href=&quot;#简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&quot; class=&quot;headerlink&quot; title=&quot;简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&quot;&gt;&lt;/a&gt;简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&lt;/h6&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="字体反爬" scheme="http://yoursite.com/tags/%E5%AD%97%E4%BD%93%E5%8F%8D%E7%88%AC/"/>
    
  </entry>
  
  <entry>
    <title>从pdf提取图片，有两个库可以提取fitz（要install pymupdf）、pdfminer（install pdfminer3k）</title>
    <link href="http://yoursite.com/2019/08/06/extract-pdf/"/>
    <id>http://yoursite.com/2019/08/06/extract-pdf/</id>
    <published>2019-08-06T13:19:38.000Z</published>
    <updated>2019-11-30T08:05:21.117Z</updated>
    
    <content type="html"><![CDATA[<p>前言:下面的代码有注释，下面的也是参考别人的，但是忘记来源了，因为时间隔太久了，哪位小伙伴看到了，可以提一下链接</p><h6 id="方法一，这个测试是有用的，fitz（要install-pymupdf）"><a href="#方法一，这个测试是有用的，fitz（要install-pymupdf）" class="headerlink" title="方法一，这个测试是有用的，fitz（要install pymupdf）"></a>方法一，这个测试是有用的，fitz（要install pymupdf）</h6><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/3/19 08:51</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : fetch_pdf_v1.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line"></span><br><span class="line">import fitz  # pip3 install pymupdf</span><br><span class="line">import time</span><br><span class="line">import re</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_image(path, pic_path):</span><br><span class="line">    &apos;&apos;&apos;从pdf中提取图片</span><br><span class="line">    :param path: pdf的路径</span><br><span class="line">    :param pic_path: 图片保存的路径</span><br><span class="line">    :return: 无return</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    t0 = time.clock()</span><br><span class="line">    # 00、使用正则表达式查找PDF中的图片</span><br><span class="line">    checkXO = r&quot;/Type(?= */XObject)&quot;</span><br><span class="line">    checkIM = r&quot;/Subtype(?= */Image)&quot;</span><br><span class="line"></span><br><span class="line">    # 一、打开pdf，打印PDF的相关信息</span><br><span class="line">    doc = fitz.open(path)</span><br><span class="line">    # 图片计数</span><br><span class="line">    imgcount = 0</span><br><span class="line">    lenXREF = doc._getXrefLength()</span><br><span class="line"></span><br><span class="line">    # 打印PDF的信息</span><br><span class="line">    print(&quot;文件名:&#123;&#125;, 页数: &#123;&#125;, 对象: &#123;&#125;&quot;.format(path, len(doc), lenXREF - 1))</span><br><span class="line"></span><br><span class="line">    # 二、遍历PDF中的对象，遇到是图像才进行下一步，不然就continue</span><br><span class="line">    for i in range(1, lenXREF):</span><br><span class="line">        # 定义对象字符串</span><br><span class="line">        # text = doc._getObjectString(i)</span><br><span class="line">        text = doc._getXrefString(i)</span><br><span class="line">        # print(text)</span><br><span class="line">        # continue</span><br><span class="line">        isXObject = re.search(checkXO, text)</span><br><span class="line">        # 使用正则表达式查看是否是图片</span><br><span class="line">        isImage = re.search(checkIM, text)</span><br><span class="line">        # 如果不是对象也不是图片，则continue</span><br><span class="line">        if not isXObject or not isImage:</span><br><span class="line">            print(&quot;不是图片&quot;)</span><br><span class="line">            continue</span><br><span class="line">        imgcount += 1</span><br><span class="line">        # 根据索引生成图像</span><br><span class="line">        pix = fitz.Pixmap(doc, i)</span><br><span class="line">        # 根据pdf的路径生成图片的名称</span><br><span class="line">        new_name = path.replace(&apos;\\&apos;, &apos;_&apos;) + &quot;_img&#123;&#125;.png&quot;.format(imgcount)</span><br><span class="line">        new_name = new_name.replace(&apos;:&apos;, &apos;&apos;)</span><br><span class="line"></span><br><span class="line">        # 三、将图像存为png格式</span><br><span class="line">        # 如果pix.n&lt;5,可以直接存为PNG</span><br><span class="line">        if pix.n &lt; 5:</span><br><span class="line">            pix.writePNG(os.path.join(pic_path, new_name))</span><br><span class="line">        # 否则先转换CMYK</span><br><span class="line">        else:</span><br><span class="line">            pix0 = fitz.Pixmap(fitz.csRGB, pix)</span><br><span class="line">            pix0.writePNG(os.path.join(pic_path, new_name))</span><br><span class="line">            pix0 = None</span><br><span class="line">        # 释放资源</span><br><span class="line">        pix = None</span><br><span class="line">    t1 = time.clock()</span><br><span class="line">    print(&quot;运行时间:&#123;&#125;s&quot;.format(t1 - t0))</span><br><span class="line">    print(&quot;提取了&#123;&#125;张图片&quot;.format(imgcount))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 运行</span><br><span class="line">if __name__==&apos;__main__&apos;:</span><br><span class="line">    # pdf路径</span><br><span class="line">    path = r&quot;Selenium 自动化爬虫.pdf&quot;  # 测试提取图片专用  Selenium 自动化爬虫</span><br><span class="line">    pic_path = r&quot;image&quot;</span><br><span class="line">    # 创建保存图片的文件夹</span><br><span class="line">    if os.path.exists(pic_path):</span><br><span class="line">        print(&quot;文件夹已存在，请重新创建新文件夹！&quot;)</span><br><span class="line">        raise SystemExit</span><br><span class="line">    else:</span><br><span class="line">        os.mkdir(pic_path)</span><br><span class="line">    get_image(path, pic_path)</span><br></pre></td></tr></table></figure><h6 id="方法二、pdfminer（install-pdfminer3k）这个提取文字还可以，提取图片暂时识别不了"><a href="#方法二、pdfminer（install-pdfminer3k）这个提取文字还可以，提取图片暂时识别不了" class="headerlink" title="方法二、pdfminer（install pdfminer3k）这个提取文字还可以，提取图片暂时识别不了"></a>方法二、pdfminer（install pdfminer3k）这个提取文字还可以，提取图片暂时识别不了</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/3/19 11:21</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : fetch_pdf_v2.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line"></span><br><span class="line">from pdfminer.pdfparser import PDFParser, PDFDocument</span><br><span class="line">from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter, PDFTextExtractionNotAllowed</span><br><span class="line">from pdfminer.converter import PDFPageAggregator</span><br><span class="line">from pdfminer.layout import LTTextBoxHorizontal, LAParams, LTImage, LTCurve, LTFigure</span><br><span class="line"></span><br><span class="line"># 如果要提取图片，那么需要导入一下几个库</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from binascii import b2a_hex</span><br><span class="line"></span><br><span class="line">images_folder = r&apos;image&apos;  # 提取图片存放的路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def save_image(lt_image, page_number, images_folder):</span><br><span class="line">    &quot;&quot;&quot;Try to save the image data from this LTImage object, and return the file name, if successful</span><br><span class="line">    从LTImage object中保存图像数据，这需要依赖两个函数determine_image_type、write_file</span><br><span class="line">    :return file_name 文件名</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    result = None</span><br><span class="line">    if lt_image.stream:</span><br><span class="line">        file_stream = lt_image.stream.get_rawdata()</span><br><span class="line">        file_ext = determine_image_type(file_stream[0:4])</span><br><span class="line">    if file_ext:</span><br><span class="line">        file_name = &apos;&apos;.join([str(page_number), &apos;_&apos;, lt_image.name, file_ext])</span><br><span class="line">    if write_file(images_folder, file_name, lt_image.stream.get_rawdata(), flags=&apos;wb&apos;):</span><br><span class="line">        result = file_name</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def determine_image_type (stream_first_4_bytes):</span><br><span class="line">    &quot;&quot;&quot;Find out the image file type based on the magic number comparison of the first 4 (or 2) bytes&quot;&quot;&quot;</span><br><span class="line">    file_type = None</span><br><span class="line">    bytes_as_hex = b2a_hex(stream_first_4_bytes)</span><br><span class="line">    if bytes_as_hex.startswith(&apos;ffd8&apos;):</span><br><span class="line">        file_type = &apos;.jpeg&apos;</span><br><span class="line">    elif bytes_as_hex == &apos;89504e47&apos;:</span><br><span class="line">        file_type = &apos;,png&apos;</span><br><span class="line">    elif bytes_as_hex == &apos;47494638&apos;:</span><br><span class="line">        file_type = &apos;.gif&apos;</span><br><span class="line">    elif bytes_as_hex.startswith(&apos;424d&apos;):</span><br><span class="line">        file_type = &apos;.bmp&apos;</span><br><span class="line">    return file_type</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def write_file(folder, filename, filedata, flags=&apos;w&apos;):</span><br><span class="line">    &quot;&quot;&quot;Write the file data to the folder and filename combination</span><br><span class="line">    (flags: &apos;w&apos; for write text, &apos;wb&apos; for write binary, use &apos;a&apos; instead of &apos;w&apos; for append)</span><br><span class="line">    :param flags:写入文件格式(w,wb,a) floder</span><br><span class="line">    将文件数据写入文件夹和文件名组合</span><br><span class="line">    :return</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    result = False</span><br><span class="line">    if os.path.isdir(folder):</span><br><span class="line">        try:</span><br><span class="line">            file_obj = open(os.path.join(folder, filename), flags)</span><br><span class="line">            file_obj.write(filedata)</span><br><span class="line">            file_obj.close()</span><br><span class="line">            result = True</span><br><span class="line">        except IOError as e:</span><br><span class="line">            print(&quot;报错了,报错信息如下:\n&#123;&#125;&quot;.format(e))</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_read(path, toPath, image_path):</span><br><span class="line">    # 以二进制形式打开pdf文件</span><br><span class="line">    with open(path, &quot;rb&quot;) as f:</span><br><span class="line">        # 创建一个pdf文档分析器</span><br><span class="line">        parser = PDFParser(f)</span><br><span class="line">        # 创建pdf文档</span><br><span class="line">        pdfFile = PDFDocument()</span><br><span class="line">        # 链接分析器与文档对象</span><br><span class="line">        parser.set_document(pdfFile)</span><br><span class="line">        pdfFile.set_parser(parser)</span><br><span class="line">        # 提供初始化密码</span><br><span class="line">        pdfFile.initialize()</span><br><span class="line">        # 检测文档是否提供txt转换</span><br><span class="line">    if not pdfFile.is_extractable:</span><br><span class="line">        print(&quot;不提供txt转换&quot;)</span><br><span class="line">        raise PDFTextExtractionNotAllowed</span><br><span class="line">    else:</span><br><span class="line">        # 解析数据</span><br><span class="line">        # 数据管理</span><br><span class="line">        manager = PDFResourceManager()</span><br><span class="line">        # 创建一个PDF设备对象</span><br><span class="line">        laparams = LAParams()</span><br><span class="line">        device = PDFPageAggregator(manager, laparams=laparams)</span><br><span class="line">        # 解释器对象</span><br><span class="line">        interpreter = PDFPageInterpreter(manager, device)</span><br><span class="line"></span><br><span class="line">        num_page, num_image, num_curve, num_figure, num_TextBoxHorizontal = 0, 0, 0, 0, 0</span><br><span class="line"></span><br><span class="line">        # 循环遍历列表，每次处理一个page的内容</span><br><span class="line">        for page in pdfFile.get_pages():  # doc.get_pages() 获取page列表</span><br><span class="line">            num_page += 1  # 页面增一</span><br><span class="line">            interpreter.process_page(page)</span><br><span class="line">            # 接收该页面的LTPage对象</span><br><span class="line">            layout = device.get_result()</span><br><span class="line">            for content in layout:</span><br><span class="line">                print(content)</span><br><span class="line">                if isinstance(content, LTImage):  # 图片对象</span><br><span class="line">                    num_image += 1</span><br><span class="line">                if isinstance(content, LTCurve):  # 曲线对象</span><br><span class="line">                    num_curve += 1</span><br><span class="line">                if isinstance(content, LTFigure):  # figure对象</span><br><span class="line">                    num_figure += 1</span><br><span class="line"></span><br><span class="line">                # 也可以判断是否含有get_text()方法。图片之类的就没有</span><br><span class="line">                # if hasattr(out,&quot;get_text&quot;):</span><br><span class="line">                if isinstance(content, LTTextBoxHorizontal):</span><br><span class="line">                    with open(toPath, &quot;a&quot;, encoding=&apos;utf-8&apos;) as f:</span><br><span class="line">                        str = content.get_text()</span><br><span class="line">                        # print(str)</span><br><span class="line">                        f.write(str)</span><br><span class="line"></span><br><span class="line">                if isinstance(content, LTImage):</span><br><span class="line">                    print(&quot;检测到图片&quot;)</span><br><span class="line">                    with open(image_path, &quot;wb&quot;) as f:</span><br><span class="line">                        im_name = content.name</span><br><span class="line">                        im_with = content.width</span><br><span class="line">                        im_height = content.height</span><br><span class="line">                        im_name = content.imagemask</span><br><span class="line">                try:</span><br><span class="line">                    save_image(content, num_page, images_folder)</span><br><span class="line">                    print(&quot;提取正常&quot;)</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    print(&quot;图片提取异常&quot;, e)</span><br><span class="line">            print(&apos;对象数量：\n&apos;, &apos;页面数：%s\n&apos; % num_page, &apos;图片数：%s\n&apos; % num_image, &apos;曲线数：%s\n&apos; % num_curve, &apos;水平文本框：%s\n&apos;</span><br><span class="line">                  % num_TextBoxHorizontal)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__==&apos;__main__&apos;:</span><br><span class="line">    path = r&quot;Selenium 自动化爬虫.pdf&quot;  # 测试提取图片pdf </span><br><span class="line">to_path = r&quot;读取pdf文件03.txt&quot;</span><br><span class="line">image_path = r&quot;帅哥.png&quot;  # 这里只是提取报存一张，如果你是提取很多的话，这个得需要改一下</span><br><span class="line">get_read(path, to_path, image_path)</span><br></pre></td></tr></table></figure><h6 id="前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你"><a href="#前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你" class="headerlink" title="前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你"></a>前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你</h6><h4 id="感谢阅读！"><a href="#感谢阅读！" class="headerlink" title="感谢阅读！"></a>感谢阅读！</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言:下面的代码有注释，下面的也是参考别人的，但是忘记来源了，因为时间隔太久了，哪位小伙伴看到了，可以提一下链接&lt;/p&gt;&lt;h6 id=&quot;方法一，这个测试是有用的，fitz（要install-pymupdf）&quot;&gt;&lt;a href=&quot;#方法一，这个测试是有用的，fitz（要install-pymupdf）&quot; class=&quot;headerlink&quot; title=&quot;方法一，这个测试是有用的，fitz（要install pymupdf）&quot;&gt;&lt;/a&gt;方法一，这个测试是有用的，fitz（要install pymupdf）&lt;/h6&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="PDF" scheme="http://yoursite.com/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ Ubuntu18.0.4安装及简单使用</title>
    <link href="http://yoursite.com/2019/06/19/rabbitmq/"/>
    <id>http://yoursite.com/2019/06/19/rabbitmq/</id>
    <published>2019-06-19T05:59:34.000Z</published>
    <updated>2019-11-30T08:28:09.885Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x01、安装依赖erlang"><a href="#0x01、安装依赖erlang" class="headerlink" title="0x01、安装依赖erlang"></a>0x01、安装依赖erlang</h5><p>由于rabbitMq需要erlang语言的支持，在安装rabbitMq之前需要安装erlang</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install erlang-nox</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="0x02、安装Rabbitmq"><a href="#0x02、安装Rabbitmq" class="headerlink" title="0x02、安装Rabbitmq"></a>0x02、安装Rabbitmq</h5><p>先更新apt源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>然后安装rabbitmq</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install rabbitmq-server</span><br></pre></td></tr></table></figure><p>启动、停止、重启、状态rabbitMq命令，<a href="https://blog.csdn.net/u013256816/article/details/53524814" target="_blank" rel="noopener">详情使用链接请点击这里</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">服务启动关闭</span><br><span class="line">rabbitmq-server -detached  # 可以后台启动</span><br><span class="line">rabbitmqctl stop  # 可以停止</span><br><span class="line"></span><br><span class="line">下面是一些命令，但是有些测试了出现不能起作用</span><br><span class="line">sudo rabbitmq-server start  # 这个启动不能再后台启动，so不推荐使用</span><br><span class="line">sudo rabbitmq-server stop  # 好像不能使用这条命令，停止的正确命令在下面的命令，报错ERROR: node with name &quot;rabbit&quot; already running on &quot;develop&quot;</span><br><span class="line">sudo rabbitmq-server restart  # 这条好像也是不能起作用，报错ERROR: node with name &quot;rabbit&quot; already running on &quot;develop&quot;</span><br><span class="line">sudo rabbitmqctl status  # 可以查看运行的状态信息</span><br></pre></td></tr></table></figure><h5 id="0x03、添加admin，并赋予administrator权限"><a href="#0x03、添加admin，并赋予administrator权限" class="headerlink" title="0x03、添加admin，并赋予administrator权限"></a>0x03、添加admin，并赋予administrator权限</h5><p>添加admin用户，密码设置为admin。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rabbitmqctl add_user  admin  admin</span><br></pre></td></tr></table></figure></p><p>赋予权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rabbitmqctl set_user_tags admin administrator</span><br></pre></td></tr></table></figure></p><p>赋予virtual host中所有资源的配置、写、读权限以便管理其中的资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rabbitmqctl  set_permissions -p / admin &apos;.*&apos; &apos;.*&apos; &apos;.*&apos;</span><br></pre></td></tr></table></figure></p><h5 id="0x04、RabbitMQ-GUID使用"><a href="#0x04、RabbitMQ-GUID使用" class="headerlink" title="0x04、RabbitMQ GUID使用"></a>0x04、RabbitMQ GUID使用</h5><p>1、官方提供的一个web管理工具（rabbitmq_management）<a href="http://www.rabbitmq.com/management.html" target="_blank" rel="noopener">点击我进行了解</a>）</p><p>2、安装了Rabbitmq后，默认也安装了该管理工具，执行命令即可启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo  rabbitmq-plugins enable rabbitmq_management  #（先定位到rabbitmq安装目录）</span><br></pre></td></tr></table></figure><p>3、浏览器访问<code>http://你的rabbitmq ip:15672/</code></p><p>输入刚刚创建的账号密码即可访问(这里我设置的都是admin，你们的需要根据实际情况来调整)</p><p><img src="https://img-blog.csdnimg.cn/20191104151201409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="0x05、总结常用命令"><a href="#0x05、总结常用命令" class="headerlink" title="0x05、总结常用命令"></a>0x05、总结常用命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-server -detached  # 后台启动</span><br><span class="line">sudo rabbitmq-server start  # 阻塞启动，一直处于阻塞状态，不能后台，想后台挂起的话，需要启动后按Ctrl+z才行 </span><br><span class="line">rabbitmqctl stop  # 停止</span><br><span class="line">rabbitmqctl status  # 查看服务器状态</span><br><span class="line">rabbitmqctl list_queues  # 查看队列信息</span><br><span class="line">rabbitmqctl add_user  admin  admin  # 添加用户及密码</span><br><span class="line">rabbitmqctl set_user_tags admin administrator  # 给admin用户赋权限</span><br><span class="line">rabbitmqctl  set_permissions -p / admin &apos;.*&apos; &apos;.*&apos; &apos;.*&apos;  # 赋予virtual host中所有资源的配置、写、读权限以便管理其中的资源</span><br><span class="line">rabbitmq-plugins enable  # 激活管理工具</span><br><span class="line"></span><br><span class="line">查看到存在的参数有：</span><br><span class="line">&#123;start|stop|status|rotate-logs|restart|condrestart|try-restart|reload|force-reload&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">另外补充的：</span><br><span class="line">service rabbitmq-server   start</span><br><span class="line">service rabbitmq-server   stop</span><br><span class="line">service rabbitmq-server   status</span><br><span class="line">service rabbitmq-server   rotate-logs|</span><br><span class="line">service rabbitmq-server   restart</span><br><span class="line">service rabbitmq-server   condrestart</span><br><span class="line">service rabbitmq-server   try-restart</span><br><span class="line">service rabbitmq-server   reload</span><br><span class="line">service rabbitmq-server   force-reload</span><br><span class="line"></span><br><span class="line">ps -ef | grep rabbitmq  查看rabbitMq进程</span><br><span class="line"></span><br><span class="line">kill -9 pid</span><br><span class="line"></span><br><span class="line">netstat -anplt | grep LISTEN  rabbitmq默认监听端口15672/5672</span><br></pre></td></tr></table></figure><h5 id="0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法-这样描述如有不到位请指出"><a href="#0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法-这样描述如有不到位请指出" class="headerlink" title="0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法(这样描述如有不到位请指出)"></a>0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法(这样描述如有不到位请指出)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参考链接</span><br><span class="line">原文(英文)：https://stackoverflow.com/questions/57225331/bind-rabbitmq-to-localhost-on-ubuntu-server-18-04/57225410#57225410</span><br><span class="line"></span><br><span class="line">中文版：https://codeday.me/bug/20181105/356153.html</span><br><span class="line"></span><br><span class="line">可以查看监听情况</span><br><span class="line">lsof -n -a -i -urabbitmq</span><br></pre></td></tr></table></figure><p>两个主要文件内容：<br>/etc/rabbitmq/rabbitmq-env.conf(存在)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">export RABBITMQ_CONFIG_FILE=&quot;/etc/rabbitmq/rabbit&quot;</span><br><span class="line"></span><br><span class="line"># Defaults to rabbit. This can be useful if you want to run more than one node</span><br><span class="line"># per machine - RABBITMQ_NODENAME should be unique per erlang-node-and-machine</span><br><span class="line"># combination. See the clustering on a single machine guide for details:</span><br><span class="line"># http://www.rabbitmq.com/clustering.html#single-machine</span><br><span class="line">#NODENAME=rabbit</span><br><span class="line"></span><br><span class="line"># By default RabbitMQ will bind to all interfaces, on IPv4 and IPv6 if</span><br><span class="line"># available. Set this if you only want to bind to one network interface or#</span><br><span class="line"># address family.</span><br><span class="line">#NODE_IP_ADDRESS=127.0.0.1</span><br><span class="line"></span><br><span class="line"># Defaults to 5672.</span><br><span class="line">#NODE_PORT=5672</span><br><span class="line"></span><br><span class="line"># 2019-10-30 添加下边的让rabbitmq和epmd只是监听本地的</span><br><span class="line">export RABBITMQ_NODENAME=rabbit@localhost</span><br><span class="line">export RABBITMQ_NODE_IP_ADDRESS=127.0.0.1</span><br><span class="line">export ERL_EPMD_ADDRESS=127.0.0.1</span><br></pre></td></tr></table></figure></p><p>/etc/rabbitmq/rabbitmq.config(自建)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># [&#123;kernel,[&#123;inet_dist_use_interface,&#123;127,0,0,1&#125;&#125;]&#125;].</span><br><span class="line">[</span><br><span class="line">    &#123;rabbitmq_management, [</span><br><span class="line">        &#123;listener, [&#123;port, 15672&#125;, &#123;ip, &quot;127.0.0.1&quot;&#125;]&#125;</span><br><span class="line">    ]&#125;,</span><br><span class="line">    &#123;kernel, [</span><br><span class="line">        &#123;inet_dist_use_interface,&#123;127,0,0,1&#125;&#125;</span><br><span class="line">    ]&#125;</span><br><span class="line">].</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x01、安装依赖erlang&quot;&gt;&lt;a href=&quot;#0x01、安装依赖erlang&quot; class=&quot;headerlink&quot; title=&quot;0x01、安装依赖erlang&quot;&gt;&lt;/a&gt;0x01、安装依赖erlang&lt;/h5&gt;&lt;p&gt;由于rabbitMq需要erlang语言的支持，在安装rabbitMq之前需要安装erlang&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install erlang-nox&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="RabbitMQ" scheme="http://yoursite.com/tags/RabbitMQ/"/>
    
      <category term="消息队列" scheme="http://yoursite.com/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>运维必备:ganglia集群监控服务端及客户端配置实战</title>
    <link href="http://yoursite.com/2019/06/17/ganglia/"/>
    <id>http://yoursite.com/2019/06/17/ganglia/</id>
    <published>2019-06-16T16:23:18.000Z</published>
    <updated>2019-11-30T08:26:00.228Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x01、前言"><a href="#0x01、前言" class="headerlink" title="0x01、前言"></a>0x01、前言</h5><blockquote><p>Ganglia是UC Berkeley发起的一个开源集群监视项目，设计用于测量数以千计的节点。Ganglia的核心包含gmond、gmetad以及一个Web前端。主要是用来监控系统性能，如：cpu 、mem、硬盘利用率，I/O负载、网络流量情况等，通过曲线很容易见到每个节点的工作状态，对合理调整、分配系统资源，提高系统整体性能起到重要作用。</p></blockquote><a id="more"></a><p>ganglia还是很受欢迎的一个集群监控软件，能够在短短几秒之内就能知道数以千计的服务器运行状态，是一个企业监控/管理的软件，下面一起来看看如何配置服务器及客户端节点。</p><h6 id="1、在这里，本文介绍配置的监控节点如下："><a href="#1、在这里，本文介绍配置的监控节点如下：" class="headerlink" title="1、在这里，本文介绍配置的监控节点如下："></a>1、在这里，本文介绍配置的监控节点如下：</h6><div class="table-container"><table><thead><tr><th>服务名称</th><th>节点</th></tr></thead><tbody><tr><td>服务端</td><td>10.1.1.51</td></tr><tr><td>客户端</td><td>10.1.1.50</td></tr><tr><td>客户端</td><td>10.1.1.251</td></tr></tbody></table></div><p>注意：服务端只能有一个，客户端可以有很多个，并且服务端是需要安装gmated的，如果你服务端也要监控它的运行状态的话，那么也要装上gmond；客户端只需要安装gmond就可以了。</p><blockquote><p>在这里本文不介绍如何安装ganglia，只介绍配置服务端和客户端，如果你需要安装的步骤请自行搜索，敬请谅解。</p></blockquote><h5 id="0x0x2、服务端配置-10-1-1-51"><a href="#0x0x2、服务端配置-10-1-1-51" class="headerlink" title="0x0x2、服务端配置(10.1.1.51)"></a>0x0x2、服务端配置(10.1.1.51)</h5><ol><li>修改gmetad.conf文件，修改两个地方，一个是设置集群的名字及监控的客户端ip、端口；另外一个是设置信任的主机，相当于设置白名单。</li></ol><blockquote><p>vim /etc/ganglia/gemtad.conf  # 这个路径可能不一样，你需要找一下这个gmetad.conf文件在哪</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#data_source &quot;my cluster&quot; localhost   # 这个是默认的</span><br><span class="line">data_source &quot;my cluster&quot; 10 10.1.1.51:8649 10.1.1.1.251:8649 10.1.1.50:8649   # 前面第一个是“my **”是集群名称，后面是需要监控的客户端的ip地址</span><br><span class="line"></span><br><span class="line"># trusted_hosts 127.0.0.1 169.229.50.165 my.gmetad.org  # 这个是默认的</span><br><span class="line">trusted_hosts 127.0.0.1 10.1.1.51 10.1.1.251 10.1.1.50  # 添加这些信任的客户端ip</span><br></pre></td></tr></table></figure><ol><li>修改ganglia.conf，这个文件路径同样也是你需要查找一下，可能路径不太一样，后面将不再提醒这个路径问题</li></ol><blockquote><p>可能你们的需要注意复制才行： sudo cp /etc/ganglia-webfrontend/apache.conf /etc/apache2/sites-enabled/ganglia.conf（很关键的一步）<br>vim /etc/apache2/sites-enabled/ganglia.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Alias /ganglia /usr/share/ganglia-webfrontend</span><br><span class="line">  </span><br><span class="line">&lt;Directory &quot;/usr/share/ganglia-webfrontend&quot;&gt;</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Order allow,deny</span><br><span class="line">        Allow from all</span><br><span class="line">        Deny from none</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p></blockquote><h6 id="0x03、客户端配置-10-1-1-51、10-1-1-50、10-1-1-251"><a href="#0x03、客户端配置-10-1-1-51、10-1-1-50、10-1-1-251" class="headerlink" title="0x03、客户端配置(10.1.1.51、10.1.1.50、10.1.1.251)"></a>0x03、客户端配置(10.1.1.51、10.1.1.50、10.1.1.251)</h6><p>需要注意的是，客户端在Ubuntu和CentOS上是不同的包名：<br>==Ubuntu 是安装 Ganglia-monitor==；==CentOS 是安装ganglia-gmond==</p><ol><li>配置客户端10.1.1.51、10.1.1.50、10.1.1.251，gmond.conf</li></ol><blockquote><p>vim /etc/ganglia/gmond.conf<br>修改以下内容：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">globals &#123;</span><br><span class="line">  daemonize = yes</span><br><span class="line">  setuid = yes</span><br><span class="line">  user = ganglia</span><br><span class="line">  debug_level = 0</span><br><span class="line">  max_udp_msg_len = 1472</span><br><span class="line">  mute = no</span><br><span class="line">  deaf = no</span><br><span class="line">  host_dmax = 604800 /*secs 超过这个秒数未汇报数据，那么节点则会被清除掉,86400为一天，这里配置的是7天*/</span><br><span class="line">  cleanup_threshold = 60 /*secs 原来是300,这里修改为60是为了更新及时 */</span><br><span class="line">  gexec = no</span><br><span class="line">  send_metadata_interval = 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cluster &#123;</span><br><span class="line">  #name = &quot;unspecified&quot;  </span><br><span class="line">  name = &quot;my cluster&quot;  # cluster名称就是在gmetad.conf里配置的data_source名称</span><br><span class="line">  owner = &quot;unspecified&quot;</span><br><span class="line">  latlong = &quot;unspecified&quot;</span><br><span class="line">  url = &quot;unspecified&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">udp_send_channel &#123; </span><br><span class="line">  #mcast_join = 239.2.11.71</span><br><span class="line">  host = 10.1.1.51  # 填写服务器端ip地址，表示当前的客户端发送udp报文给谁</span><br><span class="line">  port = 8649</span><br><span class="line">  ttl = 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* You can specify as many udp_recv_channels as you like as well. */</span><br><span class="line">udp_recv_channel &#123;</span><br><span class="line">  #mcast_join = 239.2.11.71</span><br><span class="line">  port = 8649</span><br><span class="line">  #bind = 239.2.11.71</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，基础的监控功能的服务端、客户端配置完成，下面来看一下成果</p><h6 id="0x04、查看ganglia-web，监控数据"><a href="#0x04、查看ganglia-web，监控数据" class="headerlink" title="0x04、查看ganglia-web，监控数据"></a>0x04、查看ganglia-web，监控数据</h6><p>打开:<a href="http://10.1.1.51:8088/ganglia" target="_blank" rel="noopener">http://10.1.1.51:8088/ganglia</a>即可看到监控的数据，如下：<br><img src="https://img-blog.csdnimg.cn/2019082422154586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="ganglia-web集群"><br>可以看到在服务端设置的默认集群名字：my cluster<br>至于节点名字显示问题，已经在上图中介绍了，请注意留看</p><p>先来随便看一个节点的数据，下面展示的是50节点的数据：<br><img src="https://img-blog.csdnimg.cn/20190824222201666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="50节点的监控数据"><br>来看看负载情况，这个是ganglia默认监控的数据，可以看出这个软件有多方便，自带好一些监控的服务<br><img src="https://img-blog.csdnimg.cn/2019082422241283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="负载情况"><br>至此，基础的ganglia监控数据已经配置完毕，下面我们来设置一些额外的监控，比如监控cpu温度。</p><h6 id="0x05、使用Python自定义扩展ganglia插件"><a href="#0x05、使用Python自定义扩展ganglia插件" class="headerlink" title="0x05、使用Python自定义扩展ganglia插件"></a>0x05、使用Python自定义扩展ganglia插件</h6><p>这里只是介绍最简单的自定义插件扩展，监控CPU的温度，本教程使用的插件是来源于ganglia官网的插件，如需下载插件，<a href="https://github.com/ganglia/gmond_python_modules" target="_blank" rel="noopener">请右键点击这里进行下载</a></p><p>这个插件资源包含很多监控服务的了，能满足所有的企业的基本监控需求，可以多尝试自定义去扩展监控服务</p><ol><li>首先去客户端节点配置</li></ol><p>请确保gmond.conf文件里面存在这一行配置，下面这个路径就是用来自定义扩展插件的：</p><blockquote><p>vim /etc/ganglia/gmond.conf<br>include (‘/etc/ganglia/conf.d/*.conf’)  </p></blockquote><p>然后创建目录conf.d，这个目录默认是不存在的</p><blockquote><p>mkdir /etc/ganglia/conf.d</p></blockquote><p>切换到conf.d目录下，创建自定义的python扩展插件的配置文件：modpython.conf</p><blockquote><p>cd /etc/ganglia/conf.d<br>touch modpython.conf</p></blockquote><p>然后保存以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">modules &#123;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;python_module&quot;</span><br><span class="line">    path = &quot;/usr/lib/ganglia/modpython.so&quot;</span><br><span class="line">    params=&quot;/etc/ganglia/python_modules&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">include(&quot;/etc/ganglia/conf.d/*.pyconf&quot;)</span><br></pre></td></tr></table></figure><br>然后上传刚刚下载的资源里面，cpu_temp/conf.d/cpu_temp.pyconf，将cpu_temp.pyconf上传</p><blockquote><p>rz -y    # 弹出窗口之后，选择cpu_temp.pyconf文件上传</p></blockquote><p>然后在/etc/ganglia/目录下创建目录python_modules，并且上传cpu_temp/python_modules/cpu_temp.py，上传cpu_temp.py脚本</p><blockquote><p>mkdir /etc/ganglia/python_modules<br>cd /etc/ganglia/python_modules<br>rz -y  # 弹出窗口之后，选择cpu_temp.py文件上传</p></blockquote><h6 id="至此，自定义扩展算完成了100-，也可以说完成了90-，为什么呢，因为脚本cpu-temp-py不是一定能够运行成功的，每个人的服务器的cpu温度缓存文件路径不一定都是一样的，首先我们来检查一下脚本能否正常启动读取数据："><a href="#至此，自定义扩展算完成了100-，也可以说完成了90-，为什么呢，因为脚本cpu-temp-py不是一定能够运行成功的，每个人的服务器的cpu温度缓存文件路径不一定都是一样的，首先我们来检查一下脚本能否正常启动读取数据：" class="headerlink" title="至此，自定义扩展算完成了100%，也可以说完成了90%，为什么呢，因为脚本cpu_temp.py不是一定能够运行成功的，每个人的服务器的cpu温度缓存文件路径不一定都是一样的，首先我们来检查一下脚本能否正常启动读取数据："></a>至此，自定义扩展算完成了100%，也可以说完成了90%，为什么呢，因为脚本cpu_temp.py不是一定能够运行成功的，每个人的服务器的cpu温度缓存文件路径不一定都是一样的，首先我们来检查一下脚本能否正常启动读取数据：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 cpu_temp.py</span><br></pre></td></tr></table></figure><p>如果你看到报错，并且是说找不到文件路径，或者文件路径不存在的错误的话，建议你去搜索一下cpu温度的相关缓存文件在哪，然后再和脚本的路径对比，你就可以修改脚本文件，最终得以正确运行脚本</p><p>下面我已经注释了修改的路径，如果你们的修改之后，这个路径还是不对的话，你们你们可以直接搜索下面这条命令，然后将搜索出来的文件路径和脚本的路径进行对比，就很快改好这个脚本了:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -name coretemp*</span><br></pre></td></tr></table></figure></p><p>下面我放一下我修改后的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python2</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/8/15 19:43</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : cpu_temp.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">descriptors = list()</span><br><span class="line">sysdir = &apos;/sys/devices/platform/&apos;</span><br><span class="line">handler_dict = dict()</span><br><span class="line"></span><br><span class="line">def metric_init(params):</span><br><span class="line">    global descriptors</span><br><span class="line">    try:</span><br><span class="line">        coretemp_list = [i for i in os.listdir(sysdir) if i.startswith(&apos;coretemp&apos;)]</span><br><span class="line">    except OSError:</span><br><span class="line">        print &apos;No dir named&apos; + sysdir</span><br><span class="line">        os._exit(1)</span><br><span class="line">    if not coretemp_list:</span><br><span class="line">        print &apos;No dir name starts with coretemp&apos;</span><br><span class="line">        os._exit(1)</span><br><span class="line">    for coretemp in coretemp_list:  # 记得全部都要对应加上这个路径 /hwmon/hwmon1，不然全部都是找不到的,你们根据自己服务器来对应修改</span><br><span class="line">        coreinput_list = [i for i in os.listdir(sysdir + coretemp + &apos;/hwmon/hwmon1&apos;) if i.endswith(&apos;_input&apos;)]</span><br><span class="line">        try:</span><br><span class="line">            with open(sysdir + coretemp + &apos;/hwmon/hwmon1&apos; + &apos;/temp1_label&apos;,&apos;r&apos;) as f:</span><br><span class="line">                phy_id_prefix = f.read().split()[-1]</span><br><span class="line">        except IOError:</span><br><span class="line">            print &apos;No temp1_label file&apos;</span><br><span class="line">            os._exit(1)</span><br><span class="line">        for coreinput in coreinput_list:</span><br><span class="line">            build_descriptor(coretemp,coreinput,phy_id_prefix)</span><br><span class="line">    return descriptors</span><br><span class="line"></span><br><span class="line">def build_descriptor(coretemp,coreinput,phy_id_prefix):</span><br><span class="line">    global handler_dict</span><br><span class="line">    if coreinput == &apos;temp1_input&apos;:</span><br><span class="line">        name = &apos;cpu_temp_physical_&apos; + phy_id_prefix</span><br><span class="line">        description = &apos;Physical CPU id &apos; + phy_id_prefix + &apos; Temperature&apos;</span><br><span class="line">        groups = &apos;cpu_temp_physical&apos;</span><br><span class="line">        handler_dict[name] = sysdir + coretemp + &apos;/hwmon/hwmon1&apos; + &apos;/temp1_input&apos;</span><br><span class="line">    else:</span><br><span class="line">        with open(sysdir + coretemp + &apos;/hwmon/hwmon1&apos; + &apos;/&apos; + coreinput[:-6] + &apos;_label&apos;,&apos;r&apos;) as f:</span><br><span class="line">            coreid = f.read().split()[-1]</span><br><span class="line">        name = &apos;cpu_temp_core_&apos; + phy_id_prefix + &apos;_&apos; + coreid</span><br><span class="line">        description = &apos;Physical CPU id &apos; + phy_id_prefix + &apos; Core &apos; + coreid + &apos; Temperature&apos;</span><br><span class="line">        groups = &apos;cpu_temp_core&apos;</span><br><span class="line">        handler_dict[name] = sysdir + coretemp + &apos;/hwmon/hwmon1&apos; + &apos;/&apos; + coreinput</span><br><span class="line">    call_back = metric_handler</span><br><span class="line">    d = &#123;&apos;name&apos;: name,</span><br><span class="line">        &apos;call_back&apos;: call_back,</span><br><span class="line">        &apos;time_max&apos;: 60,</span><br><span class="line">        &apos;value_type&apos;: &apos;float&apos;,</span><br><span class="line">        &apos;units&apos;: &apos;C&apos;,</span><br><span class="line">        &apos;slope&apos;: &apos;both&apos;,</span><br><span class="line">        &apos;format&apos;: &apos;%.1f&apos;,</span><br><span class="line">        &apos;description&apos;: description,</span><br><span class="line">        &apos;groups&apos;: groups</span><br><span class="line">        &#125;</span><br><span class="line">    try:</span><br><span class="line">        call_back(name)</span><br><span class="line">        descriptors.append(d)</span><br><span class="line">    except:</span><br><span class="line">        print &apos;Build descriptor Failed&apos;</span><br><span class="line"></span><br><span class="line">def metric_handler(name):</span><br><span class="line">    try:</span><br><span class="line">        with open(handler_dict.get(name),&apos;r&apos;) as f:</span><br><span class="line">            temp = f.read()</span><br><span class="line">    except:</span><br><span class="line">        temp = 0</span><br><span class="line">    temp_float = int(temp) / 1000.0</span><br><span class="line">    return temp_float</span><br><span class="line"></span><br><span class="line">def metric_cleanup():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">     metric_init(&#123;&#125;)</span><br><span class="line">     for d in descriptors:</span><br><span class="line">         v = d[&apos;call_back&apos;](d[&apos;name&apos;])</span><br><span class="line">         print &quot;----------------------------------------------------------------------------------------&quot;</span><br><span class="line">         print &apos;value for %s is %.1f %s&apos; % (d[&apos;name&apos;],v,d[&apos;units&apos;])</span><br><span class="line">         for k,v in d.iteritems():</span><br><span class="line">             print k,v</span><br></pre></td></tr></table></figure></p><h6 id="0x06、重启服务端、客户端"><a href="#0x06、重启服务端、客户端" class="headerlink" title="0x06、重启服务端、客户端"></a>0x06、重启服务端、客户端</h6><p>在这里我又要提醒各位，重启的时候，貌似也有一定的顺序，个人测试了发现，重启顺序如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/gmetad restart  # 最先要重启服务端(或者理解为，先启动服务器)</span><br><span class="line">sudo /etc/init.d/ganglia-monitor restart   # 然后再启动客户端</span><br><span class="line">sudo /etc/init.d/apache2 restart  # 再启动Apache</span><br></pre></td></tr></table></figure><p>上面重启的步骤当中，最主要就是：启动服务端要比启动客户端早才行，不然你在ganglia-web看不到客户端这些节点的，或者看到节点也是看不到数据的，我在这里已经踩坑很久了，找了很久原因才找到是这个原因，希望能够帮助你们。</p><h6 id="0x07、最后来看一下自定义插件能否生效"><a href="#0x07、最后来看一下自定义插件能否生效" class="headerlink" title="0x07、最后来看一下自定义插件能否生效"></a>0x07、最后来看一下自定义插件能否生效</h6><p><img src="https://img-blog.csdnimg.cn/20190824232956240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果你细心的话，在前面截图当中，你已经见到过这个监控服务了，本人在写这篇博客的时候，是已经配置好了的，所以你在前面见到这个监控服务当然是正常的。</p><p>但如果是新的节点，只是默认配置的话，是没有这个监控cpu温度的，因为前面也说了每个服务器的cpu温度缓存文件是不一定都是同一个，所以ganglia开发者是很难适配我们所有的用户的。<br><img src="https://img-blog.csdnimg.cn/2019082423343876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="至此本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗</h5><h5 id="感谢认真读完的这篇教程的您"><a href="#感谢认真读完的这篇教程的您" class="headerlink" title="感谢认真读完的这篇教程的您"></a>感谢认真读完的这篇教程的您</h5><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/99658593" target="_blank" rel="noopener">最详细nagios配置说明及注意事项</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x01、前言&quot;&gt;&lt;a href=&quot;#0x01、前言&quot; class=&quot;headerlink&quot; title=&quot;0x01、前言&quot;&gt;&lt;/a&gt;0x01、前言&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;Ganglia是UC Berkeley发起的一个开源集群监视项目，设计用于测量数以千计的节点。Ganglia的核心包含gmond、gmetad以及一个Web前端。主要是用来监控系统性能，如：cpu 、mem、硬盘利用率，I/O负载、网络流量情况等，通过曲线很容易见到每个节点的工作状态，对合理调整、分配系统资源，提高系统整体性能起到重要作用。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="ganglia" scheme="http://yoursite.com/tags/ganglia/"/>
    
      <category term="监控" scheme="http://yoursite.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>最详细nagios配置说明及注意事项</title>
    <link href="http://yoursite.com/2019/06/15/nagios/"/>
    <id>http://yoursite.com/2019/06/15/nagios/</id>
    <published>2019-06-15T08:00:00.000Z</published>
    <updated>2019-11-30T08:24:50.864Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x00、前言"><a href="#0x00、前言" class="headerlink" title="0x00、前言"></a>0x00、前言</h5><h5 id="至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）"><a href="#至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）" class="headerlink" title="至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）"></a>至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）</h5><h5 id="0x01、依赖环境"><a href="#0x01、依赖环境" class="headerlink" title="0x01、依赖环境"></a>0x01、依赖环境</h5><p>先讲述一下这里需要的依赖是：nagios、ganglia、apache、Python2.7（及可能使用到Python2.7，为啥呢？因为你使用py脚本来扩展监控的话，那么，这里也需要安装一下，好像centos或者ubantu都是自带Python2.7的）</p><a id="more"></a><h5 id="0x02、安装文件路径"><a href="#0x02、安装文件路径" class="headerlink" title="0x02、安装文件路径"></a>0x02、安装文件路径</h5><h6 id="tips：先来看一下nagios安装之后的路径，这个路径是我目前安装出现的路径，至于其他路径，欢迎各位小伙伴在下面评论里面补充一下，感谢！"><a href="#tips：先来看一下nagios安装之后的路径，这个路径是我目前安装出现的路径，至于其他路径，欢迎各位小伙伴在下面评论里面补充一下，感谢！" class="headerlink" title="tips：先来看一下nagios安装之后的路径，这个路径是我目前安装出现的路径，至于其他路径，欢迎各位小伙伴在下面评论里面补充一下，感谢！"></a>tips：先来看一下nagios安装之后的路径，这个路径是我目前安装出现的路径，至于其他路径，欢迎各位小伙伴在下面评论里面补充一下，感谢！</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nagios  # nagios安装路径，修改过默认安装路径的同学，自行替换哈</span><br></pre></td></tr></table></figure><p>nagios目录包含如下文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/usr/local$ tree nagios/ -L 1</span><br><span class="line">nagios</span><br><span class="line">├── bin      # Nagios 可执行程序所在目录</span><br><span class="line">├── etc      # 这个是有nagios重要配置的文件，如nagios.cfg文件</span><br><span class="line">├── libexec  # 这个是脚本的存放路径,即Nagios 外部插件所在目录</span><br><span class="line">├── sbin     # Nagios CGI 文件所在目录，也就是执行外部命令所需文件所在的目录</span><br><span class="line">├── share    # Nagios网页文件所在的目录</span><br><span class="line">└── var      # Nagios 日志文件、lock 等文件所在的目录</span><br></pre></td></tr></table></figure></p><p>其中etc文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/usr/local/nagios$ tree etc/ -L 1</span><br><span class="line"></span><br><span class="line">etc/</span><br><span class="line">├── cgi.cfg</span><br><span class="line">├── dallas</span><br><span class="line">├── htpasswd.users</span><br><span class="line">├── nagios.cfg    # 这个最为重要的nagios配置文件，包括但不限于定义cfg文件路径</span><br><span class="line">├── objects       # 这个是cfg文件所在目录，即配置监控主机的配置文件，建议每个主机建一个目录，然后另外存放来配置，这样好管理、好维护</span><br><span class="line">└── resource.cfg  # nagios的变量定义文件，文件内容只有一行，如下：</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;$USER1$=/usr/local/nagios/libexec&apos;&apos;&apos;  </span><br><span class="line">其中，变量$USER1$指定了安装nagios插件的路径，</span><br><span class="line">如果把插件安装在了其它路径，只需在这里进行修改即可。</span><br><span class="line">需要注意的是，变量必须先定义，然后才能在其它配置文件中进行引用，谨记啊，不然两行泪！！</span><br></pre></td></tr></table></figure><h5 id="0x03、配置文件提到的概念"><a href="#0x03、配置文件提到的概念" class="headerlink" title="0x03、配置文件提到的概念"></a>0x03、配置文件提到的概念</h5><p>这些文件里面配置涉及的概念有：</p><p>host主机、hostname域名、hostgroup主机组；service服务、servicegroup服务组；contacts联系人、contactsgroup联系人组；监控时间、command监控命令；</p><p>除了以上还有其他概念，上面列出来的是常提到的概念。</p><h5 id="0x04、下面来打个预防针———屡一下配置的思路"><a href="#0x04、下面来打个预防针———屡一下配置的思路" class="headerlink" title="0x04、下面来打个预防针———屡一下配置的思路"></a>0x04、下面来打个预防针———屡一下配置的思路</h5><h6 id="配置过程大致分为以下四步："><a href="#配置过程大致分为以下四步：" class="headerlink" title="配置过程大致分为以下四步："></a>配置过程大致分为以下四步：</h6><p>01：定义监控哪些主机、主机组、服务和服务组；</p><p>02：定义这个监控要用什么命令实现；</p><p>03：定义监控的时间段；</p><p>04：定义主机或服务出现问题时要通知的联系人和联系人组。</p><h5 id="0x05、开始配置旅程"><a href="#0x05、开始配置旅程" class="headerlink" title="0x05、开始配置旅程"></a>0x05、开始配置旅程</h5><h6 id="tips：还是强调一下，最好是一个主机配置一个文件，以便以后好维护"><a href="#tips：还是强调一下，最好是一个主机配置一个文件，以便以后好维护" class="headerlink" title="tips：还是强调一下，最好是一个主机配置一个文件，以便以后好维护"></a>tips：还是强调一下，最好是一个主机配置一个文件，以便以后好维护</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nagios/etc/objects  # 切换到配置文件路径下</span><br><span class="line"></span><br><span class="line">创建对应主机.cfg文件，这里提示一下使用ip最后的数字来起名字,如192.168.1.51，则起名字为：host_51.cfg</span><br><span class="line">tips：这里创建的文件，建议直接复制原来的文件</span><br><span class="line"></span><br><span class="line">sudo cp localhost.cfg host_51.cfg</span><br><span class="line"></span><br><span class="line">然后其他的文件：</span><br><span class="line">contacts.cfg、command.cfg、timeperiods.cfg、templates.cfg</span><br><span class="line">就用原来的文件即可，只是使用的时候稍稍改一下下</span><br></pre></td></tr></table></figure><p>templates.cfg是模板配置文件，很多共性的属性定义成模板，方便多次引用，以及不用重复定义，这就是templates.cfg的作用。</p><h6 id="00、templates-cfg里面内容参数说明如下："><a href="#00、templates-cfg里面内容参数说明如下：" class="headerlink" title="00、templates.cfg里面内容参数说明如下："></a>00、templates.cfg里面内容参数说明如下：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">define contact&#123;</span><br><span class="line">        name                            generic-contact    ; 联系人名称</span><br><span class="line">        service_notification_period     24x7               ; 当服务出现异常时，发送通知的时间段，这个时间段&quot;24x7&quot;在timeperiods.cfg文件中定义</span><br><span class="line">        host_notification_period        24x7               ; 当主机出现异常时，发送通知的时间段，这个时间段&quot;24x7&quot;在timeperiods.cfg文件中定义</span><br><span class="line">        service_notification_options    w,u,c,r            ; 这个定义的是“通知可以被发出的情况”。w即warn，表示警告状态，u即unknown，表示不明状态;</span><br><span class="line">                                                           ; c即criticle，表示紧急状态，r即recover，表示恢复状态;</span><br><span class="line">                                                           ; 也就是在服务出现警告状态、未知状态、紧急状态和重新恢复状态时都发送通知给使用者。</span><br><span class="line">        host_notification_options       d,u,r                   ; 定义主机在什么状态下需要发送通知给使用者，d即down，表示宕机状态;</span><br><span class="line">                                                                ; u即unreachable，表示不可到达状态，r即recovery，表示重新恢复状态。</span><br><span class="line">        service_notification_commands   notify-service-by-email ; 服务故障时，发送通知的方式，可以是邮件和短信，这里发送的方式是邮件;</span><br><span class="line">                                                                ; 其中“notify-service-by-email”在commands.cfg文件中定义。</span><br><span class="line">        host_notification_commands      notify-host-by-email    ; 主机故障时，发送通知的方式，可以是邮件和短信，这里发送的方式是邮件;</span><br><span class="line">                                                                ; 其中“notify-host-by-email”在commands.cfg文件中定义。 </span><br><span class="line">        register                        0                    ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!</span><br><span class="line">        &#125;</span><br><span class="line">define host&#123;</span><br><span class="line">        name                            generic-host    ; 主机名称，这里的主机名，并不是直接对应到真正机器的主机名;</span><br><span class="line">                                                        ; 乃是对应到在主机配置文件里所设定的主机名。</span><br><span class="line">        notifications_enabled           1               ; Host notifications are enabled</span><br><span class="line">        event_handler_enabled           1               ; Host event handler is enabled</span><br><span class="line">        flap_detection_enabled          1               ; Flap detection is enabled</span><br><span class="line">        failure_prediction_enabled      1               ; Failure prediction is enabled</span><br><span class="line">        process_perf_data               1               ; 其值可以为0或1，其作用为是否启用Nagios的数据输出功能;</span><br><span class="line">                                                        ; 如果将此项赋值为1，那么Nagios就会将收集的数据写入某个文件中，以备提取。</span><br><span class="line">        retain_status_information       1               ; Retain status information across program restarts</span><br><span class="line">        retain_nonstatus_information    1               ; Retain non-status information across program restarts</span><br><span class="line">        notification_period             24x7            ; 指定“发送通知”的时间段，也就是可以在什么时候发送通知给使用者。</span><br><span class="line">        register                        0               ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!</span><br><span class="line">        &#125;</span><br><span class="line">define host&#123;</span><br><span class="line">        name                            linux-server    ; 主机名称</span><br><span class="line">        use                             generic-host    ; use表示引用，也就是将主机generic-host的所有属性引用到linux-server中来;</span><br><span class="line">                                                        ; 在nagios配置中，很多情况下会用到引用。</span><br><span class="line">        check_period                    24x7            ; 这里的check_period告诉nagios检查主机的时间段</span><br><span class="line">        check_interval                  5               ; nagios对主机的检查时间间隔，这里是5分钟。</span><br><span class="line">        retry_interval                  1               ; 重试检查时间间隔，单位是分钟。</span><br><span class="line">        max_check_attempts              10              ; nagios对主机的最大检查次数，也就是nagios在检查发现某主机异常时，并不马上判断为异常状况;</span><br><span class="line">                                                        ; 而是多试几次，因为有可能只是一时网络太拥挤，或是一些其他原因，让主机受到了一点影响;</span><br><span class="line">                                                        ; 这里的10就是最多试10次的意思。</span><br><span class="line">        check_command                   check-host-alive ; 指定检查主机状态的命令，其中“check-host-alive”在commands.cfg文件中定义。</span><br><span class="line">        notification_period             24x7            ; 主机故障时，发送通知的时间范围，其中“workhours”在timeperiods.cfg中进行了定义;</span><br><span class="line">                                                        ; 下面会陆续讲到。</span><br><span class="line">        notification_interval           10              ; 在主机出现异常后，故障一直没有解决，nagios再次对使用者发出通知的时间。单位是分钟;</span><br><span class="line">                                                        ; 如果你觉得，所有的事件只需要一次通知就够了，可以把这里的选项设为0</span><br><span class="line">        notification_options            d,u,r           ; 定义主机在什么状态下可以发送通知给使用者，d即down，表示宕机状态;</span><br><span class="line">                                                        ; u即unreachable，表示不可到达状态;</span><br><span class="line">                                                        ; r即recovery，表示重新恢复状态。</span><br><span class="line">        contact_groups                  ts              ; 指定联系人组，这个“admins”在contacts.cfg文件中定义。</span><br><span class="line">        register                        0               ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!</span><br><span class="line">        &#125;</span><br><span class="line">define host&#123;</span><br><span class="line">        name                    windows-server  ; The name of this host template</span><br><span class="line">        use                     generic-host    ; Inherit default values from the generic-host template</span><br><span class="line">        check_period            24x7            ; By default, Windows servers are monitored round the clock</span><br><span class="line">        check_interval          5               ; Actively check the server every 5 minutes</span><br><span class="line">        retry_interval          1               ; Schedule host check retries at 1 minute intervals</span><br><span class="line">        max_check_attempts      10              ; Check each server 10 times (max)</span><br><span class="line">        check_command           check-host-alive        ; Default command to check if servers are &quot;alive&quot;</span><br><span class="line">        notification_period     24x7            ; Send notification out at any time - day or night</span><br><span class="line">        notification_interval   10              ; Resend notifications every 30 minutes</span><br><span class="line">        notification_options    d,r             ; Only send notifications for specific host states</span><br><span class="line">        contact_groups          ts              ; Notifications get sent to the admins by default</span><br><span class="line">        hostgroups              windows-servers ; Host groups that Windows servers should be a member of</span><br><span class="line">        register                0               ; DONT REGISTER THIS - ITS JUST A TEMPLATE</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        name                            generic-service         ; 定义一个服务名称</span><br><span class="line">        active_checks_enabled           1                       ; Active service checks are enabled</span><br><span class="line">        passive_checks_enabled          1                       ; Passive service checks are enabled/accepted</span><br><span class="line">        parallelize_check               1                       ; Active service checks should be parallelized;</span><br><span class="line">                                                                ; (disabling this can lead to major performance problems)</span><br><span class="line">        obsess_over_service             1                       ; We should obsess over this service (if necessary)</span><br><span class="line">        check_freshness                 0                       ; Default is to NOT check service &apos;freshness&apos;</span><br><span class="line">        notifications_enabled           1                       ; Service notifications are enabled</span><br><span class="line">        event_handler_enabled           1                       ; Service event handler is enabled</span><br><span class="line">        flap_detection_enabled          1                       ; Flap detection is enabled</span><br><span class="line">        failure_prediction_enabled      1                       ; Failure prediction is enabled</span><br><span class="line">        process_perf_data               1                       ; Process performance data</span><br><span class="line">        retain_status_information       1                       ; Retain status information across program restarts</span><br><span class="line">        retain_nonstatus_information    1                       ; Retain non-status information across program restarts</span><br><span class="line">        is_volatile                     0                       ; The service is not volatile</span><br><span class="line">        check_period                    24x7             ; 这里的check_period告诉nagios检查服务的时间段。</span><br><span class="line">        max_check_attempts              3                ; nagios对服务的最大检查次数。</span><br><span class="line">        normal_check_interval           5                ; 此选项是用来设置服务检查时间间隔，也就是说，nagios这一次检查和下一次检查之间所隔的时间;</span><br><span class="line">                                                         ; 这里是5分钟。</span><br><span class="line">        retry_check_interval            2                ; 重试检查时间间隔，单位是分钟。</span><br><span class="line">        contact_groups                  ts           ; 指定联系人组</span><br><span class="line">        notification_options            w,u,c,r          ; 这个定义的是“通知可以被发出的情况”。w即warn，表示警告状态;</span><br><span class="line">                                                         ; u即unknown，表示不明状态;</span><br><span class="line">                                                         ; c即criticle，表示紧急状态，r即recover，表示恢复状态;</span><br><span class="line">                                                         ; 也就是在服务出现警告状态、未知状态、紧急状态和重新恢复后都发送通知给使用者。</span><br><span class="line">        notification_interval           10               ; Re-notify about service problems every hour</span><br><span class="line">        notification_period             24x7             ; 指定“发送通知”的时间段，也就是可以在什么时候发送通知给使用者。</span><br><span class="line">        register                        0                ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        name                            local-service           ; The name of this service template</span><br><span class="line">        use                             generic-service         ; Inherit default values from the generic-service definition</span><br><span class="line">        max_check_attempts              4             ; Re-check the service up to 4 times in order to determine its final (hard) state</span><br><span class="line">        normal_check_interval           5             ; Check the service every 5 minutes under normal conditions</span><br><span class="line">        retry_check_interval            1             ; Re-check the service every minute until a hard state can be determined</span><br><span class="line">        register                        0             ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="01、commands-cfg文件"><a href="#01、commands-cfg文件" class="headerlink" title="01、commands.cfg文件"></a>01、commands.cfg文件</h6><p>此文件是默认存在的，基本不用怎么修改，当这些基本命令不再满足欲望强烈的你的时候，你可以在这个文件后面添加上你要扩展的命令名及其执行需要的参数，记得添加的命令的脚本要加到对应的文件夹，所谓对应的文件夹就是：==/usr/local/nagios/libexec==，或者你可以直接输入绝对路径也行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">#notify-host-by-email命令的定义 </span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    notify-host-by-email             #命令名称，即定义了一个主机异常时发送邮件的命令。</span><br><span class="line">        command_line    /usr/bin/printf &quot;%b&quot; &quot;***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n&quot; | /bin/mail -s &quot;** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **&quot; $CONTACTEMAIL$                                     #命令具体的执行方式。</span><br><span class="line">        &#125;</span><br><span class="line">#notify-service-by-email命令的定义 </span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    notify-service-by-email          #命令名称，即定义了一个服务异常时发送邮件的命令</span><br><span class="line">        command_line    /usr/bin/printf &quot;%b&quot; &quot;***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n&quot; | /bin/mail -s &quot;** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **&quot; $CONTACTEMAIL$</span><br><span class="line">        &#125;</span><br><span class="line">#check-host-alive命令的定义</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check-host-alive                 #命令名称，用来检测主机状态。</span><br><span class="line">        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5             </span><br><span class="line">                        # 这里的变量$USER1$在resource.cfg文件中进行定义，即$USER1$=/usr/local/nagios/libexec;</span><br><span class="line">                        # 那么check_ping的完整路径为/usr/local/nagios/libexec/check_ping;</span><br><span class="line">                        # “-w 3000.0,80%”中“-w”说明后面的一对值对应的是“WARNING”状态，“80%”是其临界值。</span><br><span class="line">                        # “-c 5000.0,100%”中“-c”说明后面的一对值对应的是“CRITICAL”，“100%”是其临界值。</span><br><span class="line">                        # “-p 1”说明每次探测发送一个包。</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_local_disk</span><br><span class="line">        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$            #$ARG1$是指在调用这个命令的时候，命令后面的第一个参数。</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_local_load</span><br><span class="line">        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_local_procs</span><br><span class="line">        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_local_users</span><br><span class="line">        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_local_swap</span><br><span class="line">        command_line    $USER1$/check_swap -w $ARG1$ -c $ARG2$</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_ftp</span><br><span class="line">        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_http</span><br><span class="line">        command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_ssh</span><br><span class="line">        command_line    $USER1$/check_ssh $ARG1$ $HOSTADDRESS$</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_ping</span><br><span class="line">        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5</span><br><span class="line">        &#125;</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_nt</span><br><span class="line">        command_line    $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">/*-----------------------我是超级无敌最可爱的分割线-----------------------*/</span><br><span class="line"># 例如添加以下命令：</span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_procs_nginx</span><br><span class="line">        command_line    $USER1$/check_procs -c 1: -a &apos;/usr/sbin/nginx&apos;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define command&#123;</span><br><span class="line">        command_name    check_procs_mysql</span><br><span class="line">        command_line    $USER1$/check_procs -c 1: -a &apos;/usr/sbin/mysqld&apos;</span><br><span class="line">        &#125;</span><br><span class="line"># 记得将以上命令的check_procs，记得检查你的脚本是否在/usr/local/nagios/libexec路径当中，不在自己去找一下，这脚本是通用的（算是通用的，别人造好的轮子）</span><br></pre></td></tr></table></figure><h6 id="02、resource-cfg文件"><a href="#02、resource-cfg文件" class="headerlink" title="02、resource.cfg文件"></a>02、resource.cfg文件</h6><p>这个文件在前提已经提及，请回头查看</p><h6 id="03、contacts-cfg文件"><a href="#03、contacts-cfg文件" class="headerlink" title="03、contacts.cfg文件"></a>03、contacts.cfg文件</h6><p>是用来定义联系人及联系人组的配置文件，当你要监控的服务出现异常，达到所设置的阈值，它就可以通过这边设置的联系人来发送邮件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">define contact&#123;</span><br><span class="line">        contact_name            qizai             #联系人的名称,这个地方不要有空格</span><br><span class="line">        use                     generic-contact   #引用generic-contact的属性信息，其中“generic-contact”在templates.cfg文件中进行定义</span><br><span class="line">        alias                   Nagios Admin</span><br><span class="line">        email                   qizai.niubi@alimama.cn</span><br><span class="line">        &#125;</span><br><span class="line">define contactgroup&#123;</span><br><span class="line">        contactgroup_name       nagios              #联系人组的名称,同样不能空格</span><br><span class="line">        alias                   nagios              #联系人组描述</span><br><span class="line">        members                 qizai               #联系人组成员，其中“qizai”就是上面定义的联系人，如果有多个联系人则以英文逗号相隔</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="04、timeperiods-cfg文件"><a href="#04、timeperiods-cfg文件" class="headerlink" title="04、timeperiods.cfg文件"></a>04、timeperiods.cfg文件</h6><p>这个是定义监控的时间段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#下面是定义一个名为24x7的时间段，即监控所有时间段  </span><br><span class="line">define timeperiod&#123;  </span><br><span class="line">        timeperiod_name 24x7       #时间段的名称,这个地方不要有空格</span><br><span class="line">        alias           24 Hours A Day, 7 Days A Week  </span><br><span class="line">        sunday          00:00-24:00  </span><br><span class="line">        monday          00:00-24:00  </span><br><span class="line">        tuesday         00:00-24:00  </span><br><span class="line">        wednesday       00:00-24:00  </span><br><span class="line">        thursday        00:00-24:00  </span><br><span class="line">        friday          00:00-24:00  </span><br><span class="line">        saturday        00:00-24:00  </span><br><span class="line">        &#125;  </span><br><span class="line">#下面是定义一个名为workhours的时间段，即工作时间段。  </span><br><span class="line">define timeperiod&#123;  </span><br><span class="line">        timeperiod_name workhours   </span><br><span class="line">        alias           Normal Work Hours  </span><br><span class="line">        monday          09:00-17:00  </span><br><span class="line">        tuesday         09:00-17:00  </span><br><span class="line">        wednesday       09:00-17:00  </span><br><span class="line">        thursday        09:00-17:00  </span><br><span class="line">        friday          09:00-17:00  </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="05、cgi-cfg文件"><a href="#05、cgi-cfg文件" class="headerlink" title="05、cgi.cfg文件"></a>05、cgi.cfg文件</h6><p>此文件用来控制相关cgi脚本，如果想在nagios的web监控界面执行cgi脚本，例如重启nagios进程、关闭nagios通知、停止nagios主机检测等，这时就需要配置cgi.cfg文件了。由于nagios的web监控界面验证用户为chd，所以只需在cgi.cfg文件中添加此用户的执行权限就可以了，需要修改的配置信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">default_user_name=chd</span><br><span class="line">authorized_for_system_information=nagiosadmin,chd  </span><br><span class="line">authorized_for_configuration_information=nagiosadmin,chd  </span><br><span class="line">authorized_for_system_commands=chd</span><br><span class="line">authorized_for_all_services=nagiosadmin,chd  </span><br><span class="line">authorized_for_all_hosts=nagiosadmin,chd</span><br><span class="line">authorized_for_all_service_commands=nagiosadmin,chd  </span><br><span class="line">authorized_for_all_host_commands=nagiosadmin,chd</span><br></pre></td></tr></table></figure><h6 id="06、host-51-cfg文件"><a href="#06、host-51-cfg文件" class="headerlink" title="06、host_51.cfg文件"></a>06、host_51.cfg文件</h6><p>这个host_51.cfg文件就是定义监控192.168.1.51主机，下面这些是我的配置文件跟原来的有所改动，里面有很多要注意的地方，我已经标了注释，请详细看看，==前面的配置文件还有个坑==，在这个配置文件里面已经补上了，看看你能不能找出来，==我最后再回头补上这个坑==（ ☺☺奸笑！！！哈哈哈，好了我不笑了，万一被打…）</p><p>tips：从这个host_51.cfg配置的形式跟前面的.cfg的文件对比，你就可以发现！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line">define host &#123;</span><br><span class="line">    use linux-server</span><br><span class="line">    host_name 192.168.1.51  ; 这里你使用name，前端nagios展示的就是啥名，而且这里的name是在后面的service用到的，请留意，骚不注意两行泪啊！！！</span><br><span class="line">    address   192.168.1.51</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define hostgroup &#123;</span><br><span class="line">    hostgroup_name 51_ganglia-servers   ; 这个name也是要在hostgroup中全局唯一的，而且也是在下面使用到</span><br><span class="line">    alias   nagios server</span><br><span class="line">    members 192.168.1.51                ; 这里的成员名字是上面host里面的host_name字段的值，如果是多个成员，记得使用英文逗号隔开</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define servicegroup &#123;</span><br><span class="line">  servicegroup_name 51_ganglia-metrics  ; 这个name也是在servicegroup中是唯一的，且在后面使用到</span><br><span class="line">  alias Ganglia Metrics</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define command &#123;</span><br><span class="line">  command_name 50_check_ganglia         ; 这个是扩展的脚本命令，暂时不用管</span><br><span class="line">  command_line python2 $USER1$/check_ganglia.py -h $HOSTNAME$ -m $ARG1$ -w $ARG2$ -c $ARG3$ -o $ARG4$</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use generic-service                ; 这个use字段来源于模板templates.cfg里面的，一般引用即可</span><br><span class="line">    name 51_ganglia-service            ; 这个name是在service中要全局唯一，且在下面的每一个service里面使用到，所以这里是什么name，下面的就是要use 这个name，不然前端页面是看不到下面那些配置的service的，记得！！巨坑，两行泪啊！</span><br><span class="line">    hostgroup_name 51_ganglia-servers ;这个name是前面的hostgroup里面的</span><br><span class="line">    service_groups 51_ganglia-metrics  ; 这个也是前面对应的</span><br><span class="line">    notifications_enabled 1            ; 这个是表示是否发送警报，1表示发送，0表示不发送</span><br><span class="line">    notification_interval 10           ; 这个表示重新发送警报的时间间隔</span><br><span class="line">    register  0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define service&#123;</span><br><span class="line">    use                     51_ganglia-service</span><br><span class="line">    service_description     内存状态</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数，这个时间单位在timeperiods.cfg里面定义的，好像默认是分钟</span><br><span class="line">    normal_check_interval   3                       ; 这个是正常检测的时间间隔（指没有出现异常的情况）</span><br><span class="line">    retry_check_interval    2                       ;这个是出现问题之后，重新尝试的时间间隔</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   30                      ;这个是重新发送警报的时间间隔</span><br><span class="line">    notification_period     24x7                    ; 发送警报的时间段</span><br><span class="line">    notification_options    w,u,c,r                 ;发送警报的类型.warming警告、unknown不可达/未知、critical致命错误、recovery恢复正常</span><br><span class="line"></span><br><span class="line">    check_command           check_mem!90!90         ;执行脚本的命令，及其相关的参数第一个90表示warming，第二个90表示critical等级</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service&#123;</span><br><span class="line">    ;use                     ganglia-service           ; Name of service template to use</span><br><span class="line">    use                     51_ganglia-service</span><br><span class="line">    service_description     根分区</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数</span><br><span class="line">    normal_check_interval   3</span><br><span class="line">    retry_check_interval    2</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   360</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_local_disk!15%!10%!/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service&#123;</span><br><span class="line">    ;use                     ganglia-service   这里的use使用模板就是指当前文件的模板，去前面service找</span><br><span class="line">    use                     51_ganglia-service</span><br><span class="line">    service_description     系统负载</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数</span><br><span class="line">    normal_check_interval   3</span><br><span class="line">    retry_check_interval    2</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   20</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_local_load!15,10,5!30,25,20</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service</span><br><span class="line">    service_description     主机是否运行中          ; 服务描述</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数</span><br><span class="line">    normal_check_interval   3</span><br><span class="line">    retry_check_interval    2</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   10</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check-host-alive!3000,80%!5000,100%</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service           ; Name of service template to use</span><br><span class="line">    service_description     PING</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数</span><br><span class="line">    normal_check_interval   3</span><br><span class="line">    retry_check_interval    2</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   30</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_ping!100.0,60%!500.0,80%   ;设定ping包平均时长100ms，丢包率为60%触发w告警；ping包平均响应时长为500ms，触发c告警</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service           ; Name of service template to use</span><br><span class="line">    service_description     当前用户</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数</span><br><span class="line">    normal_check_interval   3</span><br><span class="line">    retry_check_interval    2</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   120</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_local_users!20!50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service           ; Name of service template to use</span><br><span class="line">    service_description     Total Processes</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数</span><br><span class="line">    normal_check_interval   3</span><br><span class="line">    retry_check_interval    2</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   30</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_local_procs!250!400!RSZDT</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service           ; Name of service template to use</span><br><span class="line">    service_description     Swap Usage</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数</span><br><span class="line">    normal_check_interval   3</span><br><span class="line">    retry_check_interval    2</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   30</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_local_swap!15%!10%</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service           ; Name of service template to use</span><br><span class="line">    service_description     HTTP</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数，达到之后即发送警报</span><br><span class="line">    normal_check_interval   3                       ; 正常监测时间间隔</span><br><span class="line">    retry_check_interval    2                       ; 异常重试时间间隔</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   0                     ; 发送警报时间间隔,单位为分钟</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_http</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service           ; Name of service template to use</span><br><span class="line">    service_description     nginx</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数，达到之后即发送警报</span><br><span class="line">    normal_check_interval   3                       ; 正常监测时间间隔</span><br><span class="line">    retry_check_interval    2                       ; 异常重试时间间隔</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   0                       ; 发送警报时间间隔,单位为分钟,为0表示仅仅发送一次</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_procs_nginx</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">define service &#123;</span><br><span class="line">    use                     51_ganglia-service           ; Name of service template to use</span><br><span class="line">    service_description     mysql</span><br><span class="line">    check_period            24x7                    ; 检测的时间段</span><br><span class="line">    max_check_attempts      3                       ; 最大检测次数，达到之后即发送警报</span><br><span class="line">    normal_check_interval   3                       ; 正常监测时间间隔</span><br><span class="line">    retry_check_interval    2                       ; 异常重试时间间隔</span><br><span class="line">    contact_groups          admins                  ; 发生故障通知的联系人组</span><br><span class="line">    notification_interval   0                       ; 发送警报时间间隔,单位为分钟,为0表示仅仅发送一次</span><br><span class="line">    notification_period     24x7                    ; 通知的时间段</span><br><span class="line">    notification_options    w,u,c,r</span><br><span class="line"></span><br><span class="line">    check_command           check_procs_mysql</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="注意：在-usr-local-nagios-etc-objects-下默认有localhost-cfg-和windows-cfg-这两个配置文件，localhost-cfg-文件是定义监控主机本身的，windows-cfg-文件是定义windows-主机的，其中包括了对host-和相关services-的定义。所以在本次实验中，将直接在localhost-cfg-中定义监控主机（Nagios-Server），在windows-cfg中定义windows-主机（Nagios-Windows）。根据自己的需要修改其中的相关配置，详细如下："><a href="#注意：在-usr-local-nagios-etc-objects-下默认有localhost-cfg-和windows-cfg-这两个配置文件，localhost-cfg-文件是定义监控主机本身的，windows-cfg-文件是定义windows-主机的，其中包括了对host-和相关services-的定义。所以在本次实验中，将直接在localhost-cfg-中定义监控主机（Nagios-Server），在windows-cfg中定义windows-主机（Nagios-Windows）。根据自己的需要修改其中的相关配置，详细如下：" class="headerlink" title="注意：在/usr/local/nagios/etc/objects 下默认有localhost.cfg 和windows.cfg 这两个配置文件，localhost.cfg 文件是定义监控主机本身的，windows.cfg 文件是定义windows 主机的，其中包括了对host 和相关services 的定义。所以在本次实验中，将直接在localhost.cfg 中定义监控主机（Nagios-Server），在windows.cfg中定义windows 主机（Nagios-Windows）。根据自己的需要修改其中的相关配置，详细如下："></a>注意：在/usr/local/nagios/etc/objects 下默认有localhost.cfg 和windows.cfg 这两个配置文件，localhost.cfg 文件是定义监控主机本身的，windows.cfg 文件是定义windows 主机的，其中包括了对host 和相关services 的定义。所以在本次实验中，将直接在localhost.cfg 中定义监控主机（Nagios-Server），在windows.cfg中定义windows 主机（Nagios-Windows）。根据自己的需要修改其中的相关配置，详细如下：</h6><h6 id="原来的localhost-cfg内容如下："><a href="#原来的localhost-cfg内容如下：" class="headerlink" title="原来的localhost.cfg内容如下："></a>原来的localhost.cfg内容如下：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">define host&#123;</span><br><span class="line">        use                     linux-server            ; Name of host template to use</span><br><span class="line">                                                        ; This host definition will inherit all variables that are defined</span><br><span class="line">                                                        ; in (or inherited by) the linux-server host template definition.</span><br><span class="line">        host_name               Nagios-Server</span><br><span class="line">        alias                   Nagios-Server</span><br><span class="line">        address                 127.0.0.1</span><br><span class="line">        &#125;</span><br><span class="line">define hostgroup&#123;</span><br><span class="line">        hostgroup_name  linux-servers ; The name of the hostgroup</span><br><span class="line">        alias           Linux Servers ; Long name of the group</span><br><span class="line">        members         Nagios-Server ; Comma separated list of hosts that belong to this group</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             PING</span><br><span class="line">        check_command                   check_ping!100.0,20%!500.0,60%</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             Root Partition</span><br><span class="line">        check_command                   check_local_disk!20%!10%!/</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             Current Users</span><br><span class="line">        check_command                   check_local_users!20!50</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             Total Processes</span><br><span class="line">        check_command                   check_local_procs!250!400!RSZDT</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             Current Load</span><br><span class="line">        check_command                   check_local_load!5.0,4.0,3.0!10.0,6.0,4.0</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             Swap Usage</span><br><span class="line">        check_command                   check_local_swap!20!10</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             SSH</span><br><span class="line">        check_command                   check_ssh</span><br><span class="line">        notifications_enabled           0</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service         ; Name of service template to use</span><br><span class="line">        host_name                       Nagios-Server</span><br><span class="line">        service_description             HTTP</span><br><span class="line">        check_command                   check_http</span><br><span class="line">        notifications_enabled           0</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="windows-cfg-文件内容："><a href="#windows-cfg-文件内容：" class="headerlink" title="windows.cfg 文件内容："></a>windows.cfg 文件内容：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">define host&#123;</span><br><span class="line">        use             windows-server  ; Inherit default values from a template</span><br><span class="line">        host_name       Nagios-Windows  ; The name we&apos;re giving to this host</span><br><span class="line">        alias           My Windows Server       ; A longer name associated with the host</span><br><span class="line">        address         192.168.1.113   ; IP address of the host</span><br><span class="line">        &#125;</span><br><span class="line">define hostgroup&#123;</span><br><span class="line">        hostgroup_name  windows-servers ; The name of the hostgroup</span><br><span class="line">        alias           Windows Servers ; Long name of the group</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                     generic-service</span><br><span class="line">        host_name               Nagios-Windows</span><br><span class="line">        service_description     NSClient++ Version</span><br><span class="line">        check_command           check_nt!CLIENTVERSION</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                     generic-service</span><br><span class="line">        host_name               Nagios-Windows</span><br><span class="line">        service_description     Uptime</span><br><span class="line">        check_command           check_nt!UPTIME</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                     generic-service</span><br><span class="line">        host_name               Nagios-Windows</span><br><span class="line">        service_description     CPU Load</span><br><span class="line">        check_command           check_nt!CPULOAD!-l 5,80,90</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                     generic-service</span><br><span class="line">        host_name               Nagios-Windows</span><br><span class="line">        service_description     Memory Usage</span><br><span class="line">        check_command           check_nt!MEMUSE!-w 80 -c 90</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                     generic-service</span><br><span class="line">        host_name               Nagios-Windows</span><br><span class="line">        service_description     C:\ Drive Space</span><br><span class="line">        check_command           check_nt!USEDDISKSPACE!-l c -w 80 -c 90</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                     generic-service</span><br><span class="line">        host_name               Nagios-Windows</span><br><span class="line">        service_description     W3SVC</span><br><span class="line">        check_command           check_nt!SERVICESTATE!-d SHOWALL -l W3SVC</span><br><span class="line">        &#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                     generic-service</span><br><span class="line">        host_name               Nagios-Windows</span><br><span class="line">        service_description     Explorer</span><br><span class="line">        check_command           check_nt!PROCSTATE!-d SHOWALL -l Explorer.exe</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="08、services-cfg文件"><a href="#08、services-cfg文件" class="headerlink" title="08、services.cfg文件"></a>08、services.cfg文件</h6><p>此文件默认也不存在，需要手动创建，services_50.cfg文件主要用于定义监控的服务和主机资源，例如监控http服务、ftp服务、主机磁盘空间、主机系统负载等等。Nagios-Server 和Nagios-Windows 相关服务已在相应的配置文件中定义，所以这里只需要定义Nagios-Linux 相关服务即可，这里只定义一个检测是否存活的服务来验证配置文件的正确性，其他服务的定义将在后面讲到。</p><h5 id="但是，这里的services-cfg我是没有创建的，因为我的host-51-cfg文件就已经包含那些服务了，所以我这里不创建这个文件了"><a href="#但是，这里的services-cfg我是没有创建的，因为我的host-51-cfg文件就已经包含那些服务了，所以我这里不创建这个文件了" class="headerlink" title="但是，这里的services.cfg我是没有创建的，因为我的host_51.cfg文件就已经包含那些服务了，所以我这里不创建这个文件了"></a>但是，这里的services.cfg我是没有创建的，因为我的host_51.cfg文件就已经包含那些服务了，所以我这里不创建这个文件了</h5><h6 id="09、nagios-cfg文件"><a href="#09、nagios-cfg文件" class="headerlink" title="09、nagios.cfg文件"></a>09、nagios.cfg文件</h6><p>nagios.cfg默认的路径为/usr/local/nagios/etc/nagios.cfg，是nagios的核心配置文件，所有的对象配置文件都必须在这个文件中进行定义才能发挥其作用，这里只需将对象配置文件在Nagios.cfg文件中进行引用即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">log_file=/usr/local/nagios/var/nagios.log                  # 定义nagios日志文件的路径</span><br><span class="line">cfg_file=/usr/local/nagios/etc/objects/commands.cfg        # “cfg_file”变量用来引用对象配置文件，如果有更多的对象配置文件，在这里依次添加即可。</span><br><span class="line">cfg_file=/usr/local/nagios/etc/objects/contacts.cfg</span><br><span class="line">#cfg_file=/usr/local/nagios/etc/objects/services.cfg</span><br><span class="line">cfg_file=/usr/local/nagios/etc/objects/timeperiods.cfg</span><br><span class="line">cfg_file=/usr/local/nagios/etc/objects/templates.cfg</span><br><span class="line">cfg_file=/usr/local/nagios/etc/objects/windows.cfg         # windows 主机配置文件</span><br><span class="line">#cfg_file=/usr/local/nagios/etc/objects/localhost.cfg</span><br><span class="line"></span><br><span class="line"># 下面这个就是我们配置的监控的主机</span><br><span class="line">cfg_file=/usr/local/nagios/etc/objects/host_51.cfg</span><br><span class="line"></span><br><span class="line">object_cache_file=/usr/local/nagios/var/objects.cache      # 该变量用于指定一个“所有对象配置文件”的副本文件，或者叫对象缓冲文件</span><br><span class="line">precached_object_file=/usr/local/nagios/var/objects.precache</span><br><span class="line">resource_file=/usr/local/nagios/etc/resource.cfg           # 该变量用于指定nagios资源文件的路径，可以在nagios.cfg中定义多个资源文件。</span><br><span class="line">status_file=/usr/local/nagios/var/status.dat               # 该变量用于定义一个状态文件，此文件用于保存nagios的当前状态、注释和宕机信息等。</span><br><span class="line">status_update_interval=10                                  # 该变量用于定义状态文件（即status.dat）的更新时间间隔，单位是秒，最小更新间隔是1秒。</span><br><span class="line">nagios_user=nagios                                         # 该变量指定了Nagios进程使用哪个用户运行。</span><br><span class="line">nagios_group=nagios                                        # 该变量用于指定Nagios使用哪个用户组运行。</span><br><span class="line">check_external_commands=1                                  # 该变量用于设置是否允许nagios在web监控界面运行cgi命令;</span><br><span class="line">                                                           # 也就是是否允许nagios在web界面下执行重启nagios、停止主机/服务检查等操作;</span><br><span class="line">                                                           # “1”为运行，“0”为不允许。</span><br><span class="line">command_check_interval=10s                                 # 该变量用于设置nagios对外部命令检测的时间间隔，如果指定了一个数字加一个&quot;s&quot;(如10s);</span><br><span class="line">                                                           # 那么外部检测命令的间隔是这个数值以秒为单位的时间间隔;</span><br><span class="line">                                                           # 如果没有用&quot;s&quot;，那么外部检测命令的间隔是以这个数值的“时间单位”的时间间隔。</span><br><span class="line">interval_length=60                                         # 该变量指定了nagios的时间单位，默认值是60秒，也就是1分钟;</span><br><span class="line">                                                           # 即在nagios配置中所有的时间单位都是分钟。</span><br></pre></td></tr></table></figure><h5 id="0x06、至此配置首先完成一部分，下面来检验一下这些配置是否正确"><a href="#0x06、至此配置首先完成一部分，下面来检验一下这些配置是否正确" class="headerlink" title="0x06、至此配置首先完成一部分，下面来检验一下这些配置是否正确"></a>0x06、至此配置首先完成一部分，下面来检验一下这些配置是否正确</h5><p>检验的正确性的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg</span><br></pre></td></tr></table></figure><p>当你看到下面的输出的时候:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Nagios Core 4.4.3</span><br><span class="line">Copyright (c) 2009-present Nagios Core Development Team and Community Contributors</span><br><span class="line">Copyright (c) 1999-2009 Ethan Galstad</span><br><span class="line">Last Modified: 2019-01-15</span><br><span class="line">License: GPL</span><br><span class="line"></span><br><span class="line">Website: https://www.nagios.org</span><br><span class="line">Reading configuration data...</span><br><span class="line">   Read main config file okay...</span><br><span class="line">WARNING: The normal_check_interval attribute is deprecated and will be removed in future versions. Please use check_interval instead.</span><br><span class="line"></span><br><span class="line">........</span><br><span class="line">省略中间一大部分</span><br><span class="line">........</span><br><span class="line"></span><br><span class="line">Running pre-flight check on configuration data...</span><br><span class="line"></span><br><span class="line">Checking objects...</span><br><span class="line">Checked 20 services.</span><br><span class="line">Checked 2 hosts.</span><br><span class="line">Checked 2 host groups.</span><br><span class="line">Checked 2 service groups.</span><br><span class="line">Checked 1 contacts.</span><br><span class="line">Checked 1 contact groups.</span><br><span class="line">Checked 38 commands.</span><br><span class="line">Checked 5 time periods.</span><br><span class="line">Checked 0 host escalations.</span><br><span class="line">Checked 0 service escalations.</span><br><span class="line">Checking for circular paths...</span><br><span class="line">Checked 2 hosts</span><br><span class="line">Checked 0 service dependencies</span><br><span class="line">Checked 0 host dependencies</span><br><span class="line">Checked 5 timeperiods</span><br><span class="line">Checking global event handlers...</span><br><span class="line">Checking obsessive compulsive processor commands...</span><br><span class="line">Checking misc settings...</span><br><span class="line"></span><br><span class="line">Total Warnings: 0</span><br><span class="line">Total Errors:   0</span><br><span class="line"></span><br><span class="line">Things look okay - No serious problems were detected during the pre-flight check</span><br></pre></td></tr></table></figure><p>睁大眼睛啦，上面中，最重要的是这两句(0:warming；0:error)，才是正确的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Total Warnings: 0</span><br><span class="line">Total Errors:   0</span><br></pre></td></tr></table></figure><p>如果你看到有报错，那也不用慌，看他提示的报错信息来，经过我个人的踩坑，发现提示的错误信息包括有：重复定义(host组名、service组名)、service找不到，如果你按照我前面提示的去配置，这里就不会出现这种问题了，不过难免第一次会踩坑，多踩人生才精彩！！！</p><p>目前截图保留的报错如下：<br><img src="https://img-blog.csdnimg.cn/20190816172653355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="报错信息"></p><h5 id="0x07、启动与停止"><a href="#0x07、启动与停止" class="headerlink" title="0x07、启动与停止"></a>0x07、启动与停止</h5><p>简单粗暴的shell通过脚本来启动与停止(这样不知道好不好，反正是挺方便的，哈哈哈)</p><h6 id="启动："><a href="#启动：" class="headerlink" title="**启动："></a>**启动：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">#sudo /etc/init.d/gmetad restart  # 可以忽略这几个</span><br><span class="line">#sudo /etc/init.d/ganglia-monitor restart</span><br><span class="line">#sudo /etc/init.d/apache2 restart</span><br><span class="line">sudo service nagios restart</span><br><span class="line">sudo service sendmail restart</span><br></pre></td></tr></table></figure><p>启动之后，如果你的配置是错误的话，那么前端页面看到的结果是:<br><img src="https://img-blog.csdnimg.cn/20190816172824501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="配置错误导致启动不了"></p><h6 id="停止："><a href="#停止：" class="headerlink" title="**停止："></a>**停止：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">sudo service nagios stop</span><br><span class="line">sudo service sendmail stop</span><br></pre></td></tr></table></figure><h6 id="也可以通过nagios页面来启动和停止："><a href="#也可以通过nagios页面来启动和停止：" class="headerlink" title="**也可以通过nagios页面来启动和停止："></a>**也可以通过nagios页面来启动和停止：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过web监控页的&quot;Process Info&quot; -&gt; &quot;Restart the Nagios process&quot;来重启nagios</span><br><span class="line">通过web监控页的&quot;Process Info&quot; -&gt; &quot;Shutdown the Nagios process&quot;来停止nagios</span><br></pre></td></tr></table></figure><p>正常启动之后，可以通过界面来重启等，如下:<br>   <img src="https://img-blog.csdnimg.cn/20190815221815350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="nagios-web端重启、启动"></p><h5 id="0x08、查看配置成果"><a href="#0x08、查看配置成果" class="headerlink" title="0x08、查看配置成果"></a>0x08、查看配置成果</h5><h6 id="Tips：我这里是做了端口映射，你们要对应的修改一下"><a href="#Tips：我这里是做了端口映射，你们要对应的修改一下" class="headerlink" title="Tips：我这里是做了端口映射，你们要对应的修改一下"></a>Tips：我这里是做了端口映射，你们要对应的修改一下</h6><p>启动完成之后，可以通过浏览器登录Nagios Web监控页，账号密码就是前边配置的账号密码，我前边配置的账号密码都是nagios</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.51:8888/nagios/</span><br><span class="line"># http://你的ip:你的端口/nagios/</span><br></pre></td></tr></table></figure><p>然后查看相关信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">点击左面的Current Status -&gt; Hosts 可以看到所定义的主机</span><br><span class="line">点击左面的Current Status -&gt; Services 可以看到对应主机的服务</span><br></pre></td></tr></table></figure><p>图片如下:<br><img src="https://img-blog.csdnimg.cn/20190815221607919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="查看nagios配置的主机情况"></p><p><img src="https://img-blog.csdnimg.cn/20190816173324387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="查看配置的services配置情况"></p><h5 id="必杀技来了，看好了！！！"><a href="#必杀技来了，看好了！！！" class="headerlink" title="必杀技来了，看好了！！！"></a>必杀技来了，看好了！！！</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">前面提到的坑就是，在host_51.cfg这种.cfg文件当中，</span><br><span class="line">记得注释的时候是使用英文的分号;来注释，</span><br><span class="line">并不能使用井号#来注释，经过亲身经历之后，</span><br><span class="line">发现英文的分号注释是没有问题的！！</span><br><span class="line">谨记啊！！！真的很痛苦，检查了很多遍，配置很多遍，才能通过。</span><br><span class="line">希望你们看到这段话的同时不要恨我、别喷我，你目前只有回头修改，溜了溜了....</span><br></pre></td></tr></table></figure><p>至此，nagios配置本机的监控完毕，上面的记录当中可能有些不完整，因为我是配置好了之后，过了一段时间才从新写下来记录的，如有不妥的地方欢迎各位大佬指正，感谢！</p><h5 id="本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗"><a href="#本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗"></a>本文教程写完了，希望能够帮助到各位在运维路上的小伙伴们，觉得不错点个赞呗</h5><h5 id="感谢认真读完的这篇教程的您"><a href="#感谢认真读完的这篇教程的您" class="headerlink" title="感谢认真读完的这篇教程的您"></a>感谢认真读完的这篇教程的您</h5><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100056870" target="_blank" rel="noopener">运维必备:ganglia集群监控服务端及客户端配置实战</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x00、前言&quot;&gt;&lt;a href=&quot;#0x00、前言&quot; class=&quot;headerlink&quot; title=&quot;0x00、前言&quot;&gt;&lt;/a&gt;0x00、前言&lt;/h5&gt;&lt;h5 id=&quot;至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）&quot;&gt;&lt;a href=&quot;#至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）&quot; class=&quot;headerlink&quot; title=&quot;至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）&quot;&gt;&lt;/a&gt;至于安装这里不再讲述，直接讲述配置出现的小坑、大坑及神坑！！（好了，我也不知道下面提到的算不算神坑）&lt;/h5&gt;&lt;h5 id=&quot;0x01、依赖环境&quot;&gt;&lt;a href=&quot;#0x01、依赖环境&quot; class=&quot;headerlink&quot; title=&quot;0x01、依赖环境&quot;&gt;&lt;/a&gt;0x01、依赖环境&lt;/h5&gt;&lt;p&gt;先讲述一下这里需要的依赖是：nagios、ganglia、apache、Python2.7（及可能使用到Python2.7，为啥呢？因为你使用py脚本来扩展监控的话，那么，这里也需要安装一下，好像centos或者ubantu都是自带Python2.7的）&lt;/p&gt;
    
    </summary>
    
    
      <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="监控" scheme="http://yoursite.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="nagios" scheme="http://yoursite.com/tags/nagios/"/>
    
  </entry>
  
  <entry>
    <title>自动扫描当前Python项目，生成依赖清单</title>
    <link href="http://yoursite.com/2019/05/19/to-requeirements/"/>
    <id>http://yoursite.com/2019/05/19/to-requeirements/</id>
    <published>2019-05-19T11:41:11.000Z</published>
    <updated>2019-11-30T08:16:26.518Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Python项目生成requirements-txt文件之pipreqs的使用"><a href="#Python项目生成requirements-txt文件之pipreqs的使用" class="headerlink" title="Python项目生成requirements.txt文件之pipreqs的使用"></a>Python项目生成requirements.txt文件之pipreqs的使用</h5><p>使用pipreqs，这个工具的好处是可以通过对项目目录的扫描，发现使用了哪些库，生成依赖清单。</p><a id="more"></a><h6 id="1、先安装这个库："><a href="#1、先安装这个库：" class="headerlink" title="1、先安装这个库："></a>1、先安装这个库：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pipreqs</span><br></pre></td></tr></table></figure><h5 id="2、使用方式"><a href="#2、使用方式" class="headerlink" title="2、使用方式"></a>2、使用方式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在项目的根目录下使用:</span><br><span class="line"></span><br><span class="line">pipreqs ./ --encoding=utf8</span><br></pre></td></tr></table></figure><h6 id="3、结果是：生成requirements-tx，可以根据这个文件下载所有依赖"><a href="#3、结果是：生成requirements-tx，可以根据这个文件下载所有依赖" class="headerlink" title="3、结果是：生成requirements.tx，可以根据这个文件下载所有依赖"></a>3、结果是：生成requirements.tx，可以根据这个文件下载所有依赖</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requriements.txt</span><br></pre></td></tr></table></figure><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/83472776" target="_blank" rel="noopener">python最好用的第三方库资源下载网址</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/81516304" target="_blank" rel="noopener">详细讲解aiohttp异步请求及使用，高效率</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Python项目生成requirements-txt文件之pipreqs的使用&quot;&gt;&lt;a href=&quot;#Python项目生成requirements-txt文件之pipreqs的使用&quot; class=&quot;headerlink&quot; title=&quot;Python项目生成requirements.txt文件之pipreqs的使用&quot;&gt;&lt;/a&gt;Python项目生成requirements.txt文件之pipreqs的使用&lt;/h5&gt;&lt;p&gt;使用pipreqs，这个工具的好处是可以通过对项目目录的扫描，发现使用了哪些库，生成依赖清单。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="项目依赖" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96/"/>
    
  </entry>
  
  <entry>
    <title>一分钟学会——永久设置pip指定国内镜像源(含Windows和Linux)</title>
    <link href="http://yoursite.com/2019/03/29/set-pip-proxy/"/>
    <id>http://yoursite.com/2019/03/29/set-pip-proxy/</id>
    <published>2019-03-29T07:49:53.000Z</published>
    <updated>2019-11-30T08:15:06.828Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p>首先来看一下Python临时指定安装的镜像源：</p><h6 id="命令格式："><a href="#命令格式：" class="headerlink" title="命令格式："></a>命令格式：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install 包名 -i 镜像源url</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">sudo pip3 install redis -i http://pypi.douban.com/simple</span><br></pre></td></tr></table></figure><a id="more"></a><p>可能临时的指定镜像源安装已经不再符合你的口味了，因为每次安装都是要加上<code>-i xxxx</code>一大串，有点浪费生命啊,那么有没有永久设置镜像源的方法呢？那肯定有啊！下面来看一下呗~</p><h5 id="一、永久设置windows镜像源"><a href="#一、永久设置windows镜像源" class="headerlink" title="一、永久设置windows镜像源"></a>一、永久设置windows镜像源</h5><p>打开<code>windows</code>C盘，路径如下：<code>C:\Users\xxx(你的登录用户名)</code></p><p>无论你们电脑的pip版本是pip/pip2/pip3，都是创建pip文件夹，然后在文件夹里面创建pip.ini配置文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line"></span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br><span class="line">trusted-host = pypi.douban.com</span><br><span class="line"></span><br><span class="line">;index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">;trusted-host = pypi.tuna.tsinghua.edu.cn</span><br><span class="line"></span><br><span class="line">timeout = 6000</span><br></pre></td></tr></table></figure><p>可以参考如下图：<br><img src="https://img-blog.csdnimg.cn/20190908104117779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="创建pip文件夹及pip.ini文件"></p><h5 id="二、Linux设置永久镜像源"><a href="#二、Linux设置永久镜像源" class="headerlink" title="二、Linux设置永久镜像源"></a>二、Linux设置永久镜像源</h5><p>先检查用户目录下是否存在目录.pip目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll  ~/.pip</span><br></pre></td></tr></table></figure></p><p>如果看出来是存在的，那么，切换到该目录下,并且创建pip.conf文件(存在直接修改即可)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.pip/</span><br><span class="line"></span><br><span class="line">vim ~/.pip/pip.conf</span><br><span class="line">里面的内容也是如下：</span><br><span class="line"></span><br><span class="line">------------------------------我是可爱的分割线开始处-----------------------------</span><br><span class="line">[global]</span><br><span class="line"></span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br><span class="line">trusted-host = pypi.douban.com</span><br><span class="line"></span><br><span class="line">;index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">;trusted-host = pypi.tuna.tsinghua.edu.cn</span><br><span class="line"></span><br><span class="line">timeout = 6000</span><br><span class="line">-----------------------------我是可爱的分割线结束处------------------------------</span><br><span class="line"></span><br><span class="line">然后保存退出即可</span><br></pre></td></tr></table></figure><p>国内其他pip源</p><pre><code>清华：https://pypi.tuna.tsinghua.edu.cn/simple中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/华中理工大学：http://pypi.hustunique.com/山东理工大学：http://pypi.sdutlinux.org/豆瓣：http://pypi.douban.com/simple/</code></pre><p>注意：不管你用的是pip3还是pip，亦或是pip2，方法都是一样的，都是创建pip文件夹。</p><h5 id="感谢您的阅读"><a href="#感谢您的阅读" class="headerlink" title="感谢您的阅读"></a>感谢您的阅读</h5><p>先别走呗，这里有可能有你需要的文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/83472776" target="_blank" rel="noopener">python最好用的第三方库资源下载网址</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/81516304" target="_blank" rel="noopener">详细讲解aiohttp异步请求及使用，高效率</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;p&gt;首先来看一下Python临时指定安装的镜像源：&lt;/p&gt;&lt;h6 id=&quot;命令格式：&quot;&gt;&lt;a href=&quot;#命令格式：&quot; class=&quot;headerlink&quot; title=&quot;命令格式：&quot;&gt;&lt;/a&gt;命令格式：&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip3 install 包名 -i 镜像源url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eg:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip3 install redis -i http://pypi.douban.com/simple&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Pip" scheme="http://yoursite.com/tags/Pip/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu系统下载路径(可以收藏免得以后再找)</title>
    <link href="http://yoursite.com/2019/02/10/download-ubuntu/"/>
    <id>http://yoursite.com/2019/02/10/download-ubuntu/</id>
    <published>2019-02-09T17:23:57.000Z</published>
    <updated>2019-11-30T08:15:41.287Z</updated>
    
    <content type="html"><![CDATA[<h6 id="Tips-这里只是记录一下找镜像资源的文档，嘻嘻-……"><a href="#Tips-这里只是记录一下找镜像资源的文档，嘻嘻-……" class="headerlink" title="Tips:这里只是记录一下找镜像资源的文档，嘻嘻(^^__^^) ……"></a>Tips:这里只是记录一下找镜像资源的文档，嘻嘻(<strong>^^__^^</strong>) ……</h6><h6 id="由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu"><a href="#由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu" class="headerlink" title="由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu"></a>由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu</h6><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ubuntu 14.04：</span><br><span class="line">http://mirrors.aliyun.com/ubuntu-releases/14.04/</span><br><span class="line"></span><br><span class="line">ubuntu 16.04：</span><br><span class="line">http://mirrors.aliyun.com/ubuntu-releases/16.04/</span><br><span class="line"></span><br><span class="line">ubuntu 18.04：</span><br><span class="line">http://mirrors.aliyun.com/ubuntu-releases/18.04/</span><br></pre></td></tr></table></figure><p>没错，只要市面上存在的版本，阿里云镜像基本都有，下载速度可以达到3M/s<br>转</p><h6 id="————————————————————-我是可爱的分隔线———————————————————————————"><a href="#————————————————————-我是可爱的分隔线———————————————————————————" class="headerlink" title="————————————————————-我是可爱的分隔线———————————————————————————"></a>————————————————————-我是可爱的分隔线———————————————————————————</h6><h6 id="其他国内镜像资源路径url如下："><a href="#其他国内镜像资源路径url如下：" class="headerlink" title="其他国内镜像资源路径url如下："></a>其他国内镜像资源路径url如下：</h6><p>可以先按国家语言选，再按大学找即可：<br>常用：清华大学(Tsinghua University)、上海交大(Shanghai Jiao Tong University)，华为云(HUAWEI CLOUD)等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://launchpad.net/ubuntu/+cdmirrors</span><br></pre></td></tr></table></figure></p><p>参考：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">镜像：</span><br><span class="line">https://blog.csdn.net/qq_35315454/article/details/82904997</span><br><span class="line"></span><br><span class="line">镜像及安装：</span><br><span class="line">https://blog.csdn.net/weixin_43379278/article/details/88817546</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;Tips-这里只是记录一下找镜像资源的文档，嘻嘻-……&quot;&gt;&lt;a href=&quot;#Tips-这里只是记录一下找镜像资源的文档，嘻嘻-……&quot; class=&quot;headerlink&quot; title=&quot;Tips:这里只是记录一下找镜像资源的文档，嘻嘻(^^__^^) ……&quot;&gt;&lt;/a&gt;Tips:这里只是记录一下找镜像资源的文档，嘻嘻(&lt;strong&gt;^^__^^&lt;/strong&gt;) ……&lt;/h6&gt;&lt;h6 id=&quot;由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu&quot;&gt;&lt;a href=&quot;#由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu&quot; class=&quot;headerlink&quot; title=&quot;由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu&quot;&gt;&lt;/a&gt;由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu&lt;/h6&gt;
    
    </summary>
    
    
      <category term="Ubuntu镜像资源" scheme="http://yoursite.com/categories/Ubuntu%E9%95%9C%E5%83%8F%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="Ubuntu镜像资源" scheme="http://yoursite.com/tags/Ubuntu%E9%95%9C%E5%83%8F%E8%B5%84%E6%BA%90/"/>
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到七仔的个人博客</title>
    <link href="http://yoursite.com/2018/07/25/hello-world/"/>
    <id>http://yoursite.com/2018/07/25/hello-world/</id>
    <published>2018-07-25T13:33:09.000Z</published>
    <updated>2019-11-30T08:14:20.615Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo作者:欢迎使用 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! 这是首篇文章. 更多使用请看官方文档 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> . 如果你在使用Hexo的过程中遇到一些问题, 那么你可以在 <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">这里找到解决方案</a> 或者你可以 <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>给我提问题，我会尽快回复您的.</p><a id="more"></a><h2 id="快速发布"><a href="#快速发布" class="headerlink" title="快速发布"></a>快速发布</h2><h3 id="创建一篇文章"><a href="#创建一篇文章" class="headerlink" title="创建一篇文章"></a>创建一篇文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>创建详情请看: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>服务详情请看: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署详情请看: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo作者:欢迎使用 &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! 这是首篇文章. 更多使用请看官方文档 &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; . 如果你在使用Hexo的过程中遇到一些问题, 那么你可以在 &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里找到解决方案&lt;/a&gt; 或者你可以 &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;给我提问题，我会尽快回复您的.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
