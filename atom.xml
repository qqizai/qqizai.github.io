<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>qizai</title>
  
  <subtitle>一个在IT行业摸爬打滚的程序猿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-04T08:46:50.423Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>qizai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【APP逆向-入门级】 某直播APP逆向过程</title>
    <link href="http://yoursite.com/2020/05/04/app-lianren/"/>
    <id>http://yoursite.com/2020/05/04/app-lianren/</id>
    <published>2020-05-04T08:42:56.000Z</published>
    <updated>2020-05-04T08:46:50.423Z</updated>
    
    <content type="html"><![CDATA[<p><strong>重点：==先向声明一下：本文仅仅是用于技术交流，而非传播sexy相关的东西，谢谢。==</strong></p><p>这是一篇<strong>入门级的APP逆向教程</strong>，如有写着不对的地方，烦请大佬们指出，互相学习，谢谢啦</p><a id="more"></a><p>感兴趣的应该知道的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5oGL5Lq6</span><br></pre></td></tr></table></figure></p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>本文起源于：前两天，我的一位朋友跟我说，他在QQ群里面，一位群友，发了一些黑色/灰色地带的产业链信息，他就仅仅是好奇，去下载了那款APP</p><p>原来发现，QQ群友的分享，是为那款APP做引流，一个有效的分享可以获得多少金币(砖石)这种(是指引导别人来注册，才算有效分享，才能获取金币)</p><p>打开之后，发现很惊人，这搞的==带颜色==的直播啊！！！</p><p>而这直播APP里面区分：免费和付费的房间，当你想要看付费的房间，那你只能看前面几十秒钟的时间，过了这个时间就会弹窗出来，让你付费，才能继续看</p><p>==我朋友就让我帮忙看看，跟我说有什么能难倒程序员的？？而且刚好最近我在学APP逆向，心里想着，这种灰产的APP又不能大力宣传，估计反逆向不会做很好吧？然后就开始尝试搞搞，看看能不能逆了它==</p><h5 id="0x00、预估一下本次的逆向步骤"><a href="#0x00、预估一下本次的逆向步骤" class="headerlink" title="0x00、预估一下本次的逆向步骤"></a>0x00、预估一下本次的逆向步骤</h5><ul><li>[x] 第一步、抓包分析</li><li>[x] 第二步、反编译</li><li>[x] 第三步、根据第一步的抓包关键词来搜索</li><li>[x] 第三步、根据抓包信息、收费弹窗，来分析这个收费的逻辑</li><li>[x] 第四步、得出这个逻辑之后，对smali代码进行篡改，保存</li><li>[x] 第五步、回编译APP，重新打包签名</li></ul><blockquote><p>本次用到的工具：魅族手机(Flyme6)已经root的、HttpCanary抓包工具、MT管理器、xxApp(这个不公开说了)</p></blockquote><h5 id="0x01、首要就是抓包分析"><a href="#0x01、首要就是抓包分析" class="headerlink" title="0x01、首要就是抓包分析"></a>0x01、首要就是抓包分析</h5><p>由于本次使用的手机是root的，而且抓包工具的证书已经被我安装到系统证书的目录下，而非直接安装到用户个人证书(所以对于本次APP是否有检验抓包工具检测这一块，直接忽略掉)</p><p>打开HttpCanary抓包工具，然后找到【设置】<br><img src="https://img-blog.csdnimg.cn/20200501221237276.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后选择【目标应用】，这里为了过滤无用的包，减少干扰，利于快速分析<br><img src="https://img-blog.csdnimg.cn/20200501221214445.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200501223012714.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>返回去之后，点击开始【抓包】，然后转向去打开目标APP，然后打开一些room，免费的、收费的都开一下，目的就是为了抓包，看看APP发起了哪些请求、收到哪些响应<br><img src="https://img-blog.csdnimg.cn/20200501223421483.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>再切换回来之后，发现已经存在一堆抓包信息了</p><p><img src="https://img-blog.csdnimg.cn/20200501223044692.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>一个一个查看包响应，看看有什么收获</p><p>没想到，竟然发现如此大的突破口</p><p><img src="https://img-blog.csdnimg.cn/20200501223109391.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>看下面的两张截图前，再次向广大博友们声明：本次教程仅仅是用于技术交流，而非传播sexy相关的，谢谢。</p><p>下面来看两张收费的room的就截图：一个用户点进去看了几十秒(应该是30s，具体是多少没有数)，然后就弹窗出来说得需要付费才能继续，这不诱惑人进行付费吗？</p><p><img src="https://img-blog.csdnimg.cn/20200501223119958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2020050122312760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>惹，真的是低俗呀，这都什么人啊？出卖自己body来挣钱？</p><h5 id="0x02、反编译APP"><a href="#0x02、反编译APP" class="headerlink" title="0x02、反编译APP"></a>0x02、反编译APP</h5><ol><li>鄙人一开始是，使用 jadx-gui 来反编译APP，发现没有壳、没有很强的混淆，可以直接反编译</li></ol><ol><li>反编译之后，进行相关的关键字来搜索，前面抓包中，有个很有用的关键词：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;type&quot;: &quot;2&quot;,</span><br><span class="line">&quot;type_val&quot;: &quot;38&quot;,</span><br><span class="line">&quot;type_msg&quot;: &quot;本房间为收费房间，需支付38钻石&quot;</span><br></pre></td></tr></table></figure><p>再来简单分析一下：这三个字段中，如果你直接搜索 type 的话，根据经验，这肯定会出现很多搜索结果，排除它；而 type_val 、type_msg 这两个字段出现的概率不会很大，那么分析完了，就开始搜索呗！！！</p><p>首次我搜索的是 type_val ，但是出来的结果还是不够精准，有6/7条结果；<br>然后==转而去搜索 type_msg==，发现出来的结果只有两处，这不就是很精准了吗，噢耶！！</p><p><img src="https://img-blog.csdnimg.cn/20200501230410779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后选择第二个进去看看。</p><p>你们可以思考一下为什么是选第二个呢？(我个人纯粹是靠大胆的猜测，因为第二个有关键词 LiveRoom，就是直播房间嘛)</p><p><img src="https://img-blog.csdnimg.cn/20200501231116935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>发现抓包中的三个参数，都在这里取出来了，而且发现是对那个 type 字段进行判断是否收费的，多次抓包分析得出返回的数据中：免费房间的 type=0，收费的房间 type=2，至于代码中还有一个 type=1 的判断，看到代码中调用的方法名，可以猜测：</p><ul><li>type=0，调用 forwardNormalRoom 方法，根据字面意思是：转到正常(免费)房间处理逻辑</li><li>type=1，调用 forwardPwdRoom 方法，根据字面意思是：转到输入房间密码处理逻辑</li><li>type=2 || type=3，调用 forwardPayRoom 方法，根据字面意思是：转到房间收费的处理逻辑</li></ul><p>==所以，我们只需要将，type=1/2/3里面的调用方法，改为调用type=0的方法即可绕过这个限制，话不多说，下面就是修改的步骤，Just do IT==</p><h5 id="0x03、修改-smali-代码，重新打包、签名"><a href="#0x03、修改-smali-代码，重新打包、签名" class="headerlink" title="0x03、修改 smali 代码，重新打包、签名"></a>0x03、修改 smali 代码，重新打包、签名</h5><p>理清当前逻辑之后，本文使用最轻量级的、入门级的、小白级的工具——==MT管理器==</p><p>简单来简述一下它的功能：</p><ul><li>[x] 其他文件夹有的基础功能它也都有(复制、移动、重命名等等)</li><li>[x] ==APP安装包编辑==，主要有 DEX 编辑，ARSC 编辑，XML 编辑，APK 签名、APK 优化、APK 共存、去除签名校验、RES 资源混淆、RES 反资源混淆、翻译模式等</li><li>[x] 可以修改文件夹权限(系统目录的话，需要 root 权限才能修改)</li><li>[x] 自带强大的文本编辑器，可以流畅编辑大文本文件，支持设置是否显示行号、开关自动换行、双指缩放字体大小、自动识别编码、代码语法高亮、自动缩进、正则搜索替换</li></ul><p>其他更加强大功能，待你们去发掘，相信用过了之后，你们会觉得这是用来修改APP包/破解APP限制的一个好工具。</p><p>本次主要是使用它的第二个功能——==APP安装包编辑功能==</p><ol><li>使用MT管理器【查看】目标APP包<br><img src="https://img-blog.csdnimg.cn/20200502211014480.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200502202144885.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><p>==图中我圈了红色的三个文件是我们待会需要进行操作的==</p><p>其中，第一个 ==META-INF== 目录中，包含了一些签名文件等，我们将里面的==三个文件删除掉：CERT.RSA、CERT.SF、MANIFEST.MF==（其中CERT.RSA、CERT.SF这两个命名，不同APP可能会名字不一样，只要找到后缀格式一样的即可）。</p><p>==Tips==：鄙人在这里踩了一个坑，这个好像得需要删掉这三个文件打包才不会被检测到。不然重新打包签名之后，一联网打开APP就会出现==闪退==的情况，估计是被检测检验了。</p><p>文件 ==classes.dex、classes2.dex== 就是APP编译之后，Class转成成.dex文件，dex是Android平台上(Dalvik虚拟机)的可执行文件, 相当于Windows平台中的exe文件, 每个Apk安装包中都有dex文件, 里面包含了该app的所有源码, 通过反编译工具可以获取到相应的java源码。</p><p>一些工程很大的话就会产生多个.dex文件，到现在有了前面的介绍，我们可以简单的知道：dex 文件就变相等于可执行的源码，那我们可以通过修改这个源码来达到逆向的目的(说法如有说错，烦请大佬们纠正，谢谢啦)。</p><ol><li>先打开第一个dex文件，MT管理器会提示我们，要用哪个打开，选择 【Dex编辑器++】即可<br><img src="https://img-blog.csdnimg.cn/20200502211149489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ol><p>3.选择【搜索】 ，然后输入刚刚那些关键词【type_msg】<br><img src="https://img-blog.csdnimg.cn/20200502223039562.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ol><li>点击右上角，再次进行搜索：【type_msg】<br><img src="https://img-blog.csdnimg.cn/20200502212148693.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>此处，你得需要一些smali语法，但是本文我只介绍本文使用的语法：</li></ol><ul><li>[x] if-eqz : 意思就是 是否等于0（if equal zero）</li><li>[x] if-eq：意思就是 是否相等 （if equal）</li><li>[x] const/4 p2，0x1：意思就是将0x1，即0x01赋值到 p2 ，即 p2=1</li></ul><p>所以，<code>if-eqz p1，：cond_4b</code>就是：如果 p1=0，那么调用方法 cond_4b;<br><code>if-eq p1,p2，：cond_45</code>如果 p1=p2(p1=1)，那么调用方法 cond_45 ；</p><p>这也印证了我们前面反编译APP的源码逻辑。<br>那肯定会有小伙伴会问，那个 cond_4b 是什么方法？很好，我这里回答一下，因为通过我们前面反编译的分析，我们已经知道，如果type=0的时候就是调用 forwardNormalRoom 方法，所以，可以肯定的告诉你们，这个cond_4b就是指向这个 forwardNormalRoom 方法。</p><ol><li>将type=1/2/3的情况，调用的方法改为调用 cond_4b 即可，然后点击右上角的保存<br><img src="https://img-blog.csdnimg.cn/2020050221461558.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li><p>保存之后，返回上一层第一层搜索的时候，点击右上角，选择【编译】<br><img src="https://img-blog.csdnimg.cn/20200502220250206.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>编译之后进行返回，返回的时候会提示你，点击【退出】即可。此时会再次提示你，dex文件已经修改，问你是否更新到压缩包中 ，我们选择【确定】<br><img src="https://img-blog.csdnimg.cn/2020050222080531.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后你会看到压缩在更新<br><img src="https://img-blog.csdnimg.cn/20200502220949175.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>然后返回之后，你会看到一个刚刚被修改过的apk文件，显示绿色名字的，然后点击它，第一步选择【功能】、第二步选择【APK签名】<br><img src="https://img-blog.csdnimg.cn/20200502221547811.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>选择【确定】即可<br><img src="https://img-blog.csdnimg.cn/2020050222182185.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后你就可以【猥琐欲为】啦</p></li></ol><h5 id="0x04、最后重新签名之后，你可以卸载原来的APP，然后装上这个无限制的版本，哈哈哈…"><a href="#0x04、最后重新签名之后，你可以卸载原来的APP，然后装上这个无限制的版本，哈哈哈…" class="headerlink" title="0x04、最后重新签名之后，你可以卸载原来的APP，然后装上这个无限制的版本，哈哈哈…"></a>0x04、最后重新签名之后，你可以卸载原来的APP，然后装上这个无限制的版本，哈哈哈…</h5><p><strong>本文==入门级的APP逆向教程==已经编写完毕，妈呀，花了几个小时来重新演示逆向过程，以及编写本篇文章</strong></p><h5 id="最后-真感谢每一位小伙伴，竟然看完了我的文章，谢谢你们啦，有帮助的话，点个赞呀"><a href="#最后-真感谢每一位小伙伴，竟然看完了我的文章，谢谢你们啦，有帮助的话，点个赞呀" class="headerlink" title="最后: 真感谢每一位小伙伴，竟然看完了我的文章，谢谢你们啦，有帮助的话，点个赞呀"></a>最后: 真感谢每一位小伙伴，竟然看完了我的文章，谢谢你们啦，有帮助的话，点个赞呀</h5><p>题外话：希望小伙伴们都别用于非法的手段，本文只是技术交流</p><p><strong>谢谢大家</strong></p><p>相关文献参考：</p><blockquote><p><a href="https://blog.csdn.net/qq_38449518/article/details/82414069?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1" target="_blank" rel="noopener">META-INF目录是干啥用的？</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;重点：==先向声明一下：本文仅仅是用于技术交流，而非传播sexy相关的东西，谢谢。==&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这是一篇&lt;strong&gt;入门级的APP逆向教程&lt;/strong&gt;，如有写着不对的地方，烦请大佬们指出，互相学习，谢谢啦&lt;/p&gt;
    
    </summary>
    
    
      <category term="安卓逆向" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/"/>
    
    
      <category term="安卓逆向" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>【Python】getattr和setattr的源码分析及使用</title>
    <link href="http://yoursite.com/2020/05/04/get-and-set-attr/"/>
    <id>http://yoursite.com/2020/05/04/get-and-set-attr/</id>
    <published>2020-05-04T08:40:53.000Z</published>
    <updated>2020-05-04T08:41:33.008Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p><strong>鄙人有次在使用<code>SQLALchemy</code>的时候，对查询出来的对象，进行获取/重新赋值产生了点小问题</strong></p><p><strong>下面来一起看看这个小问题：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.dialects.mysql <span class="keyword">import</span> TINYINT, INTEGER, VARCHAR, TEXT, DATE, DATETIME</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine, Column</span><br><span class="line"></span><br><span class="line">uri = <span class="string">"mysql+pymysql://root:@127.0.0.1:3306/test?charset=utf8mb4"</span></span><br><span class="line">Base = declarative_base()</span><br><span class="line">engine = create_engine(uri, pool_pre_ping=<span class="literal">True</span>, echo=<span class="literal">True</span>)</span><br><span class="line">Session = sessionmaker(bind=engine)</span><br><span class="line">Base = declarative_base()</span><br><span class="line">session = Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Base)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"tStudent"</span></span><br><span class="line">    id = Column(INTEGER, autoincrement=<span class="literal">True</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    nValid = Column(INTEGER, comment=<span class="string">"1-有效；2- 无效"</span>, nullable=<span class="literal">False</span>, default=<span class="number">1</span>)</span><br><span class="line">    sName = Column(VARCHAR(<span class="number">100</span>), comment=<span class="string">"学生姓名"</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    nAge = Column(INTEGER, comment=<span class="string">"年龄"</span>)</span><br><span class="line">    sCnDesc = Column(TEXT)</span><br><span class="line">    sEnDesc = Column(TEXT)</span><br><span class="line">    </span><br><span class="line">student_a = Student()</span><br><span class="line">student_a.id = <span class="number">23</span></span><br><span class="line">student_a.nValid = <span class="number">1</span></span><br><span class="line">student_a.sName = <span class="string">"James"</span></span><br><span class="line">student_a.nAge = <span class="number">35</span></span><br><span class="line">student_a.sCnDesc = <span class="string">"大家好，我叫詹姆斯！"</span></span><br><span class="line">student_a.sEnDesc = <span class="string">"Hello everyone, My name is James!"</span></span><br><span class="line"></span><br><span class="line">session.add(student)</span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>鄙人开发中遇到一个这样的使用：<br>当我通过<code>sqlalchemy</code>查询数据，而且是使用<code>.all()</code>来查询的时候，<br>返回的是一个<code>list</code>，且里面的每一个元素都是一个<code>Object</code>;</p><p>而此时我想要<strong>预先设置好一个list/set</strong>来存这些字段，<br>然后获取的时候<strong>通过遍历来获取</strong>，心里想：这样不就是解决我的问题了吗，这能有多难？</p><p>然后操作就是这样写：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">res = session.query(Student).all()</span><br><span class="line"><span class="comment"># 比如，要获取属性id、sName、nAge：</span></span><br><span class="line">keys = [<span class="string">"id"</span>, <span class="string">"sName"</span>, <span class="string">"nAge"</span>]</span><br><span class="line"><span class="keyword">for</span> one <span class="keyword">in</span> res:</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> keys:</span><br><span class="line">        print(<span class="string">f"属性:<span class="subst">&#123;k&#125;</span> 对应的值为:<span class="subst">&#123;one.k&#125;</span>"</span>)</span><br></pre></td></tr></table></figure><br><strong>现在请你们来猜测一下这个使用对不对？或者输出结果是什么？你们先想一下结果再往下看…</strong></p><p>此时运行将会得到下面的错误，是不是很惊喜？嗯哼？啥玩意啊？<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"E:/projects/python/daily/temp.py"</span>, line <span class="number">208</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(<span class="string">f"属性:<span class="subst">&#123;k&#125;</span> 对应的值为:<span class="subst">&#123;one.k&#125;</span>"</span>)</span><br><span class="line">AttributeError: <span class="string">'Student'</span> object has no attribute <span class="string">'k'</span></span><br></pre></td></tr></table></figure><br>看了一下，没有属性 <code>k</code>，这student对象的确没有属性 <code>k</code>啊，我的天，那我得怎么用？</p><p>然后这时候如果你使用 <code>getattr</code>的话，这就很容易解决你这种需求，下面来分析一下源码：<br>这两个作为Python的内置属性，下面来分析一下源码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getattr</span><span class="params">(object, name, default=None)</span>:</span> <span class="comment"># known special case of getattr</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    getattr(object, name[, default]) -&gt; value</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Get a named attribute from an object; getattr(x, 'y') is equivalent to x.y.</span></span><br><span class="line"><span class="string">    When a default argument is given, it is returned when the attribute doesn't</span></span><br><span class="line"><span class="string">    exist; without it, an exception is raised in that case.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setattr</span><span class="params">(x, y, v)</span>:</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Sets the named attribute on the given object to the specified value.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    setattr(x, 'y', v) is equivalent to ``x.y = v''</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><p>从上面的源码可以分析出来 <code>getattr</code>就是从一个对象从获取你想要的属性，使用格式是：</p><ul><li>[x] <code>getattr(对象, 你要获取的属性)</code></li></ul><p>那么我这个例子里面的用法就是：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">res = session.query(Student).all()</span><br><span class="line"><span class="comment"># 比如，要获取属性id、sName、nAge：</span></span><br><span class="line">keys = [<span class="string">"id"</span>, <span class="string">"sName"</span>, <span class="string">"nAge"</span>]</span><br><span class="line"><span class="keyword">for</span> one <span class="keyword">in</span> res:</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> keys:</span><br><span class="line">        <span class="comment"># one.k 改为 getattr(one, k) 即可获取对应的属性</span></span><br><span class="line">        print(<span class="string">f"属性:<span class="subst">&#123;k&#125;</span> 对应的值为:<span class="subst">&#123;getattr(one, k)&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">属性:id 对应的值为:<span class="number">23</span></span><br><span class="line">属性:sName 对应的值为:James</span><br><span class="line">属性:nAge 对应的值为:<span class="number">35</span></span><br></pre></td></tr></table></figure></p><ul><li>[x] <code>setattr</code>的使用格式是：<code>setattr(对象, 需要设置的属性, 设置的内容)</code><br>请看下面栗子：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">res = session.query(Student).all()</span><br><span class="line"><span class="comment"># 比如，要获取属性id、sName、nAge：</span></span><br><span class="line">keys = [<span class="string">"id"</span>, <span class="string">"sName"</span>, <span class="string">"nAge"</span>]</span><br><span class="line"><span class="keyword">for</span> one <span class="keyword">in</span> res:</span><br><span class="line">    print(<span class="string">"修改前：id:&#123;&#125; sName:&#123;&#125; nAge:&#123;&#125;"</span>.format(one.id, one.sName, one.nAge))</span><br><span class="line">    setattr(one, <span class="string">"id"</span>, <span class="number">24</span>)</span><br><span class="line">    setattr(one, <span class="string">"sName"</span>, <span class="string">"Kobe Bean Bryant"</span>)</span><br><span class="line">    setattr(one, <span class="string">"nAge"</span>, <span class="number">42</span>)</span><br><span class="line">    session.commit()</span><br><span class="line">    print(<span class="string">"修改后：id:&#123;&#125; sName:&#123;&#125; nAge:&#123;&#125;"</span>.format(one.id, one.sName, one.nAge))</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">修改前：id:<span class="number">23</span> sName:James nAge:<span class="number">35</span></span><br><span class="line">修改后：id:<span class="number">24</span> sName:Kobe Bean Bryant nAge:<span class="number">42</span></span><br></pre></td></tr></table></figure><p>可以再次通过上面的<code>getattr</code>使用来查询一遍数据库，即可验证刚刚的用法对不对</p><p>==同时，官方还指出：<code>setattr(x, &#39;y&#39;, v)</code>是等价于<code>x.y = v</code>，笔者通过分析，这个用法其实也可以对这个<code>x</code>对象进行添加另外一个新的属性<code>y</code>==</p><p>下面这个例子是给对象增加一个<code>school</code>属性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setattr(student_a, <span class="string">"school"</span>, <span class="string">"Beijing University"</span>)</span><br><span class="line">print(student_a.schole)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line">Beijing University</span><br></pre></td></tr></table></figure><p><strong>小教程有用的话，点个赞吧<br>谢谢大家，我系渣渣辉</strong></p><p><strong>EOF</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;鄙人有次在使用&lt;code&gt;SQLALchemy&lt;/code&gt;的时候，对查询出来的对象，进行获取/重新赋值产生了点小问题&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;下面来一起看看这个小问题：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; sqlalchemy.orm &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sessionmaker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; sqlalchemy.ext.declarative &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; declarative_base&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; sqlalchemy.dialects.mysql &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TINYINT, INTEGER, VARCHAR, TEXT, DATE, DATETIME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; sqlalchemy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; create_engine, Column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uri = &lt;span class=&quot;string&quot;&gt;&quot;mysql+pymysql://root:@127.0.0.1:3306/test?charset=utf8mb4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Base = declarative_base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;engine = create_engine(uri, pool_pre_ping=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, echo=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Session = sessionmaker(bind=engine)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Base = declarative_base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session = Session()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Base)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __tablename__ = &lt;span class=&quot;string&quot;&gt;&quot;tStudent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id = Column(INTEGER, autoincrement=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, primary_key=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nValid = Column(INTEGER, comment=&lt;span class=&quot;string&quot;&gt;&quot;1-有效；2- 无效&quot;&lt;/span&gt;, nullable=&lt;span class=&quot;literal&quot;&gt;False&lt;/span&gt;, default=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sName = Column(VARCHAR(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;), comment=&lt;span class=&quot;string&quot;&gt;&quot;学生姓名&quot;&lt;/span&gt;, nullable=&lt;span class=&quot;literal&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nAge = Column(INTEGER, comment=&lt;span class=&quot;string&quot;&gt;&quot;年龄&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sCnDesc = Column(TEXT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sEnDesc = Column(TEXT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;student_a = Student()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;student_a.id = &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;student_a.nValid = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;student_a.sName = &lt;span class=&quot;string&quot;&gt;&quot;James&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;student_a.nAge = &lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;student_a.sCnDesc = &lt;span class=&quot;string&quot;&gt;&quot;大家好，我叫詹姆斯！&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;student_a.sEnDesc = &lt;span class=&quot;string&quot;&gt;&quot;Hello everyone, My name is James!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session.add(student)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session.commit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【最全】JS获取浏览器属性信息</title>
    <link href="http://yoursite.com/2020/05/04/webdriver-attribute/"/>
    <id>http://yoursite.com/2020/05/04/webdriver-attribute/</id>
    <published>2020-05-04T08:39:36.000Z</published>
    <updated>2020-05-04T08:40:16.698Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>当一个爬虫工程师遇到逆向的时候，如果你使用的 selenuim 或者 pyppeteer 的时候，你是否考虑过，对浏览器的特征进行检查，这样你才能过得了设防。</p><a id="more"></a><h6 id="总之，个人觉得还不错，这些属性值检查还挺全的，所以就收藏起来了，别说了-Just-do-IT-，燥起来吧"><a href="#总之，个人觉得还不错，这些属性值检查还挺全的，所以就收藏起来了，别说了-Just-do-IT-，燥起来吧" class="headerlink" title="==总之，个人觉得还不错，这些属性值检查还挺全的，所以就收藏起来了，别说了 Just do IT ，燥起来吧~~~=="></a>==总之，个人觉得还不错，这些属性值检查还挺全的，所以就收藏起来了，别说了 Just do IT ，燥起来吧~~~==</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt; New Document &lt;/title&gt;</span><br><span class="line">        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0,user-scalable=no&quot;&gt;</span><br><span class="line">        &lt;meta name=&quot;Generator&quot; content=&quot;EditPlus&quot;&gt;</span><br><span class="line">        &lt;meta name=&quot;Author&quot; content=&quot;&quot;&gt;</span><br><span class="line">        &lt;meta name=&quot;Keywords&quot; content=&quot;&quot;&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">        &lt;meta name=&quot;Description&quot; content=&quot;&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script id=clientEventHandlersJS language=javascript&gt;</span><br><span class="line">            /******************************************下为浏览器信息************************************************/</span><br><span class="line">            //获取浏览器相关信息</span><br><span class="line">            function allinfo() &#123;</span><br><span class="line">                var appName = navigator.appName; //浏览器的正式名称</span><br><span class="line">                var appVersion = navigator.appVersion; //浏览器的版本号</span><br><span class="line">                var cookieEnabled = navigator.cookieEnabled; // 返回用户浏览器是否启用了cookie</span><br><span class="line">                var cpuClass = navigator.cpuClass; //返回用户计算机的cpu的型号，通常intel芯片返回&quot;x86&quot;（火狐没有）</span><br><span class="line"></span><br><span class="line">                var mimeType = navigator.mimeTypes; // 浏览器支持的所有MIME类型的数组</span><br><span class="line">                var platform = navigator.platform; // 浏览器正在运行的操作系统平台，包括Win16(windows3.x)  </span><br><span class="line">                //   Win32(windows98,Me,NT,2000,xp),Mac68K(Macintosh 680x0)</span><br><span class="line">                //     和ＭacPPC(Macintosh PowerPC)</span><br><span class="line">                var plugins = navigator.plugins; //  安装在浏览器上的所有插件的数组</span><br><span class="line">                var userLanguage = navigator.userLanguage; // 用户在自己的操作系统上设置的语言（火狐没有）</span><br><span class="line">                var userAgent = navigator.userAgent; //包含以下属性中所有或一部分的字符串：appCodeName,appName,appVersion,language,platform</span><br><span class="line">                var systemLanguage = navigator.systemLanguage; // 用户操作系统支持的默认语言（火狐没有）</span><br><span class="line"></span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                var type = &quot;&quot;;</span><br><span class="line">                if (isIe()) &#123;</span><br><span class="line">                    type = &quot;IE浏览器&quot;;</span><br><span class="line">                &#125; else if (isFireFox()) &#123;</span><br><span class="line">                    type = &quot;火狐浏览器&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;浏览器类型：&lt;/td&gt;&lt;td&gt;&quot; + type + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line"></span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;浏览器属性信息：&lt;/td&gt;&lt;td&gt;&quot; + userAgent + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;浏览器的正式名称：&lt;/td&gt;&lt;td&gt;&quot; + appName + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;浏览器的版本号：&lt;/td&gt;&lt;td&gt;&quot; + appVersion + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;浏览器的是否启用了cookie：&lt;/td&gt;&lt;td&gt;&quot; + cookieEnabled + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;cpu等级：&lt;/td&gt;&lt;td&gt;&quot; + cpuClass + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;浏览器的MIME类型：&lt;/td&gt;&lt;td&gt;&quot; + mimeType.length + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;系统平台：&lt;/td&gt;&lt;td&gt;&quot; + platform + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;安装的插件：&lt;/td&gt;&lt;td&gt;&quot; + plugins + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;插件的数量：&lt;/td&gt;&lt;td&gt;&quot; + plugins.length + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;插件的名称：&lt;/td&gt;&lt;td&gt;&quot; + getPluginName() + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;用户设置的操作系统语言：&lt;/td&gt;&lt;td&gt;&quot; + userLanguage + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;操作系统支持的默认语言：&lt;/td&gt;&lt;td&gt;&quot; + systemLanguage + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;Director：&lt;/td&gt;&lt;td&gt;&quot; + checkePlugs(&quot;Director&quot;) + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;javaEnabled：&lt;/td&gt;&lt;td&gt;&quot; + navigator.javaEnabled() + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;是否有quickTime：&lt;/td&gt;&lt;td&gt;&quot; + checkePlugs(&quot;QuickTime&quot;) + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;flash插件情况：&lt;/td&gt;&lt;td&gt;&quot; + checkePlugs(&apos;Shockwave Flash&apos;) + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;是否有MediaPlayer：&lt;/td&gt;&lt;td&gt;&quot; + checkePlugs(&quot;MediaPlayer&quot;) + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;是否有realPlayer:&lt;/td&gt;&lt;td&gt;&quot; + checkePlugs(&quot;RealPlayer&quot;) + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;屏幕分辨率高度：&lt;/td&gt;&lt;td&gt;&quot; + window.screen.height + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;屏幕分辨率宽度：&lt;/td&gt;&lt;td&gt;&quot; + window.screen.width + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;颜色质量：&lt;/td&gt;&lt;td&gt;&quot; + window.screen.colorDepth + &quot;位&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;像素：&lt;/td&gt;&lt;td&gt;&quot; + window.screen.deviceXDPI + &quot;像素/英寸&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr&gt;&lt;td&gt;字体是否平滑：&lt;/td&gt;&lt;td&gt;&quot; + window.screen.fontSmoothingEnabled + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                //info += &quot;&lt;tr&gt;&lt;td&gt;规定浏览器是否启用数据污点：&lt;/td&gt;&lt;td&gt;&quot; + navigator.taintEnabled() + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                document.getElementById(&quot;elInfo&quot;).innerHTML = info;</span><br><span class="line">                return info;</span><br><span class="line"></span><br><span class="line">                //director</span><br><span class="line"></span><br><span class="line">                var appCodeName = navigator.appCodeName; //与浏览器相关的内部代码名</span><br><span class="line">                var appMinorVersion = navigator.appMinorVersion; //辅版本号（通常应用于浏览器的补丁或服务包)</span><br><span class="line"></span><br><span class="line">                var language = navigator.language; //浏览器支持的语言 （IE没有）</span><br><span class="line"></span><br><span class="line">                var onLine = navigator.onLine; //返回浏览器是否处于在线模式（IE4以上版本）</span><br><span class="line"></span><br><span class="line">                var opsProfile = navigator.opsProfile; // 未定义   （IE、火狐没有）</span><br><span class="line"></span><br><span class="line">                var oscpu = navigator.oscpu; //浏览器正在运行的操作系统，其中可能有CPU的信息（IE没有）</span><br><span class="line"></span><br><span class="line">                var product = navigator.product; // 浏览器的产品名（IE没有）</span><br><span class="line"></span><br><span class="line">                var productSub = navigator.productSub; //关于浏览器更多信息（IE没有）</span><br><span class="line"></span><br><span class="line">                var securityPolicy = navigator.securityPolicy; // 浏览器支持的加密类型（IE没有）</span><br><span class="line"></span><br><span class="line">                var userProfile = navigator.userProfile; //  返回一个UserProfile对象，它存储用户的个人信息（火狐没有）</span><br><span class="line"></span><br><span class="line">                var vender = navigator.vender; // 浏览器厂商名称（IE、火狐没有）</span><br><span class="line"></span><br><span class="line">                var vendorSub = navigator.vendorSub; // 关于浏览器厂商更多的信息  </span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            //获取插件所有的名称</span><br><span class="line">            function getPluginName() &#123;</span><br><span class="line">                var info = &quot;&quot;;</span><br><span class="line">                var plugins = navigator.plugins;</span><br><span class="line">                if (plugins.length &gt; 0) &#123;</span><br><span class="line">                    for (i = 0; i &lt; navigator.plugins.length; i++) &#123;</span><br><span class="line">                        info += navigator.plugins[i].name + &quot;;&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line">            //检查是否安装了某插件，如果安装了返回版本号</span><br><span class="line">            function checkePlugs(pluginname) &#123;</span><br><span class="line">                var f = &quot;-&quot;</span><br><span class="line">                var plugins = navigator.plugins;</span><br><span class="line">                if (plugins.length &gt; 0) &#123;</span><br><span class="line">                    for (i = 0; i &lt; navigator.plugins.length; i++) &#123;</span><br><span class="line">                        if (navigator.plugins[i].name.indexOf(pluginname) &gt;= 0) &#123;</span><br><span class="line">                            f = navigator.plugins[i].description.split(pluginname)[1];</span><br><span class="line">                            return f;</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">            //判断是否IE</span><br><span class="line">            function isIe() &#123;</span><br><span class="line">                var i = navigator.userAgent.toLowerCase().indexOf(&quot;msie&quot;);</span><br><span class="line">                return i &gt;= 0;</span><br><span class="line">            &#125;</span><br><span class="line">            //判断是否firefox</span><br><span class="line">            function isFireFox() &#123;</span><br><span class="line">                var i = navigator.userAgent.toLowerCase().indexOf(&quot;firefox&quot;);</span><br><span class="line">                return i &gt;= 0;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            /******************************************以上为浏览器信息，以下为pc信息************************************************/</span><br><span class="line">            var locator = new ActiveXObject(&quot;WbemScripting.SWbemLocator&quot;);</span><br><span class="line">            var service = locator.ConnectServer(&quot;.&quot;);</span><br><span class="line"></span><br><span class="line">            function cpuInfo() &#123; //CPU 信息  </span><br><span class="line">                var properties = service.ExecQuery(&quot;SELECT * FROM Win32_Processor&quot;);</span><br><span class="line">                var e = new Enumerator(properties);</span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr  bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos; &gt;&lt;td width=&apos;450&apos; &gt;CPU 信息&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                for (; !e.atEnd(); e.moveNext()) &#123;</span><br><span class="line">                    var p = e.item();</span><br><span class="line">                    info += &quot;&lt;tr style=&apos;color: red&apos;&gt;&lt;td &gt;CPU序列号:&quot; + p.ProcessorID + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;&quot; + p.Caption + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;CPU编号：&quot; + p.DeviceID + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;CPU型号：&quot; + p.Name + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;CPU状态：&quot; + p.CpuStatus + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;CPU可用性：&quot; + p.Availability + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;CUP Level：&quot; + p.Level + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;主机名称：&quot; + p.SystemName + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;Processor Type：&quot; + p.ProcessorType + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function softDisk() &#123; //软盘信息 </span><br><span class="line">                var properties = service.ExecQuery(&quot;SELECT * FROM Win32_FloppyDrive&quot;);</span><br><span class="line">                var e = new Enumerator(properties);</span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr  bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos; &gt;&lt;td width=&apos;450&apos;&gt;软盘信息&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                for (; !e.atEnd(); e.moveNext()) &#123;</span><br><span class="line">                    var p = e.item();</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;&quot; + p.Description + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;&quot; + p.DeviceID + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;&quot; + p.Status + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;&quot; + p.Manufacuturer + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function RomInfo() &#123; //CD-ROM 信息 </span><br><span class="line">                var properties = service.ExecQuery(&quot;SELECT * FROM Win32_CDROMDrive&quot;);</span><br><span class="line">                var e = new Enumerator(properties);</span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos;&gt;&lt;td width=&apos;450&apos; &gt;CD-ROM 信息 &lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                for (; !e.atEnd(); e.moveNext()) &#123;</span><br><span class="line">                    var p = e.item();</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;驱动器名称：&quot; + p.Caption + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;描述：&quot; + p.Description + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;盘符：&quot; + p.Drive + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;驱动器状态：&quot; + p.Status + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;是否在使用：&quot; + p.MediaLoaded + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function keyBoardInfo() &#123; //键盘信息 </span><br><span class="line">                var properties = service.ExecQuery(&quot;SELECT * FROM Win32_Keyboard&quot;);</span><br><span class="line">                var e = new Enumerator(properties);</span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr  bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos;&gt;&lt;td width=&apos;450&apos;&gt;键盘信息 &lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                for (; !e.atEnd(); e.moveNext()) &#123;</span><br><span class="line">                    var p = e.item();</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;键盘描述：&quot; + p.Description + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;键盘名称：&quot; + p.Name + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;键盘状态：&quot; + p.Status + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function mainBoard() &#123; //主板信息 </span><br><span class="line">                var properties = service.ExecQuery(&quot;SELECT * FROM Win32_BaseBoard&quot;);</span><br><span class="line">                var e = new Enumerator(properties);</span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos;&gt;&lt;td width=&apos;450&apos;&gt;主板信息 &lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                for (; !e.atEnd(); e.moveNext()) &#123;</span><br><span class="line">                    var p = e.item();</span><br><span class="line">                    info += &quot;&lt;tr style=&apos;color: red&apos;&gt;&lt;td &gt;主板ID：&quot; + p.SerialNumber + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;&quot; + p.HostingBoard + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;制造商：&quot; + p.Manufacturer + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;是否开启：&quot; + p.PoweredOn + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;型号：&quot; + p.Product + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr&gt;&lt;td &gt;版本：&quot; + p.Version + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function disk() &#123; //硬盘序列号 信息</span><br><span class="line">                var properties = service.ExecQuery(&quot;SELECT * FROM Win32_DiskDrive&quot;);</span><br><span class="line">                var e = new Enumerator(properties);</span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos; &gt;&lt;td width=&apos;450&apos;&gt;硬盘信息 &lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                for (; !e.atEnd(); e.moveNext()) &#123;</span><br><span class="line">                    var p = e.item();</span><br><span class="line">                    info += &quot;&lt;tr style=&apos;color: red&apos;&gt;&lt;td &gt;硬盘序列号：&quot; + p.signature + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line">            //获取Ram信息</span><br><span class="line">            function raminfo() &#123;</span><br><span class="line">                var system = new Enumerator(service.ExecQuery(&quot;SELECT * FROM Win32_ComputerSystem&quot;)).item();</span><br><span class="line"></span><br><span class="line">                var physicMenCap = Math.ceil(system.TotalPhysicalMemory / 1024 / 1024);</span><br><span class="line">                //内存信息 </span><br><span class="line">                var memory = new Enumerator(service.ExecQuery(&quot;SELECT * FROM Win32_PhysicalMemory&quot;));</span><br><span class="line">                for (var mem = [], i = 0; !memory.atEnd(); memory.moveNext()) &#123;</span><br><span class="line">                    mem[i++] = &#123;</span><br><span class="line">                        cap: memory.item().Capacity / 1024 / 1024,</span><br><span class="line">                        speed: memory.item().Speed</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos; &gt;&lt;td width=&apos;450&apos;&gt;内存信息 &lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr style=&apos;color: red&apos;&gt;&lt;td &gt;内存总量：&quot; + (mem[0].cap + mem[1].cap) + &quot;M&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr style=&apos;color: red&apos;&gt;&lt;td &gt;可用物理内存：&quot; + physicMenCap + &quot;M&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //获取网络连接信息</span><br><span class="line">            function ipinfo() &#123;</span><br><span class="line"></span><br><span class="line">                var properties = service.ExecQuery(&quot;SELECT * FROM Win32_NetworkAdapterConfiguration Where IPEnabled=TRUE&quot;);</span><br><span class="line">                var e = new Enumerator(properties);</span><br><span class="line">                var info = &quot;&lt;table border=1&gt;&quot;;</span><br><span class="line">                info += &quot;&lt;tr bgcolor=&apos;#CDEDED&apos; style=&apos;font-weight: bold;&apos; &gt;&lt;td width=&apos;450&apos;&gt;网络连接信息：&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                var i = 1;</span><br><span class="line">                for (; !e.atEnd(); e.moveNext()) &#123;</span><br><span class="line">                    var p = e.item();</span><br><span class="line">                    info += &quot;&lt;tr style=&apos;color: red&apos;&gt;&lt;td &gt;MAC地址&quot; + i + &quot;：&quot; + p.MACAddress + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    info += &quot;&lt;tr style=&apos;color: red&apos;&gt;&lt;td &gt;IP地址&quot; + i + &quot;：&quot; + p.IPAddress(0) + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                info += &quot;&lt;/table&gt;&quot;;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function pcInfo() &#123; //所有信息 </span><br><span class="line"></span><br><span class="line">                var info = cpuInfo();</span><br><span class="line">                info += disk();</span><br><span class="line">                info += raminfo();</span><br><span class="line">                info += mainBoard();</span><br><span class="line">                info += ipinfo();</span><br><span class="line">                info += keyBoardInfo();</span><br><span class="line">                info += RomInfo();</span><br><span class="line">                info += softDisk();</span><br><span class="line"></span><br><span class="line">                document.getElementById(&apos;elInfo&apos;).innerHTML = info;</span><br><span class="line">                return info;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            /******************************************以上为pc信息************************************************/</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body&gt;</span><br><span class="line"></span><br><span class="line">        &lt;INPUT id=&quot;Button1&quot; type=&quot;button&quot; value=&quot;浏览器所有信息&quot; name=&quot;Button1&quot; language=javascript onclick=&quot;allinfo()&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;INPUT id=&quot;Button1&quot; type=&quot;button&quot; value=&quot;客户端pc信息&quot; name=&quot;Button1&quot; language=javascript onclick=&quot;pcInfo()&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id=&quot;elInfo&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>效果图如下：</p><p><img src="https://img-blog.csdn.net/20160623200057106" alt="这里写图片描述"><br>其实，个人觉得用于移动端比较不错的。</p><h5 id="至此本文教程转载完毕，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程转载完毕，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程转载完毕，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程转载完毕，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h6 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h6><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103461851" target="_blank" rel="noopener">爬虫js解密分析:某某猫小说</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103472617" target="_blank" rel="noopener">爬虫js解密分析:某某云文学</a>;</p></blockquote><p>本篇文章<a href="https://blog.csdn.net/qq_16559905/article/details/51746330" target="_blank" rel="noopener">来源</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;当一个爬虫工程师遇到逆向的时候，如果你使用的 selenuim 或者 pyppeteer 的时候，你是否考虑过，对浏览器的特征进行检查，这样你才能过得了设防。&lt;/p&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="JS逆向" scheme="http://yoursite.com/tags/JS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>建议收藏-使用pytorch时遇到的问题汇总</title>
    <link href="http://yoursite.com/2020/05/04/pytorch-errors/"/>
    <id>http://yoursite.com/2020/05/04/pytorch-errors/</id>
    <published>2020-05-04T08:37:49.000Z</published>
    <updated>2020-05-04T08:38:38.029Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>报错<code>TypeError: unhashable type: &#39;numpy.ndarray&#39;</code><br><strong>原因</strong>：在将pytorch的longTensor转为numpy，并用于dict的key的时候，会出现这样的错误。其实程序输出已经是int了，但是还是会被认为是ndarray。<br><strong>解决</strong>：在原来的基础上加上.item()</p><pre><code>classId = support_y[i].long().cpu().detach().numpy().item()</code></pre></li></ol><a id="more"></a><ol><li><p>数据加载的时候遇到<code>TypeError: &#39;int&#39; object is not callable</code><br><strong>原因</strong>：数据不是Tensor类型的而是np.array或其他类型的。<br><strong>解决</strong>：</p><pre><code>tensor = torch.LongTensor(data_x)data_x = autograd.Variable(tensor)tensor = torch.LongTensor(data_y)data_y = autograd.Variable(tensor)</code></pre></li></ol><ol><li><p>数据加载的时候遇到<code>RuntimeError: DataLoader worker (pid(s) 18620, 45872) exited unexpectedly</code><br><strong>解决</strong>：loader中令<code>num_workers=0</code></p></li><li><p><code>RuntimeError: input.size(-1) must be equal to input_size. Expected 10, got 2000</code><br><strong>原因</strong>： 使用view时维度指定错误，LSTM(input,(h0,c0)) 指定batch_first=True​后，input就是(batch_size,seq_len,input_size)否则为input(seq_len, batch, input_size)<br><strong>解决</strong>：</p><pre><code>lstm_out, self.hidden = self.lstm(        embeds.view(self.batch_size, 200, EMBEDDING_DIM), self.hidden) </code></pre></li></ol><ol><li><p>报错<code>AttributeError: module &#39;torch.utils.data&#39; has no attribute &#39;random_split&#39;</code>。<br><strong>原因</strong>：pytorch1.1.0版本的random_split在torch.utils.data里，而0.4.0版本的random_split在torch.utils.data.dataset里。<br><strong>解决</strong>：<code>from torch.utils.data.dataset import random_split</code>。</p></li><li><p>报错<code>ValueError: Sum of input lengths does not equal the length of the input dataset!</code><br><strong>原因</strong>：数据集问题。</p></li><li><p>报错<code>TypeError: can&#39;t convert CUDA tensor to numpy. Use Tensor.cpu() to copy the tens or to host memory first.</code><br><strong>解决</strong>：将准确率计算改为：</p><pre><code>acc1 = (pred_cls1 == val_y1).cpu().sum().numpy() / pred_cls1.size()[0]</code></pre></li></ol><ol><li><p>报错<code>RuntimeError: Input and hidden tensors are not at the same device, found input t ensor at cuda:1 and hidden tensor at cuda:0</code><br><strong>原因</strong>：因为使用了</p><pre><code>if torch.cuda.device_count() &gt; 1:    print(&quot;Let&#39;s use&quot;, torch.cuda.device_count(), &quot;GPUs!&quot;)    model = nn.DataParallel(model)model.to(device)</code></pre></li></ol><pre><code>而tensor没有指定卡的ID。  **解决**：两种方式。  1）先定义一个`device = torch.device(&#39;cuda:0&#39; if torch.cuda.is_available() else &#39;cpu&#39;)`（这里面已经定义了device在卡0上“cuda:0”），然后将`model = torch.nn.DataParallel(model，devices_ids=[0, 1, 2]）`(假设有三张卡)。此后需要将tensor 也迁移到GPU上去。注意所有的tensor必须要在同一张GPU上面，即：`tensor1 = tensor1.to(device)`, `tensor2 = tensor2.to(device)`等等。**注意**：一定不能仅仅是`tensor1.to(device)`而不赋值，这样只会创建副本。  2）直接用tensor.cuda()的方法。即先`model = torch.nn.DataParallel(model, device_ids=[0, 1, 2])` (假设有三块卡， 卡的ID 为0， 1， 2)，然后`tensor1 = tensor1.cuda(0)`, `tensor2=tensor2.cuda(0)`等等。（我这里面把所有的tensor全放进ID 为 0 的卡里面，也可以将全部的tensor都放在ID 为1 的卡里面）  参考网址：[学习Pytorch过程遇到的坑（持续更新中）](https://zhuanlan.zhihu.com/p/61892329)</code></pre><ol><li><p>报错<code>‘DataParallel’ object has no attribute ‘init_hidden’</code>。<br><strong>原因</strong>：<code>nn.DataParallel(m)</code>这句返回的已经不是原始的m了，而是一个DataParallel，原始的m保存在DataParallel的module变量里面。<br><strong>解决</strong>： 在DataParallel和to(device)之后如果需要修改model，则需要</p><pre><code>if isinstance(model, nn.DataParallel):    model = model.module</code></pre></li></ol><ol><li><p>报错<code>Assertion</code>cur_target &gt;= 0 &amp;&amp; cur_target &lt; n_classes’ failed.`。<br><strong>原因</strong>：在分类训练中经常遇到这个问题，一般来说在网络中输出的种类数和label设置的种类数量不同的时候就会出现这个错误。Pytorch有个要求，在使用CrossEntropyLoss这个函数进行验证时label必须是以0开始的。<br><strong>解决</strong>：</p><p>   tags_ids = range(len(tags_set))   # 从0开始<br>   tag2id = pd.Series(tags_ids, index=tags_set)</p></li></ol><ol><li><p>报错<code>RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=&#39;cpu&#39; to map your storages to the CPU.</code><br><strong>原因</strong>：原本是GPU训练的模型要加载在CPU上。<br><strong>解决</strong>：<code>model = torch.load(model_path, map_location=&#39;cpu&#39;)</code><br>同理，如果原本4块GPU训练的，改为一块，则<code>model = torch.load(model_path, map_location=&#39;cuda:0&#39;)</code>；<br>如果是4块到两块：就把map_location改为：<code>map_location={&#39;cuda:1&#39;: &#39;cuda:0&#39;}</code>。</p></li><li><p>报错<code>size mismatch for word_embeddings.weight: copying a param with shape torch.Size([3403, 128]) from checkpoint, the shape in current model is torch.Size([12386, 128]).</code><br><strong>原因</strong>：加载的模型的word_embedding层参数和当前model输入的参数不匹配。<br><strong>解决</strong>：word2id、tag2id的长度要一致。</p></li><li><p>报错<code>RuntimeError: Expected hidden[0] size (2, 359, 256), got (2, 512, 256)</code>。<br><strong>原因</strong>：使用了DataLoader加载数据，数据集中的训练实例数不能被batch_size整除，最后一个batch的大小不等于batch_size，而hidden_layer初始化的时候用固定的batch_size初始化：<code>autograd.Variable(torch.zeros(self.num_layers * 2, self.batch_size, self.hidden_dim // 2))</code><br><strong>解决</strong>：如果模型不能处理批量大小的在线更改，就应在torch.utils.data中设置drop_last=True，因此，在培训期间只处理整批数据。即<code>testset_loader = DataLoader(test_db, batch_size=args.batch_size, shuffle=False, num_workers=1, pin_memory=True,drop_last=True)</code></p></li><li><p>在pytorch训练过程中出现loss=nan的情况。<br><strong>原因</strong>：<br>1.学习率太高。学习率比较大的时候，参数可能over shoot了，结果就是找不到极小值点；<br>减小学习率可以让参数朝着极值点前进<br>。2.loss函数有问题。<br>3.对于回归问题，可能出现了除0 的计算，加一个很小的余项可能可以解决。<br>4.数据本身，是否存在Nan，可以用numpy.any(numpy.isnan(x))检查一下input和target。<br>5.target本身应该是能够被loss函数计算的，比如sigmoid激活函数的target应该大于0，同样的需要检查数据集。<br><strong>解决</strong>：减小学习速率或者增大batch_size。</p></li><li><p>报错<code>RuntimeError: Trying to backward through the graph second time, but the buffers have already been freed. Please specify retain_variables=True when calling backward for the first time.</code><br><strong>原因</strong>：网络中存在多个sub-network，有2个甚至2个以上的loss需要分别对网络参数进行更新，比如两个需要分别执行loss1.backward() loss2.backward()。两个loss可能会有共同的部分，所以在执行第一次loss1.backward()完成之后，Pytorch会自动释放保存着的计算图，所以执行第二次loss2.backward()的时候就会出现计算图丢失的情况。<br><strong>解决</strong>：<br>1 执行<code>loss.backward(retain_graph=True)</code>保留计算图，但这样很可能会出现内存溢出(CUDA out of memory)的情况。因为Pytorch的机制是每次调用.backward()都会free掉所有buffers，所以它提示，让retain_graph。然而当retain后，buffers就不会被free了，所以会OOM。参考网址：<a href="https://blog.csdn.net/Mundane\_World/article/details/81038274" target="_blank" rel="noopener">https://blog.csdn.net/Mundane\_World/article/details/81038274</a><br>2 当不需要计算生成器的梯度，因此在使用生成数据计算辨别器时使用<code>.detach()</code>作为输入数据，这样就对当前图进行拆分，返回一个新的从当前图中分离的 Variable，返回的 Variable 永远不会需要梯度.参考网址：<a href="https://blog.csdn.net/u011276025/article/details/76997425" target="_blank" rel="noopener">https://blog.csdn.net/u011276025/article/details/76997425</a><br>3 对于我的代码，如果retain_graph=True则内存溢出，又找不到需要.detach()的地方，最后发现是因为我的model每次训练的时候没有重新初始化隐藏层。需要在<code>model.zero_grad()</code>之后<code>model.hidden = model.init_hidden()</code>来清空 LSTM 的隐状态，将其从上个实例的历史中分离出来，避免受之前运行代码的干扰。如果不重新初始化，会有报错。</p></li></ol><blockquote><p>参考文献：<a href="https://blog.csdn.net/vivian_ll/article/details/97001895" target="_blank" rel="noopener">点击我进行查看原文</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;报错&lt;code&gt;TypeError: unhashable type: &amp;#39;numpy.ndarray&amp;#39;&lt;/code&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;：在将pytorch的longTensor转为numpy，并用于dict的key的时候，会出现这样的错误。其实程序输出已经是int了，但是还是会被认为是ndarray。&lt;br&gt;&lt;strong&gt;解决&lt;/strong&gt;：在原来的基础上加上.item()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;classId = support_y[i].long().cpu().detach().numpy().item()
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="深度学习" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>【最便捷方法】pandas-处理缺失值</title>
    <link href="http://yoursite.com/2020/05/04/pandas-handle-nan/"/>
    <id>http://yoursite.com/2020/05/04/pandas-handle-nan/</id>
    <published>2020-05-04T08:36:35.000Z</published>
    <updated>2020-05-04T08:37:20.559Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><blockquote><p>最近看到一些教程关于“pandas读取数据之后，如何处理缺失值或者如何替换指定值为另外一个值”</p></blockquote><p>看了那些教程，然后进行了一会实操，发现不能满足我的需求，于是开始探索另外的解决办法</p><a id="more"></a><p>下面来看一下解决方案</p><h5 id="0x01、不设置默认加载空值为NAN-keep-default-na-False"><a href="#0x01、不设置默认加载空值为NAN-keep-default-na-False" class="headerlink" title="0x01、不设置默认加载空值为NAN keep_default_na=False"></a>0x01、不设置默认加载空值为NAN <code>keep_default_na=False</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pandas.read_excel(&quot;/home/project/day320/test.xlsx&quot;, keep_default_na=False)</span><br></pre></td></tr></table></figure><p>注释：pandas加载Excel表格，空值都是默认为 NAN，即源码中<code>keep_default_na=True</code><br>所以当我们想要空值就是空值的话，那么可以设置 <code>keep_default_na=False</code>，这时候，读取出来的空值是空字符串</p><blockquote><p>可是，我的Excel表格之前就是存在很多 NA 值的，这不能满足我的需求，我其实是想将 NA 值再还原回原来的空字符串，所以请继续看后面的方法</p></blockquote><h5 id="0x02、用dropna-、fillna-处理缺失值"><a href="#0x02、用dropna-、fillna-处理缺失值" class="headerlink" title="0x02、用dropna()、fillna()处理缺失值"></a>0x02、用dropna()、fillna()处理缺失值</h5><p>存在下面的使用方法：</p><ul><li><p>dropna：根据标签的值中是否存在缺失数据，然后对轴标签进行过滤，可以通过阈值来调节对缺失值的删除的容忍度</p></li><li><p>fillna：用指定值或者插值方法(如ffill或者bfill)填充缺失数据</p></li><li><p>isnull：用于判断单元格是否为空值；若为空值，则返回True</p></li><li>notnull：isnull的对立</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">删除空值：</span><br><span class="line">df.dropna() # 默认会删除所有的空值，包含所有行里面的、所有列里面的空值</span><br><span class="line"></span><br><span class="line">df.dropna(how=&quot;all&quot;) # 删除全为 NA 的行(即如果一整行的单元格都是NA的话，那么则删除这一行)</span><br><span class="line"></span><br><span class="line">df.dropna(axis=1, how=&quot;all&quot;) # 删除全为 NA 的列(即如果一整列的单元格都是NA的话，那么则删除这一列)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">判断空值：</span><br><span class="line">df.isnull() # 对应的返回布尔值，查看是否为空的数据</span><br><span class="line">df.notnull() # 与上一条相反</span><br><span class="line"></span><br><span class="line">填充缺失值：</span><br><span class="line">df.fillna(value=2, inplace=True) # 对缺失的NAN值全部替换为 0</span><br><span class="line"></span><br><span class="line">df.fillna(value=2, method=&quot;ffill&quot;, limit=2) </span><br><span class="line">- method：表示插值方式，默认为ffill，对这个字段更多详解请参考官网文档</span><br><span class="line">- limit：表示可以连续填充的最大次数(对于前向和后向填充)</span><br><span class="line">- value：需要填充的值，可以为标量(字符串、数值等)或者字典对象</span><br><span class="line">- inspace：表示是否在原来的对象上进行修改而不产生新的对象，true：在原基础上修改；false：会返回处理后的，新的对象</span><br></pre></td></tr></table></figure><h4 id="前方高能，巨坑提示-如果你的数据中其实看起来就是空值的，但是这时候有可能为-空白的字符串-那么，你使用fillna或者dropna是不会生效的！！！！"><a href="#前方高能，巨坑提示-如果你的数据中其实看起来就是空值的，但是这时候有可能为-空白的字符串-那么，你使用fillna或者dropna是不会生效的！！！！" class="headerlink" title="==前方高能，巨坑提示==如果你的数据中其实看起来就是空值的，但是这时候有可能为 空白的字符串 那么，你使用fillna或者dropna是不会生效的！！！！"></a>==前方高能，巨坑提示==如果你的数据中其实看起来就是空值的，但是这时候有可能为 <em>空白的字符串</em> 那么，你使用<code>fillna</code>或者<code>dropna</code>是不会生效的！！！！</h4><p>小结：对于一些不确定的，或者不一定为空的内容，还是不能直接使用这两个<code>dropna</code>、<code>fillna</code>这两个来处理缺失值。<br>相关参考fillna和inplace使用文章，<a href="https://www.jianshu.com/p/b5bb71aa7466" target="_blank" rel="noopener">请点击我进行了解</a></p><h5 id="0x03、使用强大的replace来填充任何值的数据"><a href="#0x03、使用强大的replace来填充任何值的数据" class="headerlink" title="0x03、使用强大的replace来填充任何值的数据"></a>0x03、使用强大的<code>replace</code>来填充任何值的数据</h5><p>pandas提供了一个replace方法，并且这个方法==可以使用正则==来处理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df.replace(to_replace=r&quot;^NA$&quot;, value=&quot;&quot;, inplace=True, regex=True)</span><br><span class="line"></span><br><span class="line">- to_replace：被替换的字符</span><br><span class="line">- value：替换后的字符</span><br><span class="line">- inplace：是否在原基础上进行修改</span><br><span class="line">- regex：是否为正则表达式方式</span><br></pre></td></tr></table></figure></p><p>由于我的表格里面的空值都是写着NA的，所以对于我来说，使用这个方法是最好的一个实现办法</p><p>如果你的空白字符可能含有空格、换行、制表符等空白字符的话，可以使用这个正则来替换：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.replace(to_replace=r&quot;^\s*$&quot;, value=&quot;&quot;, inplace=True, regex=True)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;最近看到一些教程关于“pandas读取数据之后，如何处理缺失值或者如何替换指定值为另外一个值”&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;看了那些教程，然后进行了一会实操，发现不能满足我的需求，于是开始探索另外的解决办法&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据处理" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
      <category term="数据处理" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>前端边距-反爬遇到的前端知识必知</title>
    <link href="http://yoursite.com/2020/05/04/html-know/"/>
    <id>http://yoursite.com/2020/05/04/html-know/</id>
    <published>2020-05-04T08:35:20.000Z</published>
    <updated>2020-05-04T08:35:58.544Z</updated>
    
    <content type="html"><![CDATA[<p>css字体颜色，下面是对p标签使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    /*p标签样式*/</span><br><span class="line">    p &#123;</span><br><span class="line">        text-align: center; /*居中*/</span><br><span class="line">        padding-top:20px; /*距离顶部300px*/</span><br><span class="line">        font-size: 10px; /*字体大小*/</span><br><span class="line">        color: purple; /*字体颜色*/</span><br><span class="line">        font-family: SimSun  ; /*设置字体为华文彩云*/</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;p&gt;显示中文 or not?&lt;/p&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;&lt;span class=&quot;barcode&quot;&gt;*TEST BARCODE*&lt;/span&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;right&quot;&gt;&lt;img class=&quot;logo&quot; src=&quot;logo.png&quot; alt=&quot;logo&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></p><a id="more"></a><h1 id="HTML边距设置之padding和margin"><a href="#HTML边距设置之padding和margin" class="headerlink" title="HTML边距设置之padding和margin"></a>HTML边距设置之padding和margin</h1><p>在CSS中margin是指从自身边框到另一个容器边框之间的距离，就是容器外距离。在CSS中padding是指自身边框到自身内部另一个容器边框之间的距离，就是容器内距离。</p><p><strong>下面讲解 padding和margin常用的用法</strong></p><p><strong>一、padding</strong></p><p><strong>1、语法结构</strong></p><p>（1）padding-left:10px; 左内边距</p><p>（2）padding-right:10px; 右内边距</p><p>（3）padding-top:10px; 上内边距</p><p>（4）padding-bottom:10px; 下内边距</p><p>（5）padding：10px; 四边统一内边距</p><p>（6）padding:10px 20px; 上下、左右内边距</p><p>（7）padding:10px 20px 30px; 上、左右、下内边距</p><p>（8）padding:10px 20px 30px 40px; 上、右、下、左内边距</p><p><strong>2、可能取的值</strong></p><p>（1）length  规定具体单位记的内边距长度</p><p>（2）%       基于父元素的宽度的内边距的长度</p><p>（3）auto    浏览器计算内边距</p><p>（4）inherit 规定应该从父元素继承内边距</p><p><strong>3、浏览器兼容问题</strong></p><p>（1）所有浏览器都支持padding属性</p><p>（2）任何版本IE都不支持属性值“inherit”</p><p><strong>二、margin</strong></p><p><strong>1、语法结构</strong></p><p>（1）margin-left:10px; 左外边距</p><p>（2）margin-right:10px; 右外边距</p><p>（3）margin-top:10px; 上外边距</p><p>（4）margin-bottom:10px; 下外边距</p><p>（5）margin:10px; 四边统一外边距</p><p>（6）margin:10px 20px; 上下、左右外边距</p><p>（7）margin:10px 20px 30px; 上、左右、下外边距</p><p>（8）margin:10px 20px 30px 40px; 上、右、下、左外边距</p><p><strong>2、可能取的值</strong></p><p>（1）length  规定具体单位记的外边距长度</p><p>（2）%       基于父元素的宽度的外边距的长度</p><p>（3）auto    浏览器计算外边距</p><p>（4）inherit 规定应该从父元素继承外边距</p><p><strong>3、浏览器兼容问题</strong></p><p>（1）所有浏览器都支持margin属性</p><p>（2）任何版本IE都不支持属性值“inherit”</p><p><strong>margin和padding的区别用图表示为：</strong></p><p><img src="https://img-blog.csdnimg.cn/20200228133403926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>参考文献 -&gt;  边距问题可以参考：<a href="https://blog.csdn.net/jimsonhappy/article/details/39534441" target="_blank" rel="noopener">HTML边距设置之padding和margin</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css字体颜色，下面是对p标签使用：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /*p标签样式*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text-align: center; /*居中*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        padding-top:20px; /*距离顶部300px*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        font-size: 10px; /*字体大小*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: purple; /*字体颜色*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        font-family: SimSun  ; /*设置字体为华文彩云*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;p&amp;gt;显示中文 or not?&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;td&amp;gt;&amp;lt;span class=&amp;quot;barcode&amp;quot;&amp;gt;*TEST BARCODE*&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;td class=&amp;quot;right&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;logo&amp;quot; src=&amp;quot;logo.png&amp;quot; alt=&amp;quot;logo&amp;quot;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="JS逆向" scheme="http://yoursite.com/tags/JS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>cuda相关安装(历史版本、对应驱动版本)</title>
    <link href="http://yoursite.com/2020/05/04/cuda-install/"/>
    <id>http://yoursite.com/2020/05/04/cuda-install/</id>
    <published>2020-05-04T08:32:29.000Z</published>
    <updated>2020-05-04T08:34:37.208Z</updated>
    
    <content type="html"><![CDATA[<h5 id="各个历史版本-cuda-toolkit-下载链接"><a href="#各个历史版本-cuda-toolkit-下载链接" class="headerlink" title="各个历史版本 cuda toolkit 下载链接"></a>各个历史版本 cuda toolkit 下载链接</h5><p>发现cuda toolkit 8.0 _windows_7_locoal  版本的 无法下载，  但是笔记本目前是win7系统， 找了之前的7.5版本了，为了便于今后更快捷，保存下各个历史版本cuda toolkit</p><a id="more"></a><p>cuda历史各个版本下载链接：<br><a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-toolkit-archive</a></p><h5 id="相关的cudnn历史版本："><a href="#相关的cudnn历史版本：" class="headerlink" title="相关的cudnn历史版本："></a>相关的cudnn历史版本：</h5><p><a href="https://developer.nvidia.com/rdp/cudnn-archive" target="_blank" rel="noopener">https://developer.nvidia.com/rdp/cudnn-archive</a></p><p>cuda版本和驱动版本对应<br><img src="https://img-blog.csdnimg.cn/20200228133211771.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p><a href="https://blog.csdn.net/qing101hua/article/details/74457109" target="_blank" rel="noopener">参考</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;各个历史版本-cuda-toolkit-下载链接&quot;&gt;&lt;a href=&quot;#各个历史版本-cuda-toolkit-下载链接&quot; class=&quot;headerlink&quot; title=&quot;各个历史版本 cuda toolkit 下载链接&quot;&gt;&lt;/a&gt;各个历史版本 cuda toolkit 下载链接&lt;/h5&gt;&lt;p&gt;发现cuda toolkit 8.0 _windows_7_locoal  版本的 无法下载，  但是笔记本目前是win7系统， 找了之前的7.5版本了，为了便于今后更快捷，保存下各个历史版本cuda toolkit&lt;/p&gt;
    
    </summary>
    
    
      <category term="深度学习" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Scrapy少写yield坑</title>
    <link href="http://yoursite.com/2020/05/04/scrapy-yield/"/>
    <id>http://yoursite.com/2020/05/04/scrapy-yield/</id>
    <published>2020-05-04T08:30:49.000Z</published>
    <updated>2020-05-04T08:34:09.264Z</updated>
    
    <content type="html"><![CDATA[<h4 id="当你重写start-requests方法的时候，使用scrapy-Request-xxx-后记得前面一定要加上yield，不然报错说是NoneType不是一个可迭代对象"><a href="#当你重写start-requests方法的时候，使用scrapy-Request-xxx-后记得前面一定要加上yield，不然报错说是NoneType不是一个可迭代对象" class="headerlink" title="当你重写start_requests方法的时候，使用scrapy.Request(xxx)后记得前面一定要加上yield，不然报错说是NoneType不是一个可迭代对象"></a>当你重写<code>start_requests</code>方法的时候，使用<code>scrapy.Request(xxx)</code>后记得前面一定要加上<code>yield</code>，不然报错说是<code>NoneType</code>不是一个可迭代对象</h4><a id="more"></a><p><strong>1.报错信息:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;E:\apps\anaconda3\lib\site-packages\twisted\internet\defer.py&quot;, line 1418, in _inlineCallbacks</span><br><span class="line">    result = g.send(result)</span><br><span class="line">  File &quot;E:\apps\anaconda3\lib\site-packages\scrapy\crawler.py&quot;, line 87, in crawl</span><br><span class="line">    start_requests = iter(self.spider.start_requests())</span><br><span class="line">TypeError: &apos;NoneType&apos; object is not iterable</span><br><span class="line">2020-02-27 14:20:59 [twisted] CRITICAL: </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;E:\apps\anaconda3\lib\site-packages\twisted\internet\defer.py&quot;, line 1418, in _inlineCallbacks</span><br><span class="line">    result = g.send(result)</span><br><span class="line">  File &quot;E:\apps\anaconda3\lib\site-packages\scrapy\crawler.py&quot;, line 87, in crawl</span><br><span class="line">    start_requests = iter(self.spider.start_requests())</span><br><span class="line">TypeError: &apos;NoneType&apos; object is not iterable</span><br></pre></td></tr></table></figure></p><p><strong>2.正确使用：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># start_urls = [&apos;http://xxx/xxx/&apos;]</span><br><span class="line"></span><br><span class="line">base_url = &quot;http://xxx/xxx/&#123;&#125;?page=&#123;&#125;&quot;</span><br><span class="line">key_worlds = [xxx, xxx, xxx]</span><br><span class="line"></span><br><span class="line">def start_requests(self):</span><br><span class="line">    for k in self.key_worlds:</span><br><span class="line">        yield scrapy.Request(</span><br><span class="line">            url=self.base_url.format(k, 1),</span><br><span class="line">            meta=&#123;&quot;key&quot;: k&#125;,</span><br><span class="line">            callback=self.parse,</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></p><p><strong>3.错误使用：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># start_urls = [&apos;http://xxx/xxx/&apos;]</span><br><span class="line"></span><br><span class="line">base_url = &quot;http://xxx/xxx/&#123;&#125;?page=&#123;&#125;&quot;</span><br><span class="line">key_worlds = [xxx, xxx, xxx]</span><br><span class="line"></span><br><span class="line">def start_requests(self):</span><br><span class="line">    for k in self.key_worlds:</span><br><span class="line">        scrapy.Request(</span><br><span class="line">            url=self.base_url.format(k, 1),</span><br><span class="line">            meta=&#123;&quot;key&quot;: k&#125;,</span><br><span class="line">            callback=self.parse,</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></p><p>鄙人粗心大意，就一个<code>yield</code>之差，排查了十几二十分钟。。。。</p><h4 id="数学老师常教我们-等效替换"><a href="#数学老师常教我们-等效替换" class="headerlink" title="数学老师常教我们==等效替换=="></a>数学老师常教我们==等效替换==</h4><ul><li><p>在这里我们也可以。可以使用列表推导式来代替这个；</p></li><li><p>反正都是建立一系列的初始化请求，然后放到队列里面自动去请求，然后执行调用指定的回调函数，没有指定的话，默认是回调<code>self.parse</code>函数，下面来等价的将上面的代码换一下：</p></li></ul><p>描述：如果你细心的话，你可以注意到我刚刚前面给的代码，有注释一行<code># start_urls = [&#39;http://xxx/xxx/&#39;]</code></p><h5 id="刚刚上面的代码可以使用下面的代码来替换，是不是很简单？？？"><a href="#刚刚上面的代码可以使用下面的代码来替换，是不是很简单？？？" class="headerlink" title="刚刚上面的代码可以使用下面的代码来替换，是不是很简单？？？"></a>刚刚上面的代码可以使用下面的代码来替换，是不是很简单？？？</h5><p>(PS:但是有一点不一样的就是，meta信息没有传递过去，但这里你可以通过url那个关键词来获取，也是可以滴)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">base_url = &quot;http://xxx/xxx/&#123;&#125;?page=&#123;&#125;&quot;</span><br><span class="line">key_worlds = [xxx, xxx, xxx]</span><br><span class="line"></span><br><span class="line">start_urls = [base_url.format(k, 1) for k in key_worlds]</span><br></pre></td></tr></table></figure></p><h5 id="至此本文踩坑记录写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文踩坑记录写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文踩坑记录写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文踩坑记录写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103461851" target="_blank" rel="noopener">爬虫js解密分析:某某猫小说</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103472617" target="_blank" rel="noopener">爬虫js解密分析:某某云文学</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103474801" target="_blank" rel="noopener">个人总结-js逆向解析思路</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会(ttf字体同理)</a>;</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;当你重写start-requests方法的时候，使用scrapy-Request-xxx-后记得前面一定要加上yield，不然报错说是NoneType不是一个可迭代对象&quot;&gt;&lt;a href=&quot;#当你重写start-requests方法的时候，使用scrapy-Request-xxx-后记得前面一定要加上yield，不然报错说是NoneType不是一个可迭代对象&quot; class=&quot;headerlink&quot; title=&quot;当你重写start_requests方法的时候，使用scrapy.Request(xxx)后记得前面一定要加上yield，不然报错说是NoneType不是一个可迭代对象&quot;&gt;&lt;/a&gt;当你重写&lt;code&gt;start_requests&lt;/code&gt;方法的时候，使用&lt;code&gt;scrapy.Request(xxx)&lt;/code&gt;后记得前面一定要加上&lt;code&gt;yield&lt;/code&gt;，不然报错说是&lt;code&gt;NoneType&lt;/code&gt;不是一个可迭代对象&lt;/h4&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>爬虫js解密分析:某某猫小说</title>
    <link href="http://yoursite.com/2020/05/04/js_ciweimao/"/>
    <id>http://yoursite.com/2020/05/04/js_ciweimao/</id>
    <published>2020-05-04T08:27:16.000Z</published>
    <updated>2020-05-04T08:33:33.670Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。"><a href="#前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。" class="headerlink" title="前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。"></a>前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。</h5><h5 id="本次来学习一下简单的js逆向教程"><a href="#本次来学习一下简单的js逆向教程" class="headerlink" title="本次来学习一下简单的js逆向教程"></a>本次来学习一下简单的js逆向教程</h5><a id="more"></a><p>为了不直接贴出网站链接，下面是已经经过某种常见的、可逆的加密方式进行加密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 0x01、查看接口返回的数据</span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20191209173206462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70)</span><br><span class="line"></span><br><span class="line">看到接口返回的数据有点可疑，看到这种```chapter_access_key```字眼,顾名思义就是章节访问key，先记着有这么一个字眼先，继续观察</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20191209173232914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70)</span><br><span class="line">这次又来一个字眼：encrypt，而且数据是加密的，联想上一步，进而得知，可能是：拿chapter_access_key去解密当前的加密数据</span><br><span class="line"></span><br><span class="line">##### 0x02、全局搜索```encryt_keys</span><br></pre></td></tr></table></figure></p><p><img src="https://img-blog.csdnimg.cn/20191209173249474.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这就搜索到两处<code>encryt_keys</code><br>点进去看看呗</p><blockquote><p>发现两处的地方还是有点不一样，但是怎么区分这个呢？</p></blockquote><p>到这里，你是否还记得上一步的截图当中出现过的接口和当前截图里面有点一样呢？</p><p>给你再看清楚一下呗：<br><img src="https://img-blog.csdnimg.cn/20191209173321911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>那么解决思路就来了：先看这个函数，看看debug出什么来；不行的话，再看另外那个函数</p><p>打上断点，重新加载，调试发现最终的解密函数入口是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">myDecrypt: function(f) &#123;</span><br><span class="line">            var g = new b([]);</span><br><span class="line">            return g.decrypt(f)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">// 再具体一点就是函数：g.decrypt(f)</span><br><span class="line">// 即是下面这个函数：</span><br><span class="line">decrypt: function(g) &#123;</span><br><span class="line">           巴拉巴拉</span><br><span class="line">           巴拉巴拉</span><br><span class="line">           #￥%@！~%……&amp;*（）&amp;</span><br><span class="line">           #￥%@！~%……&amp;*（）&amp;</span><br><span class="line">           .</span><br><span class="line">           .</span><br><span class="line">           .</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><h5 id="0x03、找到了，那扣它啊！"><a href="#0x03、找到了，那扣它啊！" class="headerlink" title="0x03、找到了，那扣它啊！"></a>0x03、找到了，那扣它啊！</h5><p>通过将<code>myDecrypt: function(f)</code>扣出来之后，进行本地调试，然后就是缺啥补啥</p><p>ps: 懵懂的我一开始还不知道缺啥补啥是怎么解决，直到问了一些大佬才知道就是：如果不知道怎么解决的话，那就跟着浏览器，然后debug，一步一步看，看它调用了哪些变量/常量/函数！</p><p>如果还是不知道怎么看的话，就是将鼠标放在正在变量/函数那里，它会显示蓝色的调用栈，然后点击进去看它，即可得到解决思路。<br>需要导入：<code>CryptoJS</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var CryptoJS = require(&quot;C:/Users/Administrator/AppData/Roaming/npm/node_modules/crypto-js&quot;);</span><br><span class="line">// var CryptoJS = require(&quot;crypto-js&quot;);  // 运行报错 Error: Cannot find module &apos;crypto-js&apos;,因此需要指定路径进行导入这个依赖</span><br><span class="line">// console.log(module.paths);  // 上面的报错信息可以使用这个来查看导入的模块路径有哪些</span><br><span class="line">// 然后查看安装路径：</span><br><span class="line">// $ npm prefix -g   # node安装路径</span><br><span class="line">// /Users/xxx/.nvm/versions/node/v10.16.0</span><br><span class="line">// $ npm -g root  # 查看依赖安装路径</span><br><span class="line">// /Users/xxx/.nvm/versions/node/v10.16.0/lib/node_modules  // 然后将这里的路径复制到上面导入的路径处</span><br></pre></td></tr></table></figure></p><h5 id="0x04、踩坑的过程痛苦并快乐着"><a href="#0x04、踩坑的过程痛苦并快乐着" class="headerlink" title="0x04、踩坑的过程痛苦并快乐着"></a>0x04、踩坑的过程痛苦并快乐着</h5><p>-[x] 已掉坑：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = d.base64.decode(n);</span><br><span class="line">^</span><br><span class="line">ReferenceError: d is not defined</span><br></pre></td></tr></table></figure><br>调试的时候，看到这个未定义，以为看到base64就是转换为nodejs里面的base64的对应使用就可以了，发现最后没报错但也没有结果！！！</p><p>你知道这是很可怕的事情吗，一个没有bug的程序，而且得出的结果不是预期的<br>鄙人还是太菜了，我哭了，你呢？</p><p>然后反复在浏览器进行debug，一个个排除，最终将问题定位到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = d.base64.decode(n);</span><br></pre></td></tr></table></figure></p><p>定位到这一行代码的时候，我进去看看这个decode/encode，发现并不是通过转换为nodejs的base64的decode/encode，<br>这是网址自己封装的加解密方式啊！！！<br>跪了跪了 ○|￣|_</p><p>跪完还得继续干啊，兄嘚，继续扣相关的js呗！！！</p><h5 id="0x05、扣完这些js之后，舒服啊，解密完毕"><a href="#0x05、扣完这些js之后，舒服啊，解密完毕" class="headerlink" title="0x05、扣完这些js之后，舒服啊，解密完毕"></a>0x05、扣完这些js之后，舒服啊，解密完毕</h5><p>看一下解密的最终函数代码粗略截图：<br><img src="https://img-blog.csdnimg.cn/20191209173343159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>运行结果截图:<br><img src="https://img-blog.csdnimg.cn/20191209173354119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h5><p>本次收获到了调试技巧、及大概悉知网站存在偷换的概念/执行方式的可能</p><blockquote><p>点击我进行了解<a href="https://mp.weixin.qq.com/s/STAWu31fQakOgROfCs-4-g" target="_blank" rel="noopener">引用来源</a> </p></blockquote><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h6 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h6><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103474801" target="_blank" rel="noopener">个人总结-js逆向解析思路</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103472617" target="_blank" rel="noopener">爬虫js解密分析:某某云文学</a>;</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&quot;&gt;&lt;a href=&quot;#前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&quot; class=&quot;headerlink&quot; title=&quot;前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&quot;&gt;&lt;/a&gt;前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&lt;/h5&gt;&lt;h5 id=&quot;本次来学习一下简单的js逆向教程&quot;&gt;&lt;a href=&quot;#本次来学习一下简单的js逆向教程&quot; class=&quot;headerlink&quot; title=&quot;本次来学习一下简单的js逆向教程&quot;&gt;&lt;/a&gt;本次来学习一下简单的js逆向教程&lt;/h5&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="JS逆向" scheme="http://yoursite.com/tags/JS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>爬虫js解密分析:某某云文学</title>
    <link href="http://yoursite.com/2020/05/04/js_aliyun_literature/"/>
    <id>http://yoursite.com/2020/05/04/js_aliyun_literature/</id>
    <published>2020-05-04T08:21:58.000Z</published>
    <updated>2020-05-04T08:33:41.228Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。"><a href="#前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。" class="headerlink" title="前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。"></a>前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。</h5><h5 id="这估计是最简单的js解密教程了"><a href="#这估计是最简单的js解密教程了" class="headerlink" title="这估计是最简单的js解密教程了"></a>这估计是最简单的js解密教程了</h5><a id="more"></a><p>为了不直接贴出网站链接，下面是已经经过某种常见的、可逆的加密方式进行加密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 0x01、查看接口返回的数据</span><br><span class="line">![aliwx_api_content](https://img-blog.csdnimg.cn/20191210112627914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70)</span><br><span class="line">看到返回的数据是加密类型的，这回估计是不知道怎么下手？</span><br><span class="line">不如又来试试，直接搜索字段```ChepterContent````呗</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### 0x02、全局搜索```ChapterContent</span><br></pre></td></tr></table></figure></p><p><img src="https://img-blog.csdnimg.cn/20191210112649511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="aliwx_ChapterContent.png"><br>看到搜索出来的结果只有一个js文件存在，点进去看看呗<br>对这个js文件点击格式化按钮，让它格式化之后显得好看，再搜索一次<br>【alwx_decode.png】</p><p>直接看到了<code>decodeCont</code>这个函数,顾名思义就是解密内容，大胆假设就是它！打上断点debug看看</p><p>PS：这里来介绍一下debug的快捷看结果的方式：<br>打断点技巧：<br><img src="https://img-blog.csdnimg.cn/20191210112708521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="alwx_duandian.png"></p><p>快速查看返回结果技巧：<br><img src="https://img-blog.csdnimg.cn/20191210112721807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="alwx_debug_jiqiao.png"></p><p>查看结果如下：<br><img src="https://img-blog.csdnimg.cn/20191210112734499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="alwx_debug_js_code.png"></p><p>经过一两分钟debug就是发现解密就是这个函数了！！盘它！！</p><h5 id="0x03、扣完这些js之后，舒服啊，解密完毕，啥都不缺系列的js函数"><a href="#0x03、扣完这些js之后，舒服啊，解密完毕，啥都不缺系列的js函数" class="headerlink" title="0x03、扣完这些js之后，舒服啊，解密完毕，啥都不缺系列的js函数"></a>0x03、扣完这些js之后，舒服啊，解密完毕，啥都不缺系列的js函数</h5><p>看一下解密的最终函数代码粗略截图：<br><img src="https://img-blog.csdnimg.cn/2019121011283691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="alwx_debug_decode.png"></p><p>运行结果截图:<br><img src="https://img-blog.csdnimg.cn/20191210112848162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="alwx_decode_result.png"></p><h5 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h5><p>解密前，我以为是很的。没想到惊了我，阿里这么偌大的公司，竟然不给爬虫工程师搞点难度？(其实内心是欢喜的，嘻嘻~~)<br>本次教程比上一篇还简单<a href="https://blog.csdn.net/weixin_41173374/article/details/103461851" target="_blank" rel="noopener">爬虫js解密分析:某某猫小说</a></p><p>难度大的网站，hook出来的个个都是大神，公开会喜获一副银手镯，所以解密难度大的网站是不可能的，这辈子都不可能的。唯有扣扣简单的网站，才能维持生活。<br>谢谢大扎，我系渣渣辉</p><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h6 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h6><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/103461851" target="_blank" rel="noopener">爬虫js解密分析:某某猫小说</a>;</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&quot;&gt;&lt;a href=&quot;#前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&quot; class=&quot;headerlink&quot; title=&quot;前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&quot;&gt;&lt;/a&gt;前言：本教程仅供学习，不得非法破坏网站。如用于其他暴力等用途，后果自负。如侵权您的网站请留言我，我立刻删除，感谢。&lt;/h5&gt;&lt;h5 id=&quot;这估计是最简单的js解密教程了&quot;&gt;&lt;a href=&quot;#这估计是最简单的js解密教程了&quot; class=&quot;headerlink&quot; title=&quot;这估计是最简单的js解密教程了&quot;&gt;&lt;/a&gt;这估计是最简单的js解密教程了&lt;/h5&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="JS逆向" scheme="http://yoursite.com/tags/JS%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>django踩坑记录(4)</title>
    <link href="http://yoursite.com/2019/11/13/django-err4/"/>
    <id>http://yoursite.com/2019/11/13/django-err4/</id>
    <published>2019-11-13T15:35:28.000Z</published>
    <updated>2019-12-02T14:58:12.853Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看"><a href="#0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看" class="headerlink" title="0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看"></a>0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看</h5><p>描述的情景如下图：<br><img src="https://note.youdao.com/yws/api/personal/file/54ED4E0E226340CEA9CFE4108A8547A0?method=download&amp;shareKey=8a38291ac6316a8d039a0d0975e34c19" alt="不同的form表单对应不同的标签"></p><p><img src="https://note.youdao.com/yws/api/personal/file/CCB8C3669E494ED18D31F06D81368E65?method=download&amp;shareKey=8d8a97dda2c2c008300b001ffe8e9d51" alt="form、及对应的标签"></p><p>代码实现思路：两个不同的登录方式是：账号密码登录和使用短信验证码登录。</p><a id="more"></a><p>1.如果是使用短信验证码登录的话，给它多传递一个字段用于区别这个form表单到底是哪个，如，<code>ynamic_login = True</code></p><p>2.设置这个字段用于标记，当前这个登录方式是短信验证码登录，然后将这个字段传递到前端的html页面里面，去判断，如果存在这个字段并且为<code>True</code>那么前端的html代码就展示短信验证码登录的相关代码即可。</p><p>3.下面看一下前端的相关代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;fl form-box&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;tab&quot;&gt;</span><br><span class="line">                    &lt;h2 class=&quot;&#123;% if dynamic_login %&#125;&#123;% else %&#125;active&#123;% endif %&#125;&quot;&gt;账号登录&lt;/h2&gt;</span><br><span class="line">                    &lt;h2 class=&quot;&#123;% if dynamic_login %&#125;active&#123;% else %&#125;&#123;% endif %&#125;&quot;&gt;动态登录&lt;/h2&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;form class=&quot;tab-form &#123;% if dynamic_login %&#125;hide&#123;% else %&#125;&#123;% endif %&#125;&quot; action=&quot;&#123;% url &apos;login&apos; %&#125;&quot; method=&quot;post&quot; autocomplete=&quot;off&quot; id=&quot;form1&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;form-group marb20 &#123;% if login_form.errors.username %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;username&quot; id=&quot;account_l&quot; value=&quot;&#123;&#123; login_form.username.value &#125;&#125;&quot; type=&quot;text&quot; placeholder=&quot;手机号/邮箱&quot; /&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;form-group marb8 &#123;% if login_form.errors.password %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;password&quot; id=&quot;password_l&quot; value=&quot;&#123;&#123; login_form.password.value &#125;&#125;&quot; type=&quot;password&quot; placeholder=&quot;请输入您的密码&quot; /&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;error btns login-form-tips&quot; id=&quot;jsLoginTips&quot;&gt;&#123;% if login_form.errors %&#125;&#123;% for key,error in login_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;% else %&#125;&#123;&#123; msg &#125;&#125;&#123;% endif %&#125;&lt;/div&gt;</span><br><span class="line">                     &lt;div class=&quot;auto-box marb38&quot;&gt;</span><br><span class="line">&lt;a class=&quot;fr&quot; href=&quot;forgetpwd.html&quot;&gt;忘记密码？&lt;/a&gt;</span><br><span class="line">                     &lt;/div&gt;</span><br><span class="line">                     &lt;input class=&quot;btn btn-green&quot; id=&quot;jsLoginBtn&quot; type=&quot;submit&quot; value=&quot;立即登录 &gt; &quot; /&gt;</span><br><span class="line">                    &#123;% csrf_token %&#125;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">                &lt;form class=&quot;tab-form &#123;% if dynamic_login %&#125;&#123;% else %&#125;hide&#123;% endif %&#125;&quot; action=&quot;&#123;% url &apos;d_login&apos; %&#125;&quot; id=&quot;mobile_register_form&quot; autocomplete=&quot;off&quot; method=&quot;post&quot; id=&quot;form2&quot;&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;form-group marb20&quot;&gt;</span><br><span class="line">                        &lt;input id=&quot;jsRegMobile&quot; value=&quot;&#123;&#123; login_form.mobile.value|default_if_none:&apos;&apos; &#125;&#125;&quot; name=&quot;mobile&quot; type=&quot;text&quot; placeholder=&quot;请输入您的手机号码&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;form-group marb20 blur&quot; id=&quot;jsRefreshCode&quot;&gt;</span><br><span class="line">                        &#123;&#123; login_form.captcha &#125;&#125;</span><br><span class="line">                        &#123;&#123; d_form.captcha &#125;&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;clearfix&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group marb8 verify-code&quot;&gt;</span><br><span class="line">                            &lt;input id=&quot;jsPhoneRegCaptcha&quot; value=&quot;&#123;&#123; login_form.code.value &#125;&#125;&quot; name=&quot;code&quot; type=&quot;text&quot; placeholder=&quot;输入手机验证码&quot;&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;input class=&quot;verify-code-btn sendcode&quot; id=&quot;jsSendCode&quot; value=&quot;发送验证码&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;error btns&quot; id=&quot;jsMobileTips&quot; style=&quot;&quot;&gt;&#123;% if login_form.errors %&#125;&#123;% for key,error in login_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;% else %&#125;&#123;&#123; msg &#125;&#125;&#123;% endif %&#125;&lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;auto-box marb8&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;input class=&quot;btn btn-green&quot; id=&quot;jsMobileRegBtn&quot; type=&quot;button&quot; value=&quot;立即登录&quot;&gt;</span><br><span class="line">                    &#123;% csrf_token %&#125;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">                &lt;p class=&quot;form-p&quot;&gt;没有慕学在线网帐号？&lt;a href=&quot;register.html&quot;&gt;[立即注册]&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>4.看一下后端代码：<br>views.py：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">import redis</span><br><span class="line">from django.shortcuts import render</span><br><span class="line">from django.views.generic.base import View</span><br><span class="line">from django.contrib.auth import authenticate, login, logout</span><br><span class="line">from django.http import HttpResponseRedirect, JsonResponse  # 提供url重定向; 提供返回json类型的数据</span><br><span class="line">from django.urls import reverse</span><br><span class="line"></span><br><span class="line">from users.forms import LoginForm, DynamicLoginForm, DynamicLoginPostForm</span><br><span class="line">from utils.random_str import generate_random</span><br><span class="line">from utils.YunPian import send_single_sms</span><br><span class="line">from MxOnline.settings import yp_api_key, REDIS_HOST, REDIS_PORT</span><br><span class="line">from users.models import UserProfile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DynamicLogin(View):</span><br><span class="line">    &quot;&quot;&quot;11-02 动态短信登录提交方式&quot;&quot;&quot;</span><br><span class="line">    def post(self, request, *args, **kwargs):</span><br><span class="line">        login_form = DynamicLoginPostForm(request.POST)</span><br><span class="line">        dynamic_login = True  # todo 这个标记用于，标记如果是动态登录的话，输出验证码，重新跳转的页面，给自动跳到原来的页面当中</span><br><span class="line">        if login_form.is_valid():</span><br><span class="line">            # 没有注册账号，依然可以登录(其实就是帮忙给注册一个)</span><br><span class="line">            mobile = login_form.cleaned_data[&quot;mobile&quot;]</span><br><span class="line">            existed_users = UserProfile.objects.filter(mobile=mobile)</span><br><span class="line">            if existed_users:</span><br><span class="line">                user = existed_users[0]</span><br><span class="line">            else:</span><br><span class="line">                # 不存在即创建一个用户</span><br><span class="line">                user = UserProfile(username=mobile)</span><br><span class="line">                password = generate_random(10, 2)</span><br><span class="line">                user.set_password(password)  # TODO 这里设置密码是要注意：如果使用user.password=password的话，那么这里是一个明文，一般不建议这样做；要使用密文可以使用user.set_password(password)</span><br><span class="line">                user.mobile = mobile</span><br><span class="line">                user.save()  # 保存创建的用户</span><br><span class="line"></span><br><span class="line">            login(request, user)</span><br><span class="line">            return HttpResponseRedirect(reverse(&quot;index&quot;))  # 登录之后跳转到首页</span><br><span class="line">        else:</span><br><span class="line">            d_form = DynamicLoginForm(request.POST)  # 这个是用于自动刷新验证码</span><br><span class="line">            return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form,</span><br><span class="line">                                                  &quot;dynamic_login&quot;: dynamic_login,</span><br><span class="line">                                                  &quot;d_form&quot;: d_form&#125;)  # 这个会自动校验，并且将错误的信息返回</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LoginView(View):</span><br><span class="line">    &quot;&quot;&quot;2019-10-29 1.必须继承这个View 2.下面的get和post分别表示不同的请求，在这里是表示重载这两种请求的方法&quot;&quot;&quot;</span><br><span class="line">    def get(self, request, *args, **kwargs):  # 这个request参数是Django自动注入的，不需要自己赋值</span><br><span class="line">        if request.user.is_authenticated:  # 10-30 如果用户是登录状态，点击login请求会自动重定向到首页</span><br><span class="line">            return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line">        login_form = DynamicLoginForm()</span><br><span class="line">        return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form&#125;)</span><br><span class="line"></span><br><span class="line">    def post(self, request, *args, **kwargs):</span><br><span class="line">        # username = request.POST.get(&quot;username&quot;)</span><br><span class="line">        # password = request.POST.get(&quot;password&quot;)</span><br><span class="line">        #</span><br><span class="line">        # # 方法1、通过用户名和密码查询用户是否存在</span><br><span class="line">        # user = authenticate(username=username, password=password)</span><br><span class="line"></span><br><span class="line">        # # 方法2、通过自定义的userprofile去查询，存在的问题有：数据库存的密码是密文，校验的时候需要再次加密才能进行校验</span><br><span class="line">        # from users.models import UserProfile</span><br><span class="line">        # user = UserProfile.objects.get(username=username, password=password)</span><br><span class="line"></span><br><span class="line">        login_form = LoginForm(request.POST)</span><br><span class="line"></span><br><span class="line">        if login_form.is_valid():</span><br><span class="line">            username = login_form.cleaned_data[&quot;username&quot;]  # todo 重点是这种用法，是这样从form里面提取对应的值</span><br><span class="line">            password = login_form.cleaned_data[&quot;password&quot;]</span><br><span class="line"></span><br><span class="line">            user = authenticate(username=username, password=password)</span><br><span class="line">            if user is not None:</span><br><span class="line">                login(request, user)</span><br><span class="line">                return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line">            else:</span><br><span class="line">                return render(request, &quot;login.html&quot;, &#123;&quot;msg&quot;: &quot;用户名或者密码错误&quot;, &quot;login_form&quot;: login_form&#125;)</span><br><span class="line">        else:</span><br><span class="line">            return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form&#125;)  # 这个会自动校验，并且将错误的信息返回</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LogoutView(View):</span><br><span class="line">    &quot;&quot;&quot;10-30 退出接口开发&quot;&quot;&quot;</span><br><span class="line">    def get(self, request, *args, **kwargs):</span><br><span class="line">        logout(request)</span><br><span class="line">        return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class SendSmsView(View):</span><br><span class="line">    &quot;&quot;&quot;2019-10-31 发送验证码&quot;&quot;&quot;</span><br><span class="line">    def post(self, request, *args, **kwargs):</span><br><span class="line">        send_sms_form = DynamicLoginForm(request.POST)</span><br><span class="line">        re_dict = &#123;&#125;</span><br><span class="line">        if send_sms_form.is_valid():</span><br><span class="line">            mobile = send_sms_form.cleaned_data[&quot;mobile&quot;]</span><br><span class="line">            # 随机生成验证码</span><br><span class="line">            code = generate_random(4, 0)</span><br><span class="line">            r = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, db=0, charset=&quot;utf-8&quot;, decode_responses=True)</span><br><span class="line">            r.set(str(mobile), code)</span><br><span class="line">            r.expire(str(mobile), 60*5)  # 设置5分钟失效</span><br><span class="line">            re_json = send_single_sms(api_key=yp_api_key, code=code, mobile=mobile)</span><br><span class="line">            if re_json[&quot;code&quot;] == 0:</span><br><span class="line">                re_dict[&quot;status&quot;] = &quot;success&quot;</span><br><span class="line">            else:</span><br><span class="line">                re_dict[&quot;msg&quot;] = re_json[&quot;msg&quot;]</span><br><span class="line">        else:</span><br><span class="line">            for key, value in send_sms_form.errors.items():</span><br><span class="line">                re_dict[key] = value[0]  # 注意这个value是list类型</span><br><span class="line"></span><br><span class="line">        return JsonResponse(re_dict)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class RegisterView(View):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure><p>forms.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/10/29 22:55</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : forms.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line">import redis</span><br><span class="line"></span><br><span class="line">from django import forms</span><br><span class="line">from captcha.fields import CaptchaField</span><br><span class="line"></span><br><span class="line">from MxOnline.settings import REDIS_PORT, REDIS_HOST</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LoginForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;2019-10-29 继承Django默认的form&quot;&quot;&quot;</span><br><span class="line">    username = forms.CharField(required=True, min_length=3)</span><br><span class="line">    password = forms.CharField(required=True, min_length=6)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DynamicLoginForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;10-30 图片验证码form，存图片验证码&quot;&quot;&quot;</span><br><span class="line">    mobile = forms.CharField(required=True, min_length=11, max_length=11)</span><br><span class="line">    captcha = CaptchaField()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DynamicLoginPostForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;11-02 短信登录方式，登录提交的时候&quot;&quot;&quot;</span><br><span class="line">    mobile = forms.CharField(required=True, min_length=11, max_length=11)</span><br><span class="line">    code = forms.CharField(required=True, min_length=4, max_length=4)</span><br><span class="line"></span><br><span class="line">    def clean_code(self):</span><br><span class="line">        &quot;&quot;&quot;11-03 add 这个能够可以指定验证的字段，并且抛出的异常就是这个指定的字段作为key&quot;&quot;&quot;</span><br><span class="line">        mobile = self.data.get(&quot;mobile&quot;)  # todo 这里校验指定字段的话，推荐使用self.data.get() ，因为使用这个程序是先调用def clean_code这个方法再到def clean方法的，所以self.cleaned_data[]可能会出现取不到的问题</span><br><span class="line">        code = self.data.get(&quot;code&quot;)</span><br><span class="line"></span><br><span class="line">        r = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, db=0, charset=&quot;utf-8&quot;, decode_responses=True)</span><br><span class="line">        redis_code = r.get(str(mobile))</span><br><span class="line">        if code != redis_code:</span><br><span class="line">            raise forms.ValidationError(&quot;验证码不正确&quot;)  # 主动抛出异常，但是抛出的异常的key字段是这里这个方法的clean_code对应的字段，即key就是code</span><br><span class="line">        return self.cleaned_data</span><br><span class="line"></span><br><span class="line">    # def clean(self):</span><br><span class="line">    #     &quot;&quot;&quot;这个是进行验证这个form的数据&quot;&quot;&quot;</span><br><span class="line">    #     mobile = self.cleaned_data[&quot;mobile&quot;]</span><br><span class="line">    #     code = self.cleaned_data[&quot;code&quot;]</span><br><span class="line">    #</span><br><span class="line">    #     r = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, db=0, charset=&quot;utf-8&quot;, decode_responses=True)</span><br><span class="line">    #     redis_code = r.get(str(mobile))</span><br><span class="line">    #     if code != redis_code:</span><br><span class="line">    #         raise forms.ValidationError(&quot;验证码不正确&quot;)  # 主动抛出异常，但是抛出的异常的key字段是__all__不能自定义字段，所以这个clean不推荐使用，推荐使用clean_code</span><br><span class="line">    #     return self.cleaned_data</span><br></pre></td></tr></table></figure><h5 id="0x0e、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格"><a href="#0x0e、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格" class="headerlink" title="0x0e、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格"></a>0x0e、使用django的模板层的内建标签及过滤器——stringformat的时候，巨坑点，中间不能留有空格</h5><p>错误代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;</span><br><span class="line">&lt;h2&gt;所在地区&lt;/h2&gt;</span><br><span class="line">&lt;div class=&quot;more&quot;&gt;更多&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;cont&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;?ct=&#123;&#123; category &#125;&#125;&quot;&gt;&lt;span class=&quot;&#123;% ifequal city_id &apos;&apos; %&#125;active2&#123;% endifequal %&#125;&quot;&gt;全部&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">        &#123;% for city in all_citys %&#125;</span><br><span class="line">             &lt;a href=&quot;?city=&#123;&#123; city.id &#125;&#125;&amp;ct=&#123;&#123; category &#125;&#125;&quot;&gt;&lt;span class=&quot;&#123;% ifequal city_id city.id|stringformat: &apos;i&apos; %&#125;active2&#123;% endifequal %&#125;&quot;&gt;&#123;&#123; city.name &#125;&#125;&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure></p><p>再放大一点给宁萌康康：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">再定位准确一点就是下面这里：</span><br><span class="line">&#123;% ifequal city_id city.id|stringformat: &apos;i&apos; %&#125;</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">出错的原因是stringformat: &apos;i&apos;，这里中间有个空格隔开了，而导致的不能识别</span><br><span class="line"></span><br><span class="line">鄙人将其改为下面这个即可正确解析网页：</span><br><span class="line">&#123;% ifequal city_id city.id|stringformat:&apos;i&apos; %&#125;</span><br></pre></td></tr></table></figure><p>这个bug找的我好辛苦，是在下太菜了，跪了跪了 ○|￣|_</p><p>延伸：django中文文档，个人感觉已经很好的了，本小点的知识点链接，<a href="https://docs.djangoproject.com/zh-hans/2.2/ref/templates/builtins/" target="_blank" rel="noopener">请点击我进行了解</a></p><h5 id="0x0f、对查询结果进行排序，直接使用object-order-by-“object字段名”"><a href="#0x0f、对查询结果进行排序，直接使用object-order-by-“object字段名”" class="headerlink" title="0x0f、对查询结果进行排序，直接使用object.order_by(“object字段名”)"></a>0x0f、对查询结果进行排序，直接使用object.order_by(“object字段名”)</h5><p>降序是：object.order_by(“-object字段名”)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sort = request.GET.get(&quot;sort&quot;, &quot;&quot;)</span><br><span class="line">if sort == &quot;students&quot;:</span><br><span class="line">    all_orgs = all_orgs.order_by(&quot;-students&quot;)  # 降序students</span><br><span class="line">elif sort == &quot;courses&quot;:</span><br><span class="line">    all_orgs = all_orgs.filter(&quot;-course_nums&quot;)  # 对course_nums降序</span><br></pre></td></tr></table></figure><h5 id="0x10、forloop：在html-for循环中能够记住当前的index是第几个"><a href="#0x10、forloop：在html-for循环中能够记住当前的index是第几个" class="headerlink" title="0x10、forloop：在html for循环中能够记住当前的index是第几个"></a>0x10、forloop：在html for循环中能够记住当前的index是第几个</h5><p>详情使用如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;right companyrank layout&quot;&gt;</span><br><span class="line">&lt;div class=&quot;head&quot;&gt;授课机构排名&lt;/div&gt;</span><br><span class="line">        &#123;% for hot_org in hot_orgs %&#125;</span><br><span class="line">            &lt;dl class=&quot;des&quot;&gt;</span><br><span class="line">                &lt;dt class=&quot;num fl&quot;&gt;&#123;&#123; forloop.counter &#125;&#125;&lt;/dt&gt;</span><br><span class="line">                &lt;dd&gt;</span><br><span class="line">                    &lt;a href=&quot;/company/2/&quot;&gt;&lt;h1&gt;&#123;&#123; hot_org.name &#125;&#125;&lt;/h1&gt;&lt;/a&gt;</span><br><span class="line">                    &lt;p&gt;&#123;&#123; hot_org.address &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><h5 id="0x11、通过url的include机制，设计url匹配模式"><a href="#0x11、通过url的include机制，设计url匹配模式" class="headerlink" title="0x11、通过url的include机制，设计url匹配模式"></a>0x11、通过url的include机制，设计url匹配模式</h5><ul><li><p>[ ] 当时旧版url模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">urls.py部分：</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^org_list/&apos;, OrgView.as_view(), name=&quot;org_list&quot;),  # OrgView为对应app的views里面的某个view；name是等于给这个url起个标签类似的</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">html使用：</span><br><span class="line">&lt;a class=&quot;more&quot; href=&quot;&#123;% url &apos;org_list&apos; %&#125;&quot;&gt;查看更多机构 &gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>[x] 使用include机制的模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^org/&apos;, include((&apos;organizations.urls&apos;, &quot;organizations&quot;), namespace=&quot;org&quot;)),  # 如果不熟悉，请查看源码，urlconf_module, app_name = (&quot;organizations.urls&quot;, &quot;organizations&quot;)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">html使用：</span><br><span class="line">&lt;a class=&quot;more&quot; href=&quot;&#123;% url &apos;org:list&apos; %&#125;&quot;&gt;查看更多机构 &gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&quot;&gt;&lt;a href=&quot;#0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&quot; class=&quot;headerlink&quot; title=&quot;0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&quot;&gt;&lt;/a&gt;0x0d、如何设置不同登录方式，显示不同的标签及对应的form表单的字段？下面代码超级多细节，真的值得看&lt;/h5&gt;&lt;p&gt;描述的情景如下图：&lt;br&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/54ED4E0E226340CEA9CFE4108A8547A0?method=download&amp;amp;shareKey=8a38291ac6316a8d039a0d0975e34c19&quot; alt=&quot;不同的form表单对应不同的标签&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/CCB8C3669E494ED18D31F06D81368E65?method=download&amp;amp;shareKey=8d8a97dda2c2c008300b001ffe8e9d51&quot; alt=&quot;form、及对应的标签&quot;&gt;&lt;/p&gt;&lt;p&gt;代码实现思路：两个不同的登录方式是：账号密码登录和使用短信验证码登录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
      <category term="Django踩坑记录" scheme="http://yoursite.com/tags/Django%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>django踩坑记录(3)</title>
    <link href="http://yoursite.com/2019/11/06/django-err3/"/>
    <id>http://yoursite.com/2019/11/06/django-err3/</id>
    <published>2019-11-06T05:00:32.000Z</published>
    <updated>2019-11-30T08:40:11.872Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的"><a href="#0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的" class="headerlink" title="0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)"></a>0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)</h5><p>可以通过在任何一个app里面的adminx里面增加下面这些代码即可：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class GlobalSettings(object):</span><br><span class="line">    &quot;&quot;&quot;设置后台管理系统的名字及页底的copyright&quot;&quot;&quot;</span><br><span class="line">    site_title = &quot;慕学后台管理系统&quot;</span><br><span class="line">    site_footer = &quot;慕学在线网&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class BaseSettings(object):</span><br><span class="line">    &quot;&quot;&quot;设置Django换肤功能&quot;&quot;&quot;</span><br><span class="line">    enable_themes = True</span><br><span class="line">    use_bootswatch = True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xadmin.site.register(xadmin.views.CommAdminView, GlobalSettings)</span><br><span class="line">xadmin.site.register(xadmin.views.BaseAdminView, BaseSettings)  # 这两个千万别打错、别继承错，不然就是设置无效</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/api/personal/file/998D0CB0ABA244FA87AC80E2229CD2E9?method=download&amp;shareKey=c75adbe3bc22a47df9d8aec064d89cc3" alt="设置自定义的页面属性,后台管理显示的字段，copyright，换肤功能"></p><h5 id="0x0b、Django前端路由的注意事项"><a href="#0x0b、Django前端路由的注意事项" class="headerlink" title="0x0b、Django前端路由的注意事项"></a>0x0b、Django前端路由的注意事项</h5><ol><li>路由加“/”和不加的区别：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 情况1</span><br><span class="line">path(&apos;login/&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 情况2</span><br><span class="line">path(&apos;login&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</span><br></pre></td></tr></table></figure></li></ol><div class="table-container"><table><thead><tr><th>字段</th><th>结果</th></tr></thead><tbody><tr><td>情况1</td><td>前端访问<code>http://127.0.0.1:8000/login/</code>或者<code>http://127.0.0.1:8000/login</code>这个地址都是可以找的到的</td></tr><tr><td>情况2</td><td>只能访问<code>http://127.0.0.1:8000/login</code>;不能访问<code>http://127.0.0.1:8000/login/</code></td></tr></tbody></table></div><ol><li>顺带说一下，Django提供了一个很方便的使用方法，可以减少后期的维护工作量，方便开发者随意变更url地址(即便如此，也希望各位尽量少变更，避免出现异常/未全部同步更改的情况)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 情况3</span><br><span class="line">path(&apos;login/&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</span><br><span class="line"></span><br><span class="line"># 情况4</span><br><span class="line">path(&apos;login/&apos;, TemplateView.as_view(template_name=&quot;login.html&quot;))</span><br></pre></td></tr></table></figure><p>情况3和情况4其实就是在于<code>name=&quot;login&quot;</code>，你可以理解为，在这里为这个url的地址额外添加一个名字，这个名字就是叫”login”,然后你每次叫这个名字的时候，其实都是叫他前面填的这个”login/“。</p><p>然后在前端页面里面，这样来使用这个url的名字，就可以做到不用写死url了，方便后期的维护<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a style=&quot;color:white&quot; class=&quot;fr loginbtn&quot; href=&quot;&#123;% url &apos;login&apos; %&#125;&quot;&gt;登录&lt;/a&gt;</span><br></pre></td></tr></table></figure><br>例如：你想修改登录的url为<code>http://127.0.0.1:8000/login23/</code>,那么你只需要修改代码为<code>path(&#39;login23/&#39;, TemplateView.as_view(template_name=&quot;login.html&quot;), name=&quot;login&quot;)</code>即可达到你的目的</p><h5 id="0x0c、自定义form表单校验数据-继承Django的form来书写"><a href="#0x0c、自定义form表单校验数据-继承Django的form来书写" class="headerlink" title="0x0c、自定义form表单校验数据(继承Django的form来书写)"></a>0x0c、自定义form表单校验数据(继承Django的form来书写)</h5><p>如用户的登录操作，可以定义得以一个form来校验<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from django import forms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LoginForm(forms.Form):</span><br><span class="line">    &quot;&quot;&quot;继承Django默认的form&quot;&quot;&quot;</span><br><span class="line">    username = forms.CharField(required=True, min_length=3)</span><br><span class="line">    password = forms.CharField(required=True, min_length=6)</span><br></pre></td></tr></table></figure></p><p>使用方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from users.forms import LoginForm</span><br><span class="line"></span><br><span class="line">login_form = LoginForm(request.POST)</span><br><span class="line">        if login_form.is_valid():</span><br><span class="line">            username = login_form.cleaned_data[&quot;username&quot;]  # 重点是这种用法，是这样从form里面提取对应字段的值</span><br><span class="line">            password = login_form.cleaned_data[&quot;password&quot;]</span><br><span class="line"></span><br><span class="line">            user = authenticate(username=username, password=password)</span><br><span class="line">            if user is not None:</span><br><span class="line">                login(request, user)</span><br><span class="line">                return HttpResponseRedirect(reverse(&quot;index&quot;))</span><br><span class="line">            else:</span><br><span class="line">                return render(request, &quot;login.html&quot;, &#123;&quot;msg&quot;: &quot;用户名或者密码错误&quot;, &quot;login_form&quot;: login_form&#125;) </span><br><span class="line">        else:</span><br><span class="line">            return render(request, &quot;login.html&quot;, &#123;&quot;login_form&quot;: login_form&#125;)  # 这个会自动校验，并且将错误的信息返回</span><br></pre></td></tr></table></figure><p>如果校验失败，那么返回的<code>login_form</code>字段里面带有下面这种用法的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if login_form.errors %&#125;</span><br><span class="line">    &#123;% for key,error in login_form.errors.items %&#125;</span><br><span class="line">        &#123;&#123; error &#125;&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    &#123;&#123; msg &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>就是可以直接提取/使用错误信息，直接返回到前端展示。</p><p>与此同时，还能够将前端的输入框做校验，选中提示是哪个字段出现异常，详情请看下边的完整的form表单的代码示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;form class=&quot;tab-form&quot; action=&quot;&#123;% url &apos;login&apos; %&#125;&quot; method=&quot;post&quot; autocomplete=&quot;off&quot; id=&quot;form1&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;form-group marb20 &#123;% if login_form.errors.username %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">        &lt;input name=&quot;username&quot; id=&quot;account_l&quot; value=&quot;&#123;&#123; login_form.username.value &#125;&#125;&quot; type=&quot;text&quot; placeholder=&quot;手机号/邮箱&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;form-group marb8 &#123;% if login_form.errors.password %&#125;errorput&#123;% endif %&#125;&quot;&gt;</span><br><span class="line">        &lt;input name=&quot;password&quot; id=&quot;password_l&quot; value=&quot;&#123;&#123; login_form.password.value &#125;&#125;&quot; type=&quot;password&quot; placeholder=&quot;请输入您的密码&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;error btns login-form-tips&quot; id=&quot;jsLoginTips&quot;&gt;&#123;% if login_form.errors %&#125;&#123;% for key,error in login_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;% else %&#125;&#123;&#123; msg &#125;&#125;&#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;auto-box marb38&quot;&gt;&lt;a class=&quot;fr&quot; href=&quot;forgetpwd.html&quot;&gt;忘记密码？&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;input class=&quot;btn btn-green&quot; id=&quot;jsLoginBtn&quot; type=&quot;submit&quot; value=&quot;立即登录 &gt; &quot; /&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的&quot;&gt;&lt;a href=&quot;#0x0a、如何设置后台管理的标题、copyright、换肤功能-这个是基于xadmin的&quot; class=&quot;headerlink&quot; title=&quot;0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)&quot;&gt;&lt;/a&gt;0x0a、如何设置后台管理的标题、copyright、换肤功能(这个是基于xadmin的)&lt;/h5&gt;&lt;p&gt;可以通过在任何一个app里面的adminx里面增加下面这些代码即可：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
      <category term="Django踩坑记录" scheme="http://yoursite.com/tags/Django%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>django踩坑记录(2)</title>
    <link href="http://yoursite.com/2019/11/03/django-err2/"/>
    <id>http://yoursite.com/2019/11/03/django-err2/</id>
    <published>2019-11-03T11:18:07.000Z</published>
    <updated>2019-11-30T08:37:41.795Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x05、由于相对-绝对路径写错导致"><a href="#0x05、由于相对-绝对路径写错导致" class="headerlink" title="0x05、由于相对/绝对路径写错导致"></a>0x05、由于相对/绝对路径写错导致</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>异常描述</td><td>RuntimeError: Model class apps.courses.models.Course doesn’t declare an explicit app_label and isn’t in an application in INSTALLED_APPS.</td></tr><tr><td>解决方法</td><td>修改其他app的models引用其他app的model的写法，即这个错误由于导入model的时候，写错相对/绝对路径而引起的，==最坑的是，pycharm不给你报错，而显示是正常导入的模块==</td></tr></tbody></table></div><a id="more"></a><h6 id="报错代码："><a href="#报错代码：" class="headerlink" title="报错代码："></a>报错代码：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RuntimeError: Model class apps.courses.models.Course doesn&apos;t declare an explicit app_label and isn&apos;t in an application in INSTALLED_APPS.</span><br></pre></td></tr></table></figure><p>解决方法如下：<br><img src="https://note.youdao.com/yws/api/personal/file/B9D9CD3CDF7042D8B60222A43603806B?method=download&amp;shareKey=92a3ceb39b2fbff437fed4ed58022728" alt="引用模块的路径错误"></p><p>正确解决方法：<br><img src="https://note.youdao.com/yws/api/personal/file/368D525F123B4F3585975D1810245CE2?method=download&amp;shareKey=3a20bc912893085a572447517770efcd" alt="正确的引用模块"></p><p>为什么是这样引用呢？<br>大概是因为，你在项目的settings.py中已经install了这个users的app，所以django知道这个users的app在哪里，所以引用的时候就不再需要带上前缀apps.也能正确使用(可能说的不准，仅供参考，欢迎各位指正)</p><h5 id="0x06、用于外键未正确设置导致的错误"><a href="#0x06、用于外键未正确设置导致的错误" class="headerlink" title="0x06、用于外键未正确设置导致的错误"></a>0x06、用于外键未正确设置导致的错误</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>MxOnline\apps\operations\models.py</td></tr><tr><td>异常描述</td><td></td></tr></tbody></table></div><p>TypeError: <strong>init</strong>() missing 1 required positional argument: ‘on_delete’<br>解决方法 | 将涉及到外键的地方做相对应的修改,必须加上on_delete这个参数，这个参数表名，如果主键的数据删除了，那么外键的数据应该怎么办，这时候可以考虑是否级联删除或者设置为空字段等等，需要具体情况具体分析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 增加on_delete=models.CASCADE即可</span><br><span class="line">user = models.ForeignKey(UserProfile, verbose_name=&quot;用户&quot;, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure><h5 id="0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文-admin-xadmin开发的"><a href="#0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文-admin-xadmin开发的" class="headerlink" title="0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文(admin/xadmin开发的)"></a>0x07、注册apps后才能在后台管理系统看得到，及如何修改注册之后app的显示名字为中文(admin/xadmin开发的)</h5><p>例如：编写了models之后，是需要再admin/adminx里面添加注册APP的信息，如果不添加，就在后台管理系统看不到的</p><ol><li><p>不注册course app<br><img src="https://note.youdao.com/yws/api/personal/file/05AD1A8216244BB68BAE78CB36BAEE95?method=download&amp;shareKey=ea5345b079d9067813149310f68c6d92" alt="不注册course app"></p></li><li><p>代码adminx里面未注册course<br><img src="https://note.youdao.com/yws/api/personal/file/2AE64705F21E444F904B93A1D8C9EE16?method=download&amp;shareKey=b15b86ac6dcdfd38edca2eb0a6e1b625" alt="adminx里面未注册course"></p></li><li><p>将adminx代码里面的注释去掉之后，即可注册course app<br><img src="https://note.youdao.com/yws/api/personal/file/655C52936CA1496E91B59D93149960DA?method=download&amp;shareKey=f537b32f19935da9bf64980a726d4e68" alt="将adminx里面的注释去掉之后，即可注册course app"></p></li><li><p>修改注册的COURSE这个app显示的名字</p></li></ol><p><img src="https://note.youdao.com/yws/api/personal/file/35575C32391A46529BFDC93074014995?method=download&amp;shareKey=a1baaebc1090bf06d05d9f65bd69cfa7" alt="增加verbose_name即可修改默认显示的app名字"></p><p>重启django、Ctrl+F5刷新即可看到效果：<br><img src="https://note.youdao.com/yws/api/personal/file/873A78DAE21D44508D40CAF309EACCD0?method=download&amp;shareKey=7398f49c1a37a3d1b690cbec6dcb7ffe" alt="更改之后结果图"></p><h5 id="0x08、如何修改添加某个city之后，提示的描述符不为“xxx-object”的情况"><a href="#0x08、如何修改添加某个city之后，提示的描述符不为“xxx-object”的情况" class="headerlink" title="0x08、如何修改添加某个city之后，提示的描述符不为“xxx object”的情况"></a>0x08、如何修改添加某个city之后，提示的描述符不为“xxx object”的情况</h5><p><img src="https://note.youdao.com/yws/api/personal/file/50AF19B25C6D45F6A874B925BFA3F736?method=getImage&amp;version=7412&amp;cstk=6iRGWRtP" alt="object提示符"></p><ol><li><p>代码实现，在对应的model里面，重新定义返回的<code>def __str__(self)：return self.name</code>这个方法，指定返回是name字段<br><img src="https://note.youdao.com/yws/api/personal/file/D32D832CB37A4D8086D80FFA6CD9C583?method=getImage&amp;version=7465&amp;cstk=IayEijDf" alt="代码实现"></p></li><li><p>修改之后结果：<br><img src="https://note.youdao.com/yws/api/personal/file/3CD3938F93F440FB9764506C701E1F8E?method=getImage&amp;version=7489&amp;cstk=IayEijDf" alt="显示指定的字段——city name"></p></li></ol><h5 id="0x09、如何指定显示、搜索、过滤、编辑指定的字段-列"><a href="#0x09、如何指定显示、搜索、过滤、编辑指定的字段-列" class="headerlink" title="0x09、如何指定显示、搜索、过滤、编辑指定的字段/列"></a>0x09、如何指定显示、搜索、过滤、编辑指定的字段/列</h5><ol><li>如何显示、搜索、过滤、编辑指定的列：<br><img src="https://note.youdao.com/yws/api/personal/file/3D7743CA55584EBC887916E3203550D6?method=getImage&amp;version=7464&amp;cstk=6iRGWRtP" alt="如何显示、搜索、过滤、编辑指定的列"></li></ol><ol><li>可以通过增加下面代实现(在adminx/admin中添加)：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class CityAdmin(object):</span><br><span class="line">    list_display = [&quot;id&quot;, &quot;name&quot;, &quot;desc&quot;, &quot;add_time&quot;]  # 指定显示某些列/字段</span><br><span class="line">    search_fields = [&quot;name&quot;, &quot;desc&quot;, &quot;add_time&quot;]  # 指定搜索的字段/列</span><br><span class="line">    list_filter = [&quot;name&quot;, &quot;desc&quot;, &quot;add_time&quot;]  # 指定可以选择过滤的字段/列</span><br><span class="line">    list_editable = [&quot;name&quot;, &quot;desc&quot;]  # 指定可以在列表那里就能修改的字段(方便修改，不用点进去也能编辑那种)</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/api/personal/file/636F341BBF574A2185A49A84ABD9970A?method=getImage&amp;version=7478&amp;cstk=6iRGWRtP" alt="增加代码list_display"></p><p>修改代码之后，结果如下：<br><img src="https://note.youdao.com/yws/api/personal/file/19C5F7A7449B401A819090C29E5A31C7?method=getImage&amp;version=7487&amp;cstk=6iRGWRtP" alt="结果指定列"></p><h6 id="再来一个玩法："><a href="#再来一个玩法：" class="headerlink" title="再来一个玩法："></a>再来一个玩法：</h6><p>如果需要也==过滤model里面的外键==的话，是通过这样的方式来使用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class CourseAdmin(object):</span><br><span class="line">    list_display = [&quot;name&quot;, &quot;desc&quot;, &quot;detail&quot;, &quot;degree&quot;, &quot;learn_times&quot;, &quot;students&quot;]</span><br><span class="line">    search_fields = [&quot;name&quot;, &quot;desc&quot;, &quot;detail&quot;, &quot;degree&quot;, &quot;students&quot;]</span><br><span class="line">    list_filter = [&quot;name&quot;, &quot;teacher__name&quot;, &quot;desc&quot;, &quot;detail&quot;, &quot;learn_times&quot;, &quot;degree&quot;, &quot;students&quot;]  # 外键可以通过&quot;course__name&quot;这种添加双下划线，然后指定某个字段来设置过滤</span><br><span class="line">    list_editable = [&quot;degree&quot;, &quot;desc&quot;]</span><br></pre></td></tr></table></figure><p>其中teacher字段就是外键，Django里面设置外键有点像是引用整个model字段，然后使用这个model指定name字段来作过滤/搜索.</p><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x05、由于相对-绝对路径写错导致&quot;&gt;&lt;a href=&quot;#0x05、由于相对-绝对路径写错导致&quot; class=&quot;headerlink&quot; title=&quot;0x05、由于相对/绝对路径写错导致&quot;&gt;&lt;/a&gt;0x05、由于相对/绝对路径写错导致&lt;/h5&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;详细描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;apps.users.models.BaseModel(类)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;异常描述&lt;/td&gt;
&lt;td&gt;RuntimeError: Model class apps.courses.models.Course doesn’t declare an explicit app_label and isn’t in an application in INSTALLED_APPS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;解决方法&lt;/td&gt;
&lt;td&gt;修改其他app的models引用其他app的model的写法，即这个错误由于导入model的时候，写错相对/绝对路径而引起的，==最坑的是，pycharm不给你报错，而显示是正常导入的模块==&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>django踩坑记录(1)</title>
    <link href="http://yoursite.com/2019/10/24/django-err1/"/>
    <id>http://yoursite.com/2019/10/24/django-err1/</id>
    <published>2019-10-24T01:30:45.000Z</published>
    <updated>2019-11-30T08:37:30.584Z</updated>
    
    <content type="html"><![CDATA[<h6 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h6><p>祝各位程序猿<strong>1024程序员节快乐</strong><br><strong><em>No +班，No bug，No 996.</em></strong></p><p>Desc: 简单记录一下，使用Django开发的采坑记录，如果以后再遇到这种情况的时候，可以快速知道如何解决</p><a id="more"></a><h5 id="0x01、设计表结构的几个重要点"><a href="#0x01、设计表结构的几个重要点" class="headerlink" title="0x01、设计表结构的几个重要点"></a>0x01、设计表结构的几个重要点</h5><ul><li>[x] 首先找出有哪些实体</li><li>[x] 然后找出这些实体有哪些字段</li><li>[x] 每个字段的类型、是否必填、长度是多少、是否存在默认值(有些字段是需要拿最小的单位去存储，避免从低精度转换到高精度的时候，出现丢失精度的情况)</li></ul><h6 id="实体1-lt-关系-gt-实体2"><a href="#实体1-lt-关系-gt-实体2" class="headerlink" title="实体1  &lt;关系&gt;  实体2"></a>实体1  &lt;关系&gt;  实体2</h6><p>例如：在django开发在线教育网站里边，存在的实体如下：<br>课程  章节  视频   课程资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">实体1  &lt;关系&gt;  实体2</span><br><span class="line">课程    章节   视频    课程资源</span><br><span class="line">  │       │      │        │</span><br><span class="line">  │       │      │        |</span><br><span class="line">  │       │      └──1  :  N</span><br><span class="line">  │       └──1 : N</span><br><span class="line">  └── 1 : N</span><br></pre></td></tr></table></figure></p><h5 id="0x02、自定义扩展django的用户表格auth-user表格，增加自定义字段"><a href="#0x02、自定义扩展django的用户表格auth-user表格，增加自定义字段" class="headerlink" title="0x02、自定义扩展django的用户表格auth_user表格，增加自定义字段"></a>0x02、自定义扩展django的用户表格auth_user表格，增加自定义字段</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>想要的功能描述</td><td>django自带的auth_user表格的基本字段不能满足开发需要的时候，如何才能在基础的auth_user表格上面扩展增加字段呢</td></tr><tr><td>解决方法</td><td>在users.models里面增加一个类，这个类的的内容如下：这个类一定要继承<code>from django.contrib.auth.models import AbstractUser</code>,即==AbstractUser==</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">from django.db import models</span><br><span class="line">from django.contrib.auth.models import AbstractUser  # 自定义扩展的类，即增加多与原来的字段，一定要继承这个类</span><br><span class="line"></span><br><span class="line">GENDER_CHOICES = (</span><br><span class="line">    (&quot;male&quot;, &quot;男&quot;),</span><br><span class="line">    (&quot;female&quot;, &quot;女&quot;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class UserProfile(AbstractUser):</span><br><span class="line">    &quot;&quot;&quot;用户表.2019-10-18重载django默认的auth_user，自定义扩展字段，一定要继承AbstractUser这个类&quot;&quot;&quot;</span><br><span class="line">    nick_name = models.CharField(max_length=50, verbose_name=&quot;昵称&quot;, default=&quot;&quot;)</span><br><span class="line">    birthday = models.DateField(verbose_name=&quot;出生日期&quot;, null=True, blank=True)</span><br><span class="line">    gender = models.CharField(max_length=6, verbose_name=&quot;性别&quot;, choices=GENDER_CHOICES)</span><br><span class="line">    address = models.CharField(max_length=100, verbose_name=&quot;地址&quot;, default=&quot;&quot;)</span><br><span class="line">    mobile = models.CharField(max_length=11, verbose_name=&quot;手机号码&quot;, unique=True)  # 注意手机号是唯一的</span><br><span class="line">    image = models.ImageField(upload_to=&quot;head_image/%Y/%m&quot;, default=&quot;default.jpg&quot;)</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        verbose_name = &quot;用户信息&quot;</span><br><span class="line">        verbose_name_plural = verbose_name  # 这个为了避免前端展示的时候出现“课程信息s”这个字眼</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        if self.nick_name:</span><br><span class="line">            return self.nick_name</span><br><span class="line">        else:</span><br><span class="line">            return self.username</span><br></pre></td></tr></table></figure><h5 id="0x03、数据表字段“添加时间”一直出现异常"><a href="#0x03、数据表字段“添加时间”一直出现异常" class="headerlink" title="0x03、数据表字段“添加时间”一直出现异常"></a>0x03、数据表字段“添加时间”一直出现异常</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>异常描述</td><td>后续添加的记录当中，所有的添加时间这个字段的时间都是一个时间，添加的时间都是项目启动的时候，编译的时间</td></tr><tr><td>解决方法</td><td>字段里面的==datetime.now()==改为==datetime.now==</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class BaseModel(models.Model):</span><br><span class="line">    &quot;&quot;&quot;这是公共的类&quot;&quot;&quot;</span><br><span class="line">    add_time = models.DateField(default=datetime.now, verbose_name=&quot;添加时间&quot;)  </span><br><span class="line">    # 一定要注意这里填写的是datetime.now而不是datetime.now()，</span><br><span class="line">    # 如果是datetime.now()那么这个字段的时间就是编译时间，不是我们想要的添加时间</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        abstract = True  # 添加这个是避免生成一个单独的表格</span><br></pre></td></tr></table></figure><h5 id="0x04、如何避免添加一个基类，导致生成一个新的、单独的表格"><a href="#0x04、如何避免添加一个基类，导致生成一个新的、单独的表格" class="headerlink" title="0x04、如何避免添加一个基类，导致生成一个新的、单独的表格"></a>0x04、如何避免添加一个基类，导致生成一个新的、单独的表格</h5><div class="table-container"><table><thead><tr><th>字段</th><th>详细描述</th></tr></thead><tbody><tr><td>位置</td><td>apps.users.models.BaseModel(类)</td></tr><tr><td>异常描述</td><td>编写的这个BaseModel类只是作为一个公共的类来继承、扩展的，与此同时，他自动生成了一个新的表格，但这不是我想要的</td></tr><tr><td>解决方法</td><td>在这个类的最后添加一个Meta，如: <code>class Meta: abstract = True</code>来达到避免生成一个新的、单独的表格</td></tr></tbody></table></div><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的系列文章：</p><blockquote><p><a href="https://qqizai.github.io/categories/Django" target="_blank" rel="noopener">Django踩坑记录系列</a>；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h6&gt;&lt;p&gt;祝各位程序猿&lt;strong&gt;1024程序员节快乐&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;No +班，No bug，No 996.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Desc: 简单记录一下，使用Django开发的采坑记录，如果以后再遇到这种情况的时候，可以快速知道如何解决&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>必知必会:selenuim/pyppeteer模拟登陆防检测,能够屏蔽一小部分简单的检测</title>
    <link href="http://yoursite.com/2019/09/05/crack-selecnuim-or-pyppeteer/"/>
    <id>http://yoursite.com/2019/09/05/crack-selecnuim-or-pyppeteer/</id>
    <published>2019-09-04T16:56:05.000Z</published>
    <updated>2019-11-30T08:03:33.063Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p>对于使用模拟登陆等操作来爬虫的手段，已经很容易被检测了，网上很多教程是说在网站所有js代码执行之前来执行下面几个js代码来到达效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">js1 = &apos;&apos;&apos;() =&gt;&#123;Object.defineProperties(navigator,&#123; webdriver:&#123; get: () =&gt; false&#125;&#125;)&#125;&apos;&apos;&apos;</span><br><span class="line">js2 = &apos;&apos;&apos;() =&gt; &#123;alert(window.navigator.webdriver)&#125;&apos;&apos;&apos;</span><br><span class="line">js3 = &apos;&apos;&apos;() =&gt; &#123;window.navigator.chrome = &#123;runtime: &#123;&#125;, &#125;; &#125;&apos;&apos;&apos;</span><br><span class="line">js4 = &apos;&apos;&apos;() =&gt;&#123;Object.defineProperty(navigator, &apos;languages&apos;, &#123;get: () =&gt; [&apos;en-US&apos;, &apos;en&apos;]&#125;);&#125;&apos;&apos;&apos;</span><br><span class="line">js5 = &apos;&apos;&apos;() =&gt;&#123;Object.defineProperty(navigator, &apos;plugins&apos;, &#123;get: () =&gt; [1, 2, 3, 4, 5,6],&#125;);&#125;&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><a id="more"></a><p>确实修改成功了。这种写法就万无一失了吗？并不是这样的，如果此时你在模拟浏览器中通过点击链接、输入网址进入另一个页面，或者开启新的窗口，你会发现，<code>window.navigator.webdriver</code>这个对象又变成true了，所以这样并非根治。</p><h5 id="最近看到两篇文章，说可以解除使用selenuim-pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。"><a href="#最近看到两篇文章，说可以解除使用selenuim-pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。" class="headerlink" title="最近看到两篇文章，说可以解除使用selenuim/pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。"></a>最近看到两篇文章，说可以解除使用selenuim/pyppeteer模拟登录的检测，设置之后，网站压根检测不到是使用自动化工具操作的把柄，下来买介绍一下，这两个设置神方法。</h5><h5 id="一、selenuim设置仿被检测"><a href="#一、selenuim设置仿被检测" class="headerlink" title="一、selenuim设置仿被检测"></a>一、selenuim设置仿被检测</h5><p>原理大概如下：在启动Chromedriver之前，为Chrome开启实验性功能参数 ==excludeSwitches==，它的==值为 [‘enable-automation’]==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from selenium.webdriver import Chrome, ChromeOptions</span><br><span class="line"></span><br><span class="line">option = ChromeOptions()</span><br><span class="line">option.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;])</span><br><span class="line">driver = Chrome(options=option)</span><br></pre></td></tr></table></figure><p>然后设置这个参数之后，Chrome浏览器会提示你，叫你“停用开发者模式运行的扩展程序”，这时候你不要点击“停用”，你只需要忽略它或者点击那个叉叉，把它关掉即可。</p><p>上面这个方法是能够有效根治这个被检测的问题。</p><h5 id="二、pyppeteer爬虫界新秀，设置仿被检测"><a href="#二、pyppeteer爬虫界新秀，设置仿被检测" class="headerlink" title="二、pyppeteer爬虫界新秀，设置仿被检测"></a>二、pyppeteer爬虫界新秀，设置仿被检测</h5><p>由于Selenium启动的Chrome中，有几十个特征可以被识别，所以在爬虫界已经没有以前那么受欢迎了。模拟浏览器的新秀Puppeteer异军突起，逐渐受到了爬虫界的关注。Puppeteer需要使用JavaScript来控制，如果你是用Python，那么就需要使用Pyppeteer.</p><p>如果你使用模拟浏览器爬淘宝，你会发现，无论怎么修改参数，Selenium总是可以立刻被识别。但是如果你使用了本文的方法，用Pyppeteer抓取淘宝，你就会发现另外一个广阔的天地。</p><p>写这篇文章的时候（2019-08-15），Pyppeteer的最新版本为0.0.25</p><h6 id="设置教程："><a href="#设置教程：" class="headerlink" title="设置教程："></a>设置教程：</h6><p>此时，你可以在PyCharm中，按住Command键（Windows、Linux用户按住Ctrl键），鼠标左键点击 frompyppeteerimportlaunch中的 launch，自动跳转到Pyppeteer源代码中的 launcher.py文件</p><p>把代码往上翻，在第61行左右，找到如下的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AUTOMATION_ARGS = [</span><br><span class="line">    &apos;--enable-automation&apos;,</span><br><span class="line">    &apos;--password-store=basic&apos;,</span><br><span class="line">    &apos;--use-mock-keychain&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>将其改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AUTOMATION_ARGS = [</span><br><span class="line">    # &apos;--enable-automation&apos;,  # 注释掉可以设置window.nagivator.webdriver为undefined</span><br><span class="line">    &apos;--password-store=basic&apos;,</span><br><span class="line">    &apos;--use-mock-keychain&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>当你修改的时候，pycharm工具会提示你是否修改源码，选择<code>OK</code>即可,如果你想以后改回来也可以改回来，不过看官方的开源介绍，下一个版本0.0.26是支持通过传递参数来设置这些值的，所以让我们一起期待下一个版本呗！</p><h6 id="先别走呗，这里有可能有你需要的同类型的文章："><a href="#先别走呗，这里有可能有你需要的同类型的文章：" class="headerlink" title="先别走呗，这里有可能有你需要的同类型的文章："></a>先别走呗，这里有可能有你需要的同类型的文章：</h6><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/83472776" target="_blank" rel="noopener">python最好用的第三方库资源下载网址</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/81516304" target="_blank" rel="noopener">详细讲解aiohttp异步请求及使用，高效率</a><br><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;p&gt;对于使用模拟登陆等操作来爬虫的手段，已经很容易被检测了，网上很多教程是说在网站所有js代码执行之前来执行下面几个js代码来到达效果：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;js1 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt;&amp;#123;Object.defineProperties(navigator,&amp;#123; webdriver:&amp;#123; get: () =&amp;gt; false&amp;#125;&amp;#125;)&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js2 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt; &amp;#123;alert(window.navigator.webdriver)&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js3 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt; &amp;#123;window.navigator.chrome = &amp;#123;runtime: &amp;#123;&amp;#125;, &amp;#125;; &amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js4 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt;&amp;#123;Object.defineProperty(navigator, &amp;apos;languages&amp;apos;, &amp;#123;get: () =&amp;gt; [&amp;apos;en-US&amp;apos;, &amp;apos;en&amp;apos;]&amp;#125;);&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;js5 = &amp;apos;&amp;apos;&amp;apos;() =&amp;gt;&amp;#123;Object.defineProperty(navigator, &amp;apos;plugins&amp;apos;, &amp;#123;get: () =&amp;gt; [1, 2, 3, 4, 5,6],&amp;#125;);&amp;#125;&amp;apos;&amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CSS字体反爬实战，10分钟就能学会</title>
    <link href="http://yoursite.com/2019/09/03/crack-css/"/>
    <id>http://yoursite.com/2019/09/03/crack-css/</id>
    <published>2019-09-02T19:39:37.000Z</published>
    <updated>2019-11-30T08:09:06.867Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><h6 id="本次来解锁新姿势——CSS字体反爬。"><a href="#本次来解锁新姿势——CSS字体反爬。" class="headerlink" title="本次来解锁新姿势——CSS字体反爬。"></a>本次来解锁新姿势——CSS字体反爬。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在解决这个字体反爬的路上，当我以为解决这个反爬手段的时候，</span><br><span class="line">最后验证总的答案的时候，被打脸了！！！</span><br><span class="line">又被默默设埋伏了，踩了一个坑，巨大的，为何悲伤辣么大 &lt;(－︿－)&gt;</span><br><span class="line">不将html源码页面下载下来还真发现不了在哪写错了，不多说，赶紧来看一下呗~~</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="0x01、分析目标网站"><a href="#0x01、分析目标网站" class="headerlink" title="0x01、分析目标网站"></a>0x01、分析目标网站</h5><ol><li><p>还是同样的手段，打开F12进行选中数字，查看它的标签内容是什么<br><img src="https://img-blog.csdnimg.cn/20190824142418441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>很明显，看了三个标签，只有第一个是对上的，其他两个是对不上的，难道是所有页面都是第一个对上，后面数字都打乱？并不是的，经过多次请求发现，每次都是随机打乱的，打乱的看起来好像没有规则。</p></li><li><p>那我也随便找找，看看有什么突破口不，首先去找id属性去全局搜索，看一下有什么相关内容<br><img src="https://img-blog.csdnimg.cn/20190824142453989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>出现关联的数据如下：<br><img src="https://img-blog.csdnimg.cn/20190824142527463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824142717895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>出现的这两个东西，突然不知道是啥，那我就去谷歌一下呗，发现这两个是css知识里面的东西，又涨知识了</p></li></ol><blockquote><p>Tips：这些属性在文末有提到，可以翻到后面一起对照看</p></blockquote><ol><li>竟然没有什么突破口，那我继续搜索多几个看看<br><img src="https://img-blog.csdnimg.cn/20190824142816149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824142829854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><ul><li>[x] 看，这个content:”202”不就是我们想要的吗，太爽了，终于找到一点点突破口了，谷歌百度一下这个:before你会发现它是CSS里面的属性</li></ul><ol><li><p>再继续找找其他的数字看看，比如看到这个数字128：<br><img src="https://img-blog.csdnimg.cn/20190824142920870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>搜索这个属性看看，又发现了两个属性：position、left。position顾名思义就是位置的属性，用relative表示，翻译过来就是相对位置的意思<br><img src="https://img-blog.csdnimg.cn/20190824142949733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>跟前端展示的综合起来，大概的意思就是：相对的位置，然后left表示偏移的方向及偏移多少，然后最终才是我们肉眼在前端看到的正确位置的数字，那开始造起来呗，<strong>just do IT</strong>！</p></li></ol><h5 id="0x02、核心代码"><a href="#0x02、核心代码" class="headerlink" title="0x02、核心代码"></a>0x02、核心代码</h5><h6 id="1-、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型"><a href="#1-、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型" class="headerlink" title="(1)、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型"></a>(1)、下面代码就是核心判断字体是否是出现偏移或者是before属性的类型</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_offset(div_list, response_str):</span><br><span class="line">    &quot;&quot;&quot;提取那种是偏移量的情况&quot;&quot;&quot;</span><br><span class="line">    if len(div_list) == 4:</span><br><span class="line">        real_div = div_list[1:]</span><br><span class="line">        num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]</span><br><span class="line">    else:</span><br><span class="line">        real_div = div_list</span><br><span class="line">        if len(real_div) == 3:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]  # 用来存储正确位置的数值，最后将它们用字符串连接起来，再转化为int</span><br><span class="line">        elif len(real_div) == 2:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;]</span><br><span class="line">        elif len(real_div) == 1:</span><br><span class="line">            num = [&quot;0&quot;]</span><br><span class="line">            print(&quot;---特殊情况长度为:&#123;&#125;，直接就是原来标签内容real_div:&#123;&#125;&quot;.format(len(div_list), real_div))</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;----严重致命错误，real_div长度匹配不上，请检查.len(real_div):&#123;&#125;&quot;.format(len(real_div)))</span><br><span class="line">            num = []</span><br><span class="line">    pattern_left = r&quot;(?&lt;=.%s &#123; left:)(.*?)(?=em)&quot;  # 提取位移值</span><br><span class="line"></span><br><span class="line">    for index, div in enumerate(real_div):</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        content = div.xpath(&quot;./text()&quot;).extract_first(&quot;&quot;)  # 提取数字</span><br><span class="line">        is_left = re.search(pattern_left%class_name, response_str, re.S)  # 偏移情况</span><br><span class="line"></span><br><span class="line">        if not is_left:  # 顺序完全一致的情况下，可以添加</span><br><span class="line">            num[index] = content</span><br><span class="line">            continue</span><br><span class="line">        else:  # 数值出现异位情况</span><br><span class="line">            left_num = int(is_left.group()) if is_left else None</span><br><span class="line">            if not left_num:</span><br><span class="line">                print(&quot;在匹配到位置的re对象不为空的情况下，为啥还是取不到位移值？请检查是否出现错误.class_name:&#123;&#125; num:&#123;&#125; re对象left_num:&#123;&#125;&quot;.format(class_name, num,left_num))</span><br><span class="line">                raise ValueError(&quot;获取偏移量的时候，出现异常,理论上这里是不会触发的，因为前面已经判断是已经有值了，所有这里是不会出现这种情况的&quot;)</span><br><span class="line">            num[index + left_num] = content</span><br><span class="line">    result = &quot;&quot;.join(num)</span><br><span class="line">    print(&quot;当前标签匹配最终结果如下 num:&#123;&#125; real_div:&#123;&#125; div_list:&#123;&#125;&quot;.format(num, real_div, div_list))</span><br><span class="line">    return int(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_numbers(div_html, response_str):</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">    :param div_html: 传进来的xpath对象，div[@class=&apos;col-md-1&apos;]</span><br><span class="line">    :param response_str: html源码，也就是response.text</span><br><span class="line">    :return:int，返回当前div标签的真正数值</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    div_list = div_html.xpath(&quot;./div&quot;)  # 获取div[@class=&apos;col-md-1&apos;]下的所有div标签</span><br><span class="line"></span><br><span class="line">    if len(div_list) &lt; 3:  # todo: 长度小于3的(1和2)，若为2，那么提取第二个标签的值</span><br><span class="line">        div = div_list[-1]  # 取最后一个. 长度为1和2都是适用的</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        pattern = &quot;(?&lt;=.%s:before &#123; content:\&quot;)(.*?)(?=\&quot;)&quot; % class_name  # .sklgp0fhDg:before &#123; content:&quot;116&quot; &#125;  这种情况就是</span><br><span class="line">        num = re.search(pattern, response_str, re.S)</span><br><span class="line">        num = num.group() if num else None</span><br><span class="line">        if not num:  # 当取不到值的时候，这里默认此时两位数的情况跟三位数的情况是一直的，就是出现位移的情况</span><br><span class="line">            num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">        return int(num)</span><br><span class="line">    elif len(div_list) == 3 or len(div_list) == 4:   # todo: 长度为3的,这里是直接通过计算便宜量，复原数字;长度为4的就是直接就是有个div不展示</span><br><span class="line">        num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">        return num</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br><span class="line">        raise ValueError(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br></pre></td></tr></table></figure><p>到此，我==以为==我是用正确的姿势==解决==这种问题了，可惜==并不是！！并不是！！！==<br>这中间我通过一边下载html源码一边慢慢核对前端展示的数值跟代码返回的是否一样的时候，当我发现有些两位数的数值出现匹配错误的情况，匹配出来是3位数，这到底为什么呢</p><h6 id="2-、下面将继续来看一下到底是为什么这样？"><a href="#2-、下面将继续来看一下到底是为什么这样？" class="headerlink" title="(2)、下面将继续来看一下到底是为什么这样？"></a>(2)、下面将继续来看一下到底是为什么这样？</h6><p>将这种特殊两位数的，匹配出三位数的情况，进行分析，搜索id属性<br><img src="https://img-blog.csdnimg.cn/20190824143408800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol><li>这次又发现了一个属性，==<strong>opacity属性</strong>==，这个翻译过来是“不透明度”的意思，<a href="https://www.runoob.com/cssref/css3-pr-opacity.html" target="_blank" rel="noopener">点击我进行了解</a></li></ol><p>查看介绍，大概明白了，html源码可以通过设置元素的透明度，来达到前端肉眼是否看到的效果，如果设置为0则表示完全透明，为1则表示完全不透明</p><ol><li>下面我通过修改html源码的opacity属性进行剖析，发现设置opacity属性为0和1是得到不同的结果<br><img src="https://img-blog.csdnimg.cn/20190824143432189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190824143508360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>那为什么是重叠的呢？其实刚刚搜索出来的结果还有一个属性，叫==margin-right==，这个属性在CSS里面用来设置边距的，那么我们将原来的属性注释掉或者修改为0看看得到什么结果：<br><img src="https://img-blog.csdnimg.cn/20190824144003541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h6 id="3-、小结"><a href="#3-、小结" class="headerlink" title="(3)、小结"></a>(3)、小结</h6><ul><li>[x] <strong>来小结一下前面几个属性</strong><br>如果不是很明白那些属性，那么去谷歌或者百度一下，看看这些都是代表什么含义</li></ul></li></ol><div class="table-container"><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>width:2em</td><td>是字体宽度大小。    它是描述相对于应用在当前元素的字体尺寸，所以它也是相对长度单位。一般浏览器字体大小默认为16px，则2em == 32px；<a href="https://www.runoob.com/cssref/css-units.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>float:left</td><td>把图像向左浮动，<a href="https://www.runoob.com/cssref/pr-class-float.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>:before { content “202” }</td><td>:before 选择器向选定的元素前插入内容,使用content 属性来指定要插入的内容，<a href="https://www.runoob.com/cssref/sel-before.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>left:-2em</td><td>把当前元素向右移-2em单位，即等于向左移2em单位，<a href="https://www.runoob.com/cssref/pr-pos-left.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>opacity</td><td>透明度属性，取值范围为0-1,。为0表示完全透明，为1表示完全不透明，<a href="https://www.runoob.com/cssref/css3-pr-opacity.html" target="_blank" rel="noopener">详解</a></td></tr><tr><td>margin</td><td>外边距，<a href="https://www.runoob.com/css/css-margin.html" target="_blank" rel="noopener">详解</a></td></tr></tbody></table></div><p>总结一下这种CSS反爬手段解决顺序：</p><ol><li>首先判断元素是否透明：当我们遇到存在opacity属性为0的就是可以忽略它，不是0的就继续判断后面的</li><li>判断其大致规律性，如下(根据==不同网站==来设置，本文教程的大致规律性不一定符合所有CSS反爬手段的网站，需要==适当调整一下==)：<pre><code> div标签长度为3的可能：乱序的，或者顺序的，或者第一个标签是透明的，真正展示的应该是两位数字的； div标签长度为4的可能：有一个标签是不展示的，剩下三个标签是乱序的或者是顺序的（这个使用属于长度为3的情况去判断） div标签长度为2的可能：目前发现的，只有包含:before的div标签是可用的，另外一个标签的内容是可以忽略的</code></pre></li></ol><p>由于本文教程是，最后才发现opacity属性的，所以我代码里面并不是第一步判断opacity属性，但是我在总结的时候，个人推荐，先判断opacity属性，如果为透明的话，都可以直接跳过那个元素了</p><h6 id="4-、最终代码"><a href="#4-、最终代码" class="headerlink" title="(4)、最终代码"></a>(4)、最终代码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/8/20 13:34</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : crawl_decode_css.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">    # .jOjM12plqO &#123;position: relative&#125;  # 存在这种情况就是表示，是相对的位置，如果没有这个属性则表示不用调整位置</span><br><span class="line">    # .jOjM12plqO &#123;float: left&#125;  # 或者说，存在这种情况也可以是不用发生位移的，就是原位</span><br><span class="line">    # .jOjM12plqO &#123;left: 1em&#125;  # 存在这种情况就是，需要发生位移的，也可以使用这个来判断是否需要位移</span><br><span class="line">    # .jOjM12plqO &#123;width: 1em&#125; # 这个是没有参考价值的</span><br><span class="line">    # .huD10lVv &#123; opacity:0 &#125;  # 这个神坑的属性，是叫透明度，取值范围为0-1，为0表示完全透明，为1表示完全不透明，可为小数</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">from scrapy import Selector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_offset(div_list, response_str):</span><br><span class="line">    &quot;&quot;&quot;这里是单独的提取出来的，专门是提取那种是偏移量的情况&quot;&quot;&quot;</span><br><span class="line">    if len(div_list) == 4:</span><br><span class="line">        real_div = div_list[1:]</span><br><span class="line">        num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]</span><br><span class="line">    else:</span><br><span class="line">        real_div = div_list</span><br><span class="line">        if len(real_div) == 3:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]  # 用来存储正确位置的数值，最后将它们用字符串连接起来，再转化为int</span><br><span class="line">        elif len(real_div) == 2:</span><br><span class="line">            num = [&quot;0&quot;, &quot;0&quot;]</span><br><span class="line">        elif len(real_div) == 1:</span><br><span class="line">            num = [&quot;0&quot;]</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;----严重致命错误，real_div长度匹配不上，请检查.len(real_div):&#123;&#125;&quot;.format(len(real_div)))</span><br><span class="line">            num = []</span><br><span class="line">    pattern_opacity = r&quot;.%s &#123; opacity:0 &#125;&quot;  # 出现opacity:0的表示完全透明，这时候不用理会这个字</span><br><span class="line">    pattern_left = r&quot;(?&lt;=.%s &#123; left:)(.*?)(?=em)&quot;  # 提取位移值</span><br><span class="line"></span><br><span class="line">    for index, div in enumerate(real_div):</span><br><span class="line">        # print(&quot;当前标签的num:&#123;&#125; index:&#123;&#125; div:&#123;&#125; real_div:&#123;&#125; div_list:&#123;&#125;&quot;.format(num, index, div, real_div, div_list))</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        content = div.xpath(&quot;./text()&quot;).extract_first(&quot;&quot;)  # 提取数字</span><br><span class="line">        is_opacity = re.search(pattern_opacity % class_name, response_str, re.S)  # 是否为透明状态</span><br><span class="line">        is_left = re.search(pattern_left%class_name, response_str, re.S)  # 偏移情况</span><br><span class="line"></span><br><span class="line">        # 后来新增透明度判断</span><br><span class="line">        if is_opacity:</span><br><span class="line">            print(&quot;匹配到为完全透明的情况，请检查是否真的是完全透明，当前的class_name:&#123;&#125; num:&#123;&#125; num[&#123;&#125;]=&apos;-&apos;&quot;.format(class_name, num, index))</span><br><span class="line">            num[index] = &quot;-&quot;</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        if not is_left:  # 顺序完全一致的情况下，可以添加</span><br><span class="line">            print(&quot;匹配不到偏移量，请检查是否真的是出现不偏移的情况，当前的class_name:&#123;&#125; num:&#123;&#125; num[&#123;&#125;]=&#123;&#125;&quot;.format(class_name, num, index, content))</span><br><span class="line">            num[index] = content</span><br><span class="line">            continue</span><br><span class="line">        else:  # 数值出现异位情况</span><br><span class="line">            left_num = int(is_left.group()) if is_left else None</span><br><span class="line">            if not left_num:</span><br><span class="line">                print(&quot;在匹配到位置的re对象不为空的情况下，为啥还是取不到位移值？请检查是否出现错误.class_name:&#123;&#125; num:&#123;&#125; re对象left_num:&#123;&#125;&quot;.format(class_name, num,left_num))</span><br><span class="line">                raise ValueError(&quot;获取偏移量的时候，出现异常,理论上这里是不会触发的，因为前面已经判断是已经有值了，所有这里是不会出现这种情况的&quot;)</span><br><span class="line">            num[index + left_num] = content</span><br><span class="line">    last_num = [i for i in num if i!=&quot;-&quot;]</span><br><span class="line">    result = &quot;&quot;.join(last_num)</span><br><span class="line">    print(&quot;当前标签匹配最终结果如下 num:&#123;&#125; real_div:&#123;&#125; div_list:&#123;&#125;&quot;.format(num, real_div, div_list))</span><br><span class="line">    return int(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_numbers(div_html, response_str):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    :param div_html: 传进来的xpath对象，div[@class=&apos;col-md-1&apos;]</span><br><span class="line">    :param response_str: html源码，也就是response.text</span><br><span class="line">    :return:int，返回当前div标签的真正数值</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    div_list = div_html.xpath(&quot;./div&quot;)  # 获取div[@class=&apos;col-md-1&apos;]下的所有div标签</span><br><span class="line"></span><br><span class="line">    if len(div_list) &lt; 3:  # todo: 长度小于3的(1和2)，若为2，那么提取第二个标签的值</span><br><span class="line">        div = div_list[-1]  # 取最后一个. 长度为1和2都是适用的</span><br><span class="line">        class_name = div.xpath(&quot;./@class&quot;).extract_first(&quot;&quot;)</span><br><span class="line">        pattern = &quot;(?&lt;=.%s:before &#123; content:\&quot;)(.*?)(?=\&quot;)&quot; % class_name  # .sklgp0fhDg:before &#123; content:&quot;116&quot; &#125;  这种情况就是</span><br><span class="line">        num = re.search(pattern, response_str, re.S)</span><br><span class="line">        num = num.group() if num else None</span><br><span class="line">        if not num:  # 当取不到值的时候，这里默认此时两位数的情况跟三位数的情况是一直的，就是出现位移的情况</span><br><span class="line">            num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">            print(&quot;[flag=2] num:&#123;&#125; 当前div长度小于3，但是处理的却是按照3/4的处理，返回的结果情况前面&quot;.format(num))</span><br><span class="line">        return int(num)</span><br><span class="line">    elif len(div_list) == 3 or len(div_list) == 4:   # todo: 长度为3的,这里是直接通过计算便宜量，复原数字;长度为4的就是直接就是有个div不展示</span><br><span class="line">        num = parse_offset(div_list=div_list, response_str=response_str)</span><br><span class="line">        print(&quot;len(div_list) == 3 or len(div_list) == 4的返回值num:&#123;&#125;&quot;.format(num))</span><br><span class="line">        return num</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br><span class="line">        raise ValueError(&quot;长度找不到匹配项.当前长度为:&#123;&#125; div_list:&#123;&#125;&quot;.format(len(div_list), div_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_html():</span><br><span class="line">    url = &quot;xxxx&quot;</span><br><span class="line">    resp = requests.get(url)</span><br><span class="line">    selec = Selector(resp)</span><br><span class="line">    div_html = selec.xpath(&apos;//div[@class=&quot;col-md-1&quot;]&apos;)</span><br><span class="line">    for one in div_html:</span><br><span class="line">        real_num = parse_numbers(div_html=one, response_str=resp.text)</span><br><span class="line">        print(&quot;解析之后真正的num为:&#123;&#125;&quot;.format(real_num))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    get_html()</span><br></pre></td></tr></table></figure><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;h6 id=&quot;本次来解锁新姿势——CSS字体反爬。&quot;&gt;&lt;a href=&quot;#本次来解锁新姿势——CSS字体反爬。&quot; class=&quot;headerlink&quot; title=&quot;本次来解锁新姿势——CSS字体反爬。&quot;&gt;&lt;/a&gt;本次来解锁新姿势——CSS字体反爬。&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在解决这个字体反爬的路上，当我以为解决这个反爬手段的时候，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;最后验证总的答案的时候，被打脸了！！！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;又被默默设埋伏了，踩了一个坑，巨大的，为何悲伤辣么大 &amp;lt;(－︿－)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;不将html源码页面下载下来还真发现不了在哪写错了，不多说，赶紧来看一下呗~~&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="字体反爬" scheme="http://yoursite.com/tags/%E5%AD%97%E4%BD%93%E5%8F%8D%E7%88%AC/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>爬虫：js逆向目前遇到的知识点集合</title>
    <link href="http://yoursite.com/2019/08/27/js-know/"/>
    <id>http://yoursite.com/2019/08/27/js-know/</id>
    <published>2019-08-27T07:31:38.000Z</published>
    <updated>2019-11-30T08:09:18.347Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目前js逆向遇到的函数、解法或者其他注意事项集合"><a href="#目前js逆向遇到的函数、解法或者其他注意事项集合" class="headerlink" title="目前js逆向遇到的函数、解法或者其他注意事项集合"></a>目前js逆向遇到的函数、解法或者其他注意事项集合</h4><h5 id="0x01、Object-需要调用的函数名-参数-用法详解"><a href="#0x01、Object-需要调用的函数名-参数-用法详解" class="headerlink" title="0x01、Object(需要调用的函数名)(参数)用法详解"></a>0x01、Object(需要调用的函数名)(参数)用法详解</h5><p>后面的参数将传递到需要调用的函数名中，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// s.c对应e1    s.d对应e2   s.e对应sig</span><br><span class="line">// 这里注意一下：object(sig)(f)表示将f传递到sig里面去</span><br><span class="line">var f = Object(e1)(Object(e2)(JSON.stringify(l.payload))), p = Object(sig)(f);</span><br></pre></td></tr></table></figure></p><a id="more"></a><h5 id="0x02、js前加感叹号是什么意思？比如-function"><a href="#0x02、js前加感叹号是什么意思？比如-function" class="headerlink" title="0x02、js前加感叹号是什么意思？比如 !function(){}();"></a>0x02、js前加感叹号是什么意思？比如 !function(){}();</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">原文来源：https://blog.csdn.net/H_O_W_E/article/details/51388500</span><br><span class="line"></span><br><span class="line">内容如下：</span><br><span class="line"></span><br><span class="line">--------------------------我是可爱的分割线---------------------------------------------------</span><br><span class="line"></span><br><span class="line">此文出自 http://q.cnblogs.com/q/52920/</span><br><span class="line"></span><br><span class="line">感谢原创作者和转载者，感谢提问人和解答人。</span><br><span class="line"></span><br><span class="line">!function()&#123;&#125;();   !有什么用？</span><br><span class="line"></span><br><span class="line">从语法上来开，Javascript中分号表示语句结束，在开头加上，可能是为了压缩的时候和别的方法分割一下，表示一个新的语句开始。所以，如果在一个单独的JS文件中，开头的分号是没有任何意义的，可以删掉。</span><br><span class="line"></span><br><span class="line">叹号是逻辑运算符，是“非”的意思，常见这种写法 if(!true)&#123;&#125;；而将运算符加载函数定义的前面，则是将函数看做一个整体，然后再调用这个函数，并对返回的结构进行逻辑运算。</span><br><span class="line"></span><br><span class="line">说白了，此处就是构建了一个立即执行函数，建议楼主知道意思就可以，自己写的时候，可以使用更清晰的格式：</span><br><span class="line"></span><br><span class="line">(function()&#123;&#125;)();</span><br><span class="line"></span><br><span class="line">楼上已经给出很详细的解说了。</span><br><span class="line"></span><br><span class="line">这里补充一点：在函数声明【 function ()&#123;&#125; 】后面加【 () 】，意思是执行这个函数声明。有的叫法是“匿名自动执行函数”，更准确的表示应该为“立即执行函数”。</span><br><span class="line"></span><br><span class="line">但立即执行函数，要作为表达式的一部分才行，不然js解释器会报语法错误。一般，成为表达式的最容易理解方式是：在左右两端加一个圆括号，像这样【 (function ()&#123;&#125;) 】。所以，立即执行函数最常见的写法是【 (function ()&#123;&#125;)() 】，这是一个语句，在前面和后面都可以加【 ; 】。</span><br><span class="line"></span><br><span class="line">其实立即执行函数还有N种写法，比如【 (function ()&#123;&#125;) 】也行，在函数声明前加一元运算符也行：【 !function ()&#123;&#125;() 】、【 ~function ()&#123;&#125;() 】。甚至，对一元运算符进行组合也可以：【 !!!!function ()&#123;&#125;() 】、【 ~~~function ()&#123;&#125;() 】、【 !~!function ()&#123;&#125;() 】。</span><br></pre></td></tr></table></figure><h5 id="0x03、-function-win-window-这个js是什么意思？"><a href="#0x03、-function-win-window-这个js是什么意思？" class="headerlink" title="0x03、(function (win){}(window))这个js是什么意思？"></a>0x03、(function (win){}(window))这个js是什么意思？</h5><p>1、意思是，把window对象传入这个匿名函数中（即将window传给win），并且同时执行这个函数，==在页面载入之前就执行==；</p><p>2、小括号有返回值，也就是小括号内的函数或者表达式的返回值，所以说小括号内的function返回值等于小括号的返回值;</p><h5 id="0x04、window对象的某些用法转换为Nodejs的用法"><a href="#0x04、window对象的某些用法转换为Nodejs的用法" class="headerlink" title="0x04、window对象的某些用法转换为Nodejs的用法"></a>0x04、window对象的某些用法转换为Nodejs的用法</h5><p>1、对于一些window对象的用法，将js代码扣出来，在nodejs里是不能直接使用的，需要做相应的转换，例如下面这个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 源js代码</span><br><span class="line">window[&quot;String&quot;][&quot;fromCharCode&quot;](scHZjLUh1[&quot;charCodeAt&quot;](i)</span><br><span class="line"></span><br><span class="line"># 扣出来在本地webstorm+nodejs执行的代码</span><br><span class="line">String.fromCharCode((scHZjLUh1[&quot;charCodeAt&quot;](i))</span><br></pre></td></tr></table></figure><p>通过上面代码之间的转换，可以看出，window的某些用法可以在nodejs里面也能找到对应的写法</p><h5 id="0x05、Nodejs实现Base64编解码"><a href="#0x05、Nodejs实现Base64编解码" class="headerlink" title="0x05、Nodejs实现Base64编解码"></a>0x05、Nodejs实现Base64编解码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 用法一：</span><br><span class="line">Base64[&quot;decode&quot;](scHZjLUh1)  # 源js代码 </span><br><span class="line">Buffer.from(scHZjLUh1, &apos;base64&apos;).toString()  # 转换成nodejs代码</span><br><span class="line"></span><br><span class="line"># 用法二：</span><br><span class="line">window.atob([base64加密后的字符串])  # atob是解密base64字符串，成为普通字符串</span><br><span class="line">window.btoa([base64加密前的字符串])  # btoa是加密字符串，成为base64编码的字符串</span><br><span class="line"></span><br><span class="line">01、例子：</span><br><span class="line">源js代码也可能是使用window对象来构造的base64加解密，比如下面：</span><br><span class="line">window.atob(&quot;amF2YXNjcmlwdA==&quot;)  # 解码的结果是javascript</span><br><span class="line">转换为nodejs写法就是：</span><br><span class="line">Buffer.from(&quot;amF2YXNjcmlwdA==&quot;, &apos;base64&apos;).toString()  # nodejs的base64解码方式</span><br><span class="line"></span><br><span class="line">02、继续延伸：</span><br><span class="line">nodejs中base64加解密如下：</span><br><span class="line"></span><br><span class="line"># base64解密</span><br><span class="line">console.log(Buffer.from(&quot;SGVsbG8gV29ybGQ=&quot;, &apos;base64&apos;).toString(&apos;utf-8&apos;))</span><br><span class="line">Hello World</span><br><span class="line"></span><br><span class="line"># base64加密</span><br><span class="line">console.log(Buffer.from(&quot;Hello World&quot;).toString(&apos;base64&apos;));</span><br><span class="line">SGVsbG8gV29ybGQ=</span><br></pre></td></tr></table></figure><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h6 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h6><p>先别走呗，这里有可能有你需要的干货文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>;<br><a href="https://blog.csdn.net/weixin_41173374/article/details/100013167" target="_blank" rel="noopener">woff字体反爬实战，10分钟就能学会</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;目前js逆向遇到的函数、解法或者其他注意事项集合&quot;&gt;&lt;a href=&quot;#目前js逆向遇到的函数、解法或者其他注意事项集合&quot; class=&quot;headerlink&quot; title=&quot;目前js逆向遇到的函数、解法或者其他注意事项集合&quot;&gt;&lt;/a&gt;目前js逆向遇到的函数、解法或者其他注意事项集合&lt;/h4&gt;&lt;h5 id=&quot;0x01、Object-需要调用的函数名-参数-用法详解&quot;&gt;&lt;a href=&quot;#0x01、Object-需要调用的函数名-参数-用法详解&quot; class=&quot;headerlink&quot; title=&quot;0x01、Object(需要调用的函数名)(参数)用法详解&quot;&gt;&lt;/a&gt;0x01、Object(需要调用的函数名)(参数)用法详解&lt;/h5&gt;&lt;p&gt;后面的参数将传递到需要调用的函数名中，如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// s.c对应e1    s.d对应e2   s.e对应sig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 这里注意一下：object(sig)(f)表示将f传递到sig里面去&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var f = Object(e1)(Object(e2)(JSON.stringify(l.payload))), p = Object(sig)(f);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="JS逆向" scheme="http://yoursite.com/tags/JS%E9%80%86%E5%90%91/"/>
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>woff字体反爬实战，10分钟就能学会(ttf字体同理)</title>
    <link href="http://yoursite.com/2019/08/26/crack-woff/"/>
    <id>http://yoursite.com/2019/08/26/crack-woff/</id>
    <published>2019-08-26T14:27:40.000Z</published>
    <updated>2019-11-30T08:08:16.557Z</updated>
    
    <content type="html"><![CDATA[<p>声明：本帖子仅是用于学习用途，请勿与用于恶意破坏别人网站，本人不承担法律责任。</p><p>来继续学爬虫呀！</p><h6 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h6><h6 id="简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？"><a href="#简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？" class="headerlink" title="简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？"></a>简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？</h6><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">经过分析，当前这种字体反爬机制是：通过获取指定链接的woff字体文件，然后根据html源码的数字</span><br><span class="line">去woff字体文件里面查找真正的数字，讲到底就是一个映射关系/查找字典。如html源码是123，去woff文件里面</span><br><span class="line">查找出来的是：623。好了，看到这里，你一定想说：废话讲那么多干嘛？赶紧上教程啊！！</span><br></pre></td></tr></table></figure><h5 id="那先来看一下大致流程呗："><a href="#那先来看一下大致流程呗：" class="headerlink" title="那先来看一下大致流程呗："></a>那先来看一下大致流程呗：</h5><p><img src="https://img-blog.csdnimg.cn/20190826220504409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt></p><p>分析目标网站页面（在这里我不打算贴出网站地址，请大家自己找网站练习），这里看到html源码和页面展示的数字是不一致的，如下图：<br><img src="https://img-blog.csdnimg.cn/20190826220607308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tips：</span><br><span class="line">一开始不知道是怎么下手，只能谷歌搜索字体反爬，一搜果然很多说法，有说woff文件的、有说CSS的、还有说svg曲线啥的，</span><br><span class="line">然后我就去查看Network里面的All，就发现关键字眼woff，就开始猜测可能是属于这种类型的反爬手段，接着开始干活。</span><br></pre></td></tr></table></figure><h5 id="混淆前字体："><a href="#混淆前字体：" class="headerlink" title="混淆前字体："></a>混淆前字体：</h5><p><img src="https://img-blog.csdnimg.cn/20190826220646239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="混淆后的字体："><a href="#混淆后的字体：" class="headerlink" title="混淆后的字体："></a>混淆后的字体：</h5><p><img src="https://img-blog.csdnimg.cn/20190826220711496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="找了一会，发现-woff2文件和woff文件前后不一样，然后开始着手解决"><a href="#找了一会，发现-woff2文件和woff文件前后不一样，然后开始着手解决" class="headerlink" title="找了一会，发现.woff2文件和woff文件前后不一样，然后开始着手解决"></a>找了一会，发现.woff2文件和woff文件前后不一样，然后开始着手解决</h6><p><a href="https://pan.baidu.com/s/1YT1MF1cMfULl4yrJHXPoyg" target="_blank" rel="noopener">如需下载woff文件，请点击这里</a>， 提取码: ghnx</p><h6 id="但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的"><a href="#但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的" class="headerlink" title="但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的"></a>但是本地打不开woff字体文件，需要借助的软件是fontcreator，这个你自己去找一下，很多破解的</h6><p><img src="https://img-blog.csdnimg.cn/20190826220739753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但是这好像看不出什么，然后我们接着需要从另外一方面下手，重点来了》==将woff文件转换为xml文件==<br>如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> fontTools.ttLib <span class="keyword">import</span> TTFont</span><br><span class="line"></span><br><span class="line">base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://xxxxxx.xxx.woff"</span></span><br><span class="line">    </span><br><span class="line">woff_dir = os.path.join(base_dir, <span class="string">"statics/woffs/"</span>)</span><br><span class="line">file_name = url.split(<span class="string">"/"</span>)[<span class="number">-1</span>]</span><br><span class="line">xml_name = file_name.replace(file_name.split(<span class="string">"."</span>)[<span class="number">-1</span>], <span class="string">"xml"</span>)</span><br><span class="line">save_woff = os.path.join(woff_dir, file_name)</span><br><span class="line">save_xml = os.path.join(woff_dir, xml_name)</span><br><span class="line"></span><br><span class="line">resp = requests.get(url=<span class="string">"xxx"</span>)</span><br><span class="line"><span class="keyword">with</span> open(save_woff, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(resp.content)</span><br><span class="line">    f.close()</span><br><span class="line">font = TTFont(save_woff)</span><br><span class="line">font.saveXML(save_xml)  <span class="comment"># 转换为xml文件</span></span><br></pre></td></tr></table></figure></p><p>然后打开xml文件看，先来查看一下缩略的内容，红色圈圈的那两个是本次重点破解的分析的内容：<br><img src="https://img-blog.csdnimg.cn/20190822133456757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="主要涉及内容破解版块"></p><p>然后先查看cmap，发现线索，里面注释的地方有标注了。然后我们大胆猜测：NINE对应的name=cid00018，code=0x39，这翻译过来就是9对应的name=cid00018，其id标记为0x39：<br><img src="https://img-blog.csdnimg.cn/20190826220839525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>接着来看一下code=0x39，其对应的name=cid00018，然后我们拿这个cid00018去搜索，发现在<glyphorder>部分里面看到：<br><code>&lt;GlyphID id=&quot;3&quot; name=&quot;cid00018&quot;/&gt;</code>，这表明什么呢？结合前后两个映射关系，然后连起来再大胆猜测一下，可能是9对应3？<br><img src="https://img-blog.csdnimg.cn/20190826221219906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>为了验证这个猜想，继续再找一下其他例子，我使用已经转换为如下格式，方便你们对比，你们也可以从三张截图来对比，哪三张截图呢？分别是：①是前面包含“code=0x39，name=cid00018”的截图；②是包含“id=3，name=cid00018”的截图；③是文章的第二张截图。<br>你们可以①②截图来一个个列出映射关系，建议先列出①的映射关系，再列出②的映射关系，然后再将①、②的映射关系组合起来，得出一个新的映射关系，这个新的映射关系就是我们所需的，下面来给你们看一下我提取的①、②的映射关系：</glyphorder></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">①的映射关系，在这里我定义为before_code_id</span><br><span class="line">②的映射关系，在这里我定义为affter_code_id,结果如下：</span><br><span class="line">before_code_id =  &#123;</span><br><span class="line">    &quot;0&quot;: &quot;cid00019&quot;,</span><br><span class="line">    &quot;1&quot;: &quot;cid00020&quot;,</span><br><span class="line">    &quot;2&quot;: &quot;cid00017&quot;,</span><br><span class="line">    &quot;3&quot;: &quot;cid00021&quot;,</span><br><span class="line">    &quot;4&quot;: &quot;cid00022&quot;,</span><br><span class="line">    &quot;5&quot;: &quot;cid00024&quot;,</span><br><span class="line">    &quot;6&quot;: &quot;cid00026&quot;,</span><br><span class="line">    &quot;7&quot;: &quot;cid00025&quot;,</span><br><span class="line">    &quot;8&quot;: &quot;cid00023&quot;,</span><br><span class="line">    &quot;9&quot;: &quot;cid00018&quot;</span><br><span class="line">&#125;</span><br><span class="line">affter_code_id = &#123;</span><br><span class="line">    &quot;cid00017&quot;: 2,</span><br><span class="line">    &quot;cid00018&quot;: 3,</span><br><span class="line">    &quot;cid00019&quot;: 4,</span><br><span class="line">    &quot;cid00020&quot;: 5,</span><br><span class="line">    &quot;cid00021&quot;: 6,</span><br><span class="line">    &quot;cid00022&quot;: 7,</span><br><span class="line">    &quot;cid00023&quot;: 8,</span><br><span class="line">    &quot;cid00024&quot;: 9,</span><br><span class="line">    &quot;cid00025&quot;: 10,</span><br><span class="line">    &quot;cid00026&quot;: 11</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">然后从html源码到before_code_id, affter_code_id应用起来就是如下：</span><br><span class="line">前端数字—中间人code—最终的数字，即：</span><br><span class="line">&quot;0&quot;——&quot;cid00019&quot;——4</span><br><span class="line">&quot;1&quot;——&quot;cid00020&quot;——5</span><br><span class="line">&quot;2&quot;——&quot;cid00017&quot;——2</span><br><span class="line">&quot;3&quot;——&quot;cid00021&quot;——6</span><br><span class="line">&quot;4&quot;——&quot;cid00022&quot;——7</span><br><span class="line">&quot;5&quot;——&quot;cid00024&quot;——9</span><br><span class="line">&quot;6&quot;——&quot;cid00026&quot;——11</span><br><span class="line">&quot;7&quot;——&quot;cid00025&quot;——10</span><br><span class="line">&quot;8&quot;——&quot;cid00023&quot;——8</span><br><span class="line">&quot;9&quot;——&quot;cid00018——3</span><br><span class="line"></span><br><span class="line">我们再简化一步，直接从html源码数字到最终的数字映射为如下(即直接省去中间的cidxxxxx这串)：</span><br><span class="line">&quot;0&quot;——4</span><br><span class="line">&quot;1&quot;——5</span><br><span class="line">&quot;2&quot;——2</span><br><span class="line">&quot;3&quot;——6</span><br><span class="line">&quot;4&quot;——7</span><br><span class="line">&quot;5&quot;——9</span><br><span class="line">&quot;6&quot;——11</span><br><span class="line">&quot;7&quot;——10</span><br><span class="line">&quot;8&quot;——8</span><br><span class="line">&quot;9&quot;——3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">但是你们发现这映射后的数字很奇怪吗，比如&quot;6&quot;、&quot;7&quot;映射之后分别为11和10，</span><br><span class="line">但是在我们的正常逻辑之中不对呀，要不我们再列一下html源码跟前端的肉眼看到的数字的映射关系呗：</span><br><span class="line">&quot;0&quot;——2</span><br><span class="line">&quot;1&quot;——3</span><br><span class="line">&quot;2&quot;——0</span><br><span class="line">&quot;3&quot;——4</span><br><span class="line">&quot;4&quot;——5</span><br><span class="line">&quot;5&quot;——7</span><br><span class="line">&quot;6&quot;——9</span><br><span class="line">&quot;7&quot;——8</span><br><span class="line">&quot;8&quot;——6</span><br><span class="line">&quot;9&quot;——1</span><br><span class="line">哇，这列出来之后不是很相似吗，跟前面的结果，要不我再放在一起给你们好对比一下呗：</span><br><span class="line">xml提取的映射     html源码跟网页展示的，提取的映射</span><br><span class="line">&quot;0&quot;——4&quot;0&quot;——2</span><br><span class="line">&quot;1&quot;——5&quot;1&quot;——3</span><br><span class="line">&quot;2&quot;——2&quot;2&quot;——0</span><br><span class="line">&quot;3&quot;——6&quot;3&quot;——4</span><br><span class="line">&quot;4&quot;——7&quot;4&quot;——5</span><br><span class="line">&quot;5&quot;——9&quot;5&quot;——7</span><br><span class="line">&quot;6&quot;——11&quot;6&quot;——9</span><br><span class="line">&quot;7&quot;——10&quot;7&quot;——8</span><br><span class="line">&quot;8&quot;——8&quot;8&quot;——6</span><br><span class="line">&quot;9&quot;——3&quot;9&quot;——1</span><br></pre></td></tr></table></figure><p>到此，我们发现从xml提取的映射跟html源码跟网页展示的提取的映射数值都是相差2，所以我们大胆猜测：网页上看到的数值是可以从xml提取的映射关系里面每个数字减去2所得的，即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;0&quot;——4-2=2</span><br><span class="line">&quot;1&quot;——5--2=3</span><br><span class="line">&quot;2&quot;——2-2=0</span><br><span class="line">&quot;3&quot;——6-2=4</span><br><span class="line">&quot;4&quot;——7-2=5</span><br><span class="line">&quot;5&quot;——9-2=7</span><br><span class="line">&quot;6&quot;——11-2=9</span><br><span class="line">&quot;7&quot;——10-2=8</span><br><span class="line">&quot;8&quot;——8-2=6</span><br><span class="line">&quot;9&quot;——3-2=1</span><br></pre></td></tr></table></figure><p>所以这就是破解了嘛，到此，这个教程总可以理解吧，写得辣么辛苦、改的辣么辛苦，赶快评论点赞收藏一套走起来</p><p>好了，别嗨了，实操才是王道，下面来看一下核心代码，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/8/19 13:08</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : crawl_woff.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line"></span><br><span class="line"># 先安装：pip3 install fontTools</span><br><span class="line">import os</span><br><span class="line">import requests</span><br><span class="line">from fake_useragent import UserAgent</span><br><span class="line">from fontTools.ttLib import TTFont  # 对字体文件进行格式转换</span><br><span class="line"></span><br><span class="line">base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">ua = UserAgent()</span><br><span class="line">header = &#123;</span><br><span class="line">    &quot;user-agent&quot;: ua.chrome,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_woff(url=&quot;&quot;):</span><br><span class="line">    &quot;&quot;&quot;这里是下载字体并且解析对应的值&quot;&quot;&quot;</span><br><span class="line">    global cookie</span><br><span class="line">    global header</span><br><span class="line">    </span><br><span class="line">    woff_dir = os.path.join(base_dir, &quot;statics/woffs/&quot;)</span><br><span class="line">    file_name = url.split(&quot;/&quot;)[-1]</span><br><span class="line">    xml_name = file_name.replace(file_name.split(&quot;.&quot;)[-1], &quot;xml&quot;)</span><br><span class="line">    save_woff = os.path.join(woff_dir, file_name)</span><br><span class="line">    save_xml = os.path.join(woff_dir, xml_name)</span><br><span class="line"></span><br><span class="line">    if os.path.exists(save_woff):  # 存在本地的话直接提取本地的文件去解析即可省去下载，避免浪费资源</span><br><span class="line">        font = TTFont(save_woff)</span><br><span class="line">    else:</span><br><span class="line">        resp = requests.get(url=url, cookies=cookie, headers=header)</span><br><span class="line">        with open(save_woff, &quot;wb&quot;) as f:</span><br><span class="line">            f.write(resp.content)</span><br><span class="line">            f.close()</span><br><span class="line">        font = TTFont(save_woff)</span><br><span class="line">        font.saveXML(save_xml)  # 转换为xml文件</span><br><span class="line"></span><br><span class="line">    cmap = font.getBestCmap()  # 这个是xml源码里面的【数值-中间人code】映射，数值还不一定是html源码里面的数值，而是每位数经过加上一定的数值之后的</span><br><span class="line">    tmp = &#123;  # 这个是对应的才是我们需要的值,或者你也可以在每次获取的时候，将这个值对应减去48即可，就可以省去这这个映射</span><br><span class="line">        48: 0,  # html源码里面的0对应xml源码里面的48</span><br><span class="line">        49: 1,  # html源码里面的1对应xml源码里面的49</span><br><span class="line">        50: 2,  # html源码里面的2对应xml源码里面的50</span><br><span class="line">        51: 3,  # html源码里面的3对应xml源码里面的51</span><br><span class="line">        52: 4,  # html源码里面的4对应xml源码里面的52</span><br><span class="line">        53: 5,  # html源码里面的5对应xml源码里面的53</span><br><span class="line">        54: 6,  # html源码里面的6对应xml源码里面的54</span><br><span class="line">        55: 7,  # html源码里面的7对应xml源码里面的55</span><br><span class="line">        56: 8,  # html源码里面的8对应xml源码里面的56</span><br><span class="line">        57: 9,  # html源码里面的9对应xml源码里面的57</span><br><span class="line">    &#125;    # 注意：个人猜测以上这个tmp字典，xml源码的数字跟html源码数字的映射关系可能会定期改变的</span><br><span class="line"></span><br><span class="line">    before_code_id = &#123;&#125;  # 转换之后before_code_id为：1:cid00019  key就是html源码数字，value就是用来查询的中间人code</span><br><span class="line">    for k, v in cmap.items():</span><br><span class="line">        if k not in set(range(48, 58)):</span><br><span class="line">            continue</span><br><span class="line">        before_code_id[tmp.get(k)] = v  # 这一步其实是将49:cid00019的映射格式转换为好理解的1:cid00019映射关系</span><br><span class="line"></span><br><span class="line">    code_id_list = font.getGlyphOrder()[2:]  # 这个返回的值有11个，但是我这里只是取了第三个到最后一个，是用来取计算前端看到的真正的数值</span><br><span class="line">    affter_code_id = &#123;k:v for k,v in zip(code_id_list, range(2, 12))&#125;  # 将每一个按照顺序映射为cid00562:2这种</span><br><span class="line"></span><br><span class="line">    return before_code_id, affter_code_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    &quot;&quot;&quot;使用如下&quot;&quot;&quot;</span><br><span class="line">    before_code_id, affter_code_id = parse_woff(url=&quot;xxxx&quot;)</span><br><span class="line">    </span><br><span class="line">    # html源码数字：假设为0</span><br><span class="line">    html_number = 0</span><br><span class="line">    tmp_code = before_code_id.get(html_number)  # 先匹配中间人code</span><br><span class="line">    real_number = affter_code_id.get(tmp_code) - 2  # 再提取中间人code对应的真正的数字，记得要减去2，因为本来是每位数字已经多了2</span><br><span class="line">    print(&quot;当前html源码数字html_number:&#123;&#125; 真正的数字为real_number:&#123;&#125;&quot;.format(html_number, real_number))</span><br></pre></td></tr></table></figure></p><p>当前的woff字体反爬已经破解了，如果有不妥的地方请指出，大家一起学习。</p><h5 id="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"><a href="#至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗" class="headerlink" title="至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗"></a>至此本文教程写完了，希望能够帮助到各位在爬虫路上的小伙伴们，觉得不错点个赞呗</h5><h5 id="感谢认真读完这篇教程的您"><a href="#感谢认真读完这篇教程的您" class="headerlink" title="感谢认真读完这篇教程的您"></a>感谢认真读完这篇教程的您</h5><p>先别走呗，这里有可能有你需要的文章：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41173374/article/details/100053060" target="_blank" rel="noopener">CSS字体反爬实战，10分钟就能学会</a>；<br><a href="https://blog.csdn.net/weixin_41173374/article/details/99212145" target="_blank" rel="noopener">爬虫：js逆向目前遇到的知识点集合</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;声明：本帖子仅是用于学习用途，请勿与用于恶意破坏别人网站，本人不承担法律责任。&lt;/p&gt;&lt;p&gt;来继续学爬虫呀！&lt;/p&gt;&lt;h6 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h6&gt;&lt;h6 id=&quot;简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&quot;&gt;&lt;a href=&quot;#简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&quot; class=&quot;headerlink&quot; title=&quot;简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&quot;&gt;&lt;/a&gt;简单描述一下这种手段，html源码的数字跟页面展示的数字是不一致的！当时就一脸黑人问号，嗯？？？&lt;/h6&gt;
    
    </summary>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/categories/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="反爬虫" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="字体反爬" scheme="http://yoursite.com/tags/%E5%AD%97%E4%BD%93%E5%8F%8D%E7%88%AC/"/>
    
  </entry>
  
  <entry>
    <title>从pdf提取图片，有两个库可以提取fitz（要install pymupdf）、pdfminer（install pdfminer3k）</title>
    <link href="http://yoursite.com/2019/08/06/extract-pdf/"/>
    <id>http://yoursite.com/2019/08/06/extract-pdf/</id>
    <published>2019-08-06T13:19:38.000Z</published>
    <updated>2019-11-30T08:05:21.117Z</updated>
    
    <content type="html"><![CDATA[<p>前言:下面的代码有注释，下面的也是参考别人的，但是忘记来源了，因为时间隔太久了，哪位小伙伴看到了，可以提一下链接</p><h6 id="方法一，这个测试是有用的，fitz（要install-pymupdf）"><a href="#方法一，这个测试是有用的，fitz（要install-pymupdf）" class="headerlink" title="方法一，这个测试是有用的，fitz（要install pymupdf）"></a>方法一，这个测试是有用的，fitz（要install pymupdf）</h6><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/3/19 08:51</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : fetch_pdf_v1.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line"></span><br><span class="line">import fitz  # pip3 install pymupdf</span><br><span class="line">import time</span><br><span class="line">import re</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_image(path, pic_path):</span><br><span class="line">    &apos;&apos;&apos;从pdf中提取图片</span><br><span class="line">    :param path: pdf的路径</span><br><span class="line">    :param pic_path: 图片保存的路径</span><br><span class="line">    :return: 无return</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    t0 = time.clock()</span><br><span class="line">    # 00、使用正则表达式查找PDF中的图片</span><br><span class="line">    checkXO = r&quot;/Type(?= */XObject)&quot;</span><br><span class="line">    checkIM = r&quot;/Subtype(?= */Image)&quot;</span><br><span class="line"></span><br><span class="line">    # 一、打开pdf，打印PDF的相关信息</span><br><span class="line">    doc = fitz.open(path)</span><br><span class="line">    # 图片计数</span><br><span class="line">    imgcount = 0</span><br><span class="line">    lenXREF = doc._getXrefLength()</span><br><span class="line"></span><br><span class="line">    # 打印PDF的信息</span><br><span class="line">    print(&quot;文件名:&#123;&#125;, 页数: &#123;&#125;, 对象: &#123;&#125;&quot;.format(path, len(doc), lenXREF - 1))</span><br><span class="line"></span><br><span class="line">    # 二、遍历PDF中的对象，遇到是图像才进行下一步，不然就continue</span><br><span class="line">    for i in range(1, lenXREF):</span><br><span class="line">        # 定义对象字符串</span><br><span class="line">        # text = doc._getObjectString(i)</span><br><span class="line">        text = doc._getXrefString(i)</span><br><span class="line">        # print(text)</span><br><span class="line">        # continue</span><br><span class="line">        isXObject = re.search(checkXO, text)</span><br><span class="line">        # 使用正则表达式查看是否是图片</span><br><span class="line">        isImage = re.search(checkIM, text)</span><br><span class="line">        # 如果不是对象也不是图片，则continue</span><br><span class="line">        if not isXObject or not isImage:</span><br><span class="line">            print(&quot;不是图片&quot;)</span><br><span class="line">            continue</span><br><span class="line">        imgcount += 1</span><br><span class="line">        # 根据索引生成图像</span><br><span class="line">        pix = fitz.Pixmap(doc, i)</span><br><span class="line">        # 根据pdf的路径生成图片的名称</span><br><span class="line">        new_name = path.replace(&apos;\\&apos;, &apos;_&apos;) + &quot;_img&#123;&#125;.png&quot;.format(imgcount)</span><br><span class="line">        new_name = new_name.replace(&apos;:&apos;, &apos;&apos;)</span><br><span class="line"></span><br><span class="line">        # 三、将图像存为png格式</span><br><span class="line">        # 如果pix.n&lt;5,可以直接存为PNG</span><br><span class="line">        if pix.n &lt; 5:</span><br><span class="line">            pix.writePNG(os.path.join(pic_path, new_name))</span><br><span class="line">        # 否则先转换CMYK</span><br><span class="line">        else:</span><br><span class="line">            pix0 = fitz.Pixmap(fitz.csRGB, pix)</span><br><span class="line">            pix0.writePNG(os.path.join(pic_path, new_name))</span><br><span class="line">            pix0 = None</span><br><span class="line">        # 释放资源</span><br><span class="line">        pix = None</span><br><span class="line">    t1 = time.clock()</span><br><span class="line">    print(&quot;运行时间:&#123;&#125;s&quot;.format(t1 - t0))</span><br><span class="line">    print(&quot;提取了&#123;&#125;张图片&quot;.format(imgcount))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 运行</span><br><span class="line">if __name__==&apos;__main__&apos;:</span><br><span class="line">    # pdf路径</span><br><span class="line">    path = r&quot;Selenium 自动化爬虫.pdf&quot;  # 测试提取图片专用  Selenium 自动化爬虫</span><br><span class="line">    pic_path = r&quot;image&quot;</span><br><span class="line">    # 创建保存图片的文件夹</span><br><span class="line">    if os.path.exists(pic_path):</span><br><span class="line">        print(&quot;文件夹已存在，请重新创建新文件夹！&quot;)</span><br><span class="line">        raise SystemExit</span><br><span class="line">    else:</span><br><span class="line">        os.mkdir(pic_path)</span><br><span class="line">    get_image(path, pic_path)</span><br></pre></td></tr></table></figure><h6 id="方法二、pdfminer（install-pdfminer3k）这个提取文字还可以，提取图片暂时识别不了"><a href="#方法二、pdfminer（install-pdfminer3k）这个提取文字还可以，提取图片暂时识别不了" class="headerlink" title="方法二、pdfminer（install pdfminer3k）这个提取文字还可以，提取图片暂时识别不了"></a>方法二、pdfminer（install pdfminer3k）这个提取文字还可以，提取图片暂时识别不了</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2019/3/19 11:21</span><br><span class="line"># @Author  : qizai</span><br><span class="line"># @File    : fetch_pdf_v2.py</span><br><span class="line"># @Software: PyCharm</span><br><span class="line"></span><br><span class="line">from pdfminer.pdfparser import PDFParser, PDFDocument</span><br><span class="line">from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter, PDFTextExtractionNotAllowed</span><br><span class="line">from pdfminer.converter import PDFPageAggregator</span><br><span class="line">from pdfminer.layout import LTTextBoxHorizontal, LAParams, LTImage, LTCurve, LTFigure</span><br><span class="line"></span><br><span class="line"># 如果要提取图片，那么需要导入一下几个库</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from binascii import b2a_hex</span><br><span class="line"></span><br><span class="line">images_folder = r&apos;image&apos;  # 提取图片存放的路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def save_image(lt_image, page_number, images_folder):</span><br><span class="line">    &quot;&quot;&quot;Try to save the image data from this LTImage object, and return the file name, if successful</span><br><span class="line">    从LTImage object中保存图像数据，这需要依赖两个函数determine_image_type、write_file</span><br><span class="line">    :return file_name 文件名</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    result = None</span><br><span class="line">    if lt_image.stream:</span><br><span class="line">        file_stream = lt_image.stream.get_rawdata()</span><br><span class="line">        file_ext = determine_image_type(file_stream[0:4])</span><br><span class="line">    if file_ext:</span><br><span class="line">        file_name = &apos;&apos;.join([str(page_number), &apos;_&apos;, lt_image.name, file_ext])</span><br><span class="line">    if write_file(images_folder, file_name, lt_image.stream.get_rawdata(), flags=&apos;wb&apos;):</span><br><span class="line">        result = file_name</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def determine_image_type (stream_first_4_bytes):</span><br><span class="line">    &quot;&quot;&quot;Find out the image file type based on the magic number comparison of the first 4 (or 2) bytes&quot;&quot;&quot;</span><br><span class="line">    file_type = None</span><br><span class="line">    bytes_as_hex = b2a_hex(stream_first_4_bytes)</span><br><span class="line">    if bytes_as_hex.startswith(&apos;ffd8&apos;):</span><br><span class="line">        file_type = &apos;.jpeg&apos;</span><br><span class="line">    elif bytes_as_hex == &apos;89504e47&apos;:</span><br><span class="line">        file_type = &apos;,png&apos;</span><br><span class="line">    elif bytes_as_hex == &apos;47494638&apos;:</span><br><span class="line">        file_type = &apos;.gif&apos;</span><br><span class="line">    elif bytes_as_hex.startswith(&apos;424d&apos;):</span><br><span class="line">        file_type = &apos;.bmp&apos;</span><br><span class="line">    return file_type</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def write_file(folder, filename, filedata, flags=&apos;w&apos;):</span><br><span class="line">    &quot;&quot;&quot;Write the file data to the folder and filename combination</span><br><span class="line">    (flags: &apos;w&apos; for write text, &apos;wb&apos; for write binary, use &apos;a&apos; instead of &apos;w&apos; for append)</span><br><span class="line">    :param flags:写入文件格式(w,wb,a) floder</span><br><span class="line">    将文件数据写入文件夹和文件名组合</span><br><span class="line">    :return</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    result = False</span><br><span class="line">    if os.path.isdir(folder):</span><br><span class="line">        try:</span><br><span class="line">            file_obj = open(os.path.join(folder, filename), flags)</span><br><span class="line">            file_obj.write(filedata)</span><br><span class="line">            file_obj.close()</span><br><span class="line">            result = True</span><br><span class="line">        except IOError as e:</span><br><span class="line">            print(&quot;报错了,报错信息如下:\n&#123;&#125;&quot;.format(e))</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_read(path, toPath, image_path):</span><br><span class="line">    # 以二进制形式打开pdf文件</span><br><span class="line">    with open(path, &quot;rb&quot;) as f:</span><br><span class="line">        # 创建一个pdf文档分析器</span><br><span class="line">        parser = PDFParser(f)</span><br><span class="line">        # 创建pdf文档</span><br><span class="line">        pdfFile = PDFDocument()</span><br><span class="line">        # 链接分析器与文档对象</span><br><span class="line">        parser.set_document(pdfFile)</span><br><span class="line">        pdfFile.set_parser(parser)</span><br><span class="line">        # 提供初始化密码</span><br><span class="line">        pdfFile.initialize()</span><br><span class="line">        # 检测文档是否提供txt转换</span><br><span class="line">    if not pdfFile.is_extractable:</span><br><span class="line">        print(&quot;不提供txt转换&quot;)</span><br><span class="line">        raise PDFTextExtractionNotAllowed</span><br><span class="line">    else:</span><br><span class="line">        # 解析数据</span><br><span class="line">        # 数据管理</span><br><span class="line">        manager = PDFResourceManager()</span><br><span class="line">        # 创建一个PDF设备对象</span><br><span class="line">        laparams = LAParams()</span><br><span class="line">        device = PDFPageAggregator(manager, laparams=laparams)</span><br><span class="line">        # 解释器对象</span><br><span class="line">        interpreter = PDFPageInterpreter(manager, device)</span><br><span class="line"></span><br><span class="line">        num_page, num_image, num_curve, num_figure, num_TextBoxHorizontal = 0, 0, 0, 0, 0</span><br><span class="line"></span><br><span class="line">        # 循环遍历列表，每次处理一个page的内容</span><br><span class="line">        for page in pdfFile.get_pages():  # doc.get_pages() 获取page列表</span><br><span class="line">            num_page += 1  # 页面增一</span><br><span class="line">            interpreter.process_page(page)</span><br><span class="line">            # 接收该页面的LTPage对象</span><br><span class="line">            layout = device.get_result()</span><br><span class="line">            for content in layout:</span><br><span class="line">                print(content)</span><br><span class="line">                if isinstance(content, LTImage):  # 图片对象</span><br><span class="line">                    num_image += 1</span><br><span class="line">                if isinstance(content, LTCurve):  # 曲线对象</span><br><span class="line">                    num_curve += 1</span><br><span class="line">                if isinstance(content, LTFigure):  # figure对象</span><br><span class="line">                    num_figure += 1</span><br><span class="line"></span><br><span class="line">                # 也可以判断是否含有get_text()方法。图片之类的就没有</span><br><span class="line">                # if hasattr(out,&quot;get_text&quot;):</span><br><span class="line">                if isinstance(content, LTTextBoxHorizontal):</span><br><span class="line">                    with open(toPath, &quot;a&quot;, encoding=&apos;utf-8&apos;) as f:</span><br><span class="line">                        str = content.get_text()</span><br><span class="line">                        # print(str)</span><br><span class="line">                        f.write(str)</span><br><span class="line"></span><br><span class="line">                if isinstance(content, LTImage):</span><br><span class="line">                    print(&quot;检测到图片&quot;)</span><br><span class="line">                    with open(image_path, &quot;wb&quot;) as f:</span><br><span class="line">                        im_name = content.name</span><br><span class="line">                        im_with = content.width</span><br><span class="line">                        im_height = content.height</span><br><span class="line">                        im_name = content.imagemask</span><br><span class="line">                try:</span><br><span class="line">                    save_image(content, num_page, images_folder)</span><br><span class="line">                    print(&quot;提取正常&quot;)</span><br><span class="line">                except Exception as e:</span><br><span class="line">                    print(&quot;图片提取异常&quot;, e)</span><br><span class="line">            print(&apos;对象数量：\n&apos;, &apos;页面数：%s\n&apos; % num_page, &apos;图片数：%s\n&apos; % num_image, &apos;曲线数：%s\n&apos; % num_curve, &apos;水平文本框：%s\n&apos;</span><br><span class="line">                  % num_TextBoxHorizontal)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__==&apos;__main__&apos;:</span><br><span class="line">    path = r&quot;Selenium 自动化爬虫.pdf&quot;  # 测试提取图片pdf </span><br><span class="line">to_path = r&quot;读取pdf文件03.txt&quot;</span><br><span class="line">image_path = r&quot;帅哥.png&quot;  # 这里只是提取报存一张，如果你是提取很多的话，这个得需要改一下</span><br><span class="line">get_read(path, to_path, image_path)</span><br></pre></td></tr></table></figure><h6 id="前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你"><a href="#前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你" class="headerlink" title="前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你"></a>前面的代码都是经过我自己测试的，但写文章的时候稍有改动，但不影响运行，微薄之力，希望能够帮助到你</h6><h4 id="感谢阅读！"><a href="#感谢阅读！" class="headerlink" title="感谢阅读！"></a>感谢阅读！</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言:下面的代码有注释，下面的也是参考别人的，但是忘记来源了，因为时间隔太久了，哪位小伙伴看到了，可以提一下链接&lt;/p&gt;&lt;h6 id=&quot;方法一，这个测试是有用的，fitz（要install-pymupdf）&quot;&gt;&lt;a href=&quot;#方法一，这个测试是有用的，fitz（要install-pymupdf）&quot; class=&quot;headerlink&quot; title=&quot;方法一，这个测试是有用的，fitz（要install pymupdf）&quot;&gt;&lt;/a&gt;方法一，这个测试是有用的，fitz（要install pymupdf）&lt;/h6&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="PDF" scheme="http://yoursite.com/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ Ubuntu18.0.4安装及简单使用</title>
    <link href="http://yoursite.com/2019/06/19/rabbitmq/"/>
    <id>http://yoursite.com/2019/06/19/rabbitmq/</id>
    <published>2019-06-19T05:59:34.000Z</published>
    <updated>2019-11-30T08:28:09.885Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0x01、安装依赖erlang"><a href="#0x01、安装依赖erlang" class="headerlink" title="0x01、安装依赖erlang"></a>0x01、安装依赖erlang</h5><p>由于rabbitMq需要erlang语言的支持，在安装rabbitMq之前需要安装erlang</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install erlang-nox</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="0x02、安装Rabbitmq"><a href="#0x02、安装Rabbitmq" class="headerlink" title="0x02、安装Rabbitmq"></a>0x02、安装Rabbitmq</h5><p>先更新apt源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>然后安装rabbitmq</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install rabbitmq-server</span><br></pre></td></tr></table></figure><p>启动、停止、重启、状态rabbitMq命令，<a href="https://blog.csdn.net/u013256816/article/details/53524814" target="_blank" rel="noopener">详情使用链接请点击这里</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">服务启动关闭</span><br><span class="line">rabbitmq-server -detached  # 可以后台启动</span><br><span class="line">rabbitmqctl stop  # 可以停止</span><br><span class="line"></span><br><span class="line">下面是一些命令，但是有些测试了出现不能起作用</span><br><span class="line">sudo rabbitmq-server start  # 这个启动不能再后台启动，so不推荐使用</span><br><span class="line">sudo rabbitmq-server stop  # 好像不能使用这条命令，停止的正确命令在下面的命令，报错ERROR: node with name &quot;rabbit&quot; already running on &quot;develop&quot;</span><br><span class="line">sudo rabbitmq-server restart  # 这条好像也是不能起作用，报错ERROR: node with name &quot;rabbit&quot; already running on &quot;develop&quot;</span><br><span class="line">sudo rabbitmqctl status  # 可以查看运行的状态信息</span><br></pre></td></tr></table></figure><h5 id="0x03、添加admin，并赋予administrator权限"><a href="#0x03、添加admin，并赋予administrator权限" class="headerlink" title="0x03、添加admin，并赋予administrator权限"></a>0x03、添加admin，并赋予administrator权限</h5><p>添加admin用户，密码设置为admin。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rabbitmqctl add_user  admin  admin</span><br></pre></td></tr></table></figure></p><p>赋予权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rabbitmqctl set_user_tags admin administrator</span><br></pre></td></tr></table></figure></p><p>赋予virtual host中所有资源的配置、写、读权限以便管理其中的资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rabbitmqctl  set_permissions -p / admin &apos;.*&apos; &apos;.*&apos; &apos;.*&apos;</span><br></pre></td></tr></table></figure></p><h5 id="0x04、RabbitMQ-GUID使用"><a href="#0x04、RabbitMQ-GUID使用" class="headerlink" title="0x04、RabbitMQ GUID使用"></a>0x04、RabbitMQ GUID使用</h5><p>1、官方提供的一个web管理工具（rabbitmq_management）<a href="http://www.rabbitmq.com/management.html" target="_blank" rel="noopener">点击我进行了解</a>）</p><p>2、安装了Rabbitmq后，默认也安装了该管理工具，执行命令即可启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo  rabbitmq-plugins enable rabbitmq_management  #（先定位到rabbitmq安装目录）</span><br></pre></td></tr></table></figure><p>3、浏览器访问<code>http://你的rabbitmq ip:15672/</code></p><p>输入刚刚创建的账号密码即可访问(这里我设置的都是admin，你们的需要根据实际情况来调整)</p><p><img src="https://img-blog.csdnimg.cn/20191104151201409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTE3MzM3NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="0x05、总结常用命令"><a href="#0x05、总结常用命令" class="headerlink" title="0x05、总结常用命令"></a>0x05、总结常用命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-server -detached  # 后台启动</span><br><span class="line">sudo rabbitmq-server start  # 阻塞启动，一直处于阻塞状态，不能后台，想后台挂起的话，需要启动后按Ctrl+z才行 </span><br><span class="line">rabbitmqctl stop  # 停止</span><br><span class="line">rabbitmqctl status  # 查看服务器状态</span><br><span class="line">rabbitmqctl list_queues  # 查看队列信息</span><br><span class="line">rabbitmqctl add_user  admin  admin  # 添加用户及密码</span><br><span class="line">rabbitmqctl set_user_tags admin administrator  # 给admin用户赋权限</span><br><span class="line">rabbitmqctl  set_permissions -p / admin &apos;.*&apos; &apos;.*&apos; &apos;.*&apos;  # 赋予virtual host中所有资源的配置、写、读权限以便管理其中的资源</span><br><span class="line">rabbitmq-plugins enable  # 激活管理工具</span><br><span class="line"></span><br><span class="line">查看到存在的参数有：</span><br><span class="line">&#123;start|stop|status|rotate-logs|restart|condrestart|try-restart|reload|force-reload&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">另外补充的：</span><br><span class="line">service rabbitmq-server   start</span><br><span class="line">service rabbitmq-server   stop</span><br><span class="line">service rabbitmq-server   status</span><br><span class="line">service rabbitmq-server   rotate-logs|</span><br><span class="line">service rabbitmq-server   restart</span><br><span class="line">service rabbitmq-server   condrestart</span><br><span class="line">service rabbitmq-server   try-restart</span><br><span class="line">service rabbitmq-server   reload</span><br><span class="line">service rabbitmq-server   force-reload</span><br><span class="line"></span><br><span class="line">ps -ef | grep rabbitmq  查看rabbitMq进程</span><br><span class="line"></span><br><span class="line">kill -9 pid</span><br><span class="line"></span><br><span class="line">netstat -anplt | grep LISTEN  rabbitmq默认监听端口15672/5672</span><br></pre></td></tr></table></figure><h5 id="0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法-这样描述如有不到位请指出"><a href="#0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法-这样描述如有不到位请指出" class="headerlink" title="0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法(这样描述如有不到位请指出)"></a>0x06、限制rabbitmq只监听本地的localhost，防外网入侵的，简单做法(这样描述如有不到位请指出)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参考链接</span><br><span class="line">原文(英文)：https://stackoverflow.com/questions/57225331/bind-rabbitmq-to-localhost-on-ubuntu-server-18-04/57225410#57225410</span><br><span class="line"></span><br><span class="line">中文版：https://codeday.me/bug/20181105/356153.html</span><br><span class="line"></span><br><span class="line">可以查看监听情况</span><br><span class="line">lsof -n -a -i -urabbitmq</span><br></pre></td></tr></table></figure><p>两个主要文件内容：<br>/etc/rabbitmq/rabbitmq-env.conf(存在)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">export RABBITMQ_CONFIG_FILE=&quot;/etc/rabbitmq/rabbit&quot;</span><br><span class="line"></span><br><span class="line"># Defaults to rabbit. This can be useful if you want to run more than one node</span><br><span class="line"># per machine - RABBITMQ_NODENAME should be unique per erlang-node-and-machine</span><br><span class="line"># combination. See the clustering on a single machine guide for details:</span><br><span class="line"># http://www.rabbitmq.com/clustering.html#single-machine</span><br><span class="line">#NODENAME=rabbit</span><br><span class="line"></span><br><span class="line"># By default RabbitMQ will bind to all interfaces, on IPv4 and IPv6 if</span><br><span class="line"># available. Set this if you only want to bind to one network interface or#</span><br><span class="line"># address family.</span><br><span class="line">#NODE_IP_ADDRESS=127.0.0.1</span><br><span class="line"></span><br><span class="line"># Defaults to 5672.</span><br><span class="line">#NODE_PORT=5672</span><br><span class="line"></span><br><span class="line"># 2019-10-30 添加下边的让rabbitmq和epmd只是监听本地的</span><br><span class="line">export RABBITMQ_NODENAME=rabbit@localhost</span><br><span class="line">export RABBITMQ_NODE_IP_ADDRESS=127.0.0.1</span><br><span class="line">export ERL_EPMD_ADDRESS=127.0.0.1</span><br></pre></td></tr></table></figure></p><p>/etc/rabbitmq/rabbitmq.config(自建)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># [&#123;kernel,[&#123;inet_dist_use_interface,&#123;127,0,0,1&#125;&#125;]&#125;].</span><br><span class="line">[</span><br><span class="line">    &#123;rabbitmq_management, [</span><br><span class="line">        &#123;listener, [&#123;port, 15672&#125;, &#123;ip, &quot;127.0.0.1&quot;&#125;]&#125;</span><br><span class="line">    ]&#125;,</span><br><span class="line">    &#123;kernel, [</span><br><span class="line">        &#123;inet_dist_use_interface,&#123;127,0,0,1&#125;&#125;</span><br><span class="line">    ]&#125;</span><br><span class="line">].</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0x01、安装依赖erlang&quot;&gt;&lt;a href=&quot;#0x01、安装依赖erlang&quot; class=&quot;headerlink&quot; title=&quot;0x01、安装依赖erlang&quot;&gt;&lt;/a&gt;0x01、安装依赖erlang&lt;/h5&gt;&lt;p&gt;由于rabbitMq需要erlang语言的支持，在安装rabbitMq之前需要安装erlang&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install erlang-nox&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="RabbitMQ" scheme="http://yoursite.com/tags/RabbitMQ/"/>
    
      <category term="消息队列" scheme="http://yoursite.com/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
</feed>
